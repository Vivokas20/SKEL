schema df_customers(customer_id:int, payment_method:str, customer_name:str, customer_phone:str, customer_email:str, customer_address:str, customer_login:str, customer_password:str);
schema df_mailshot_customers(mailshot_id:int, customer_id:int, outcome_code:str, mailshot_customer_date:str);

table df_customers(df_customers);
table df_mailshot_customers(df_mailshot_customers);

query q1
`select t2.customer_name
from df_mailshot_customers as t1
join df_customers as t2 on t1.customer_id = t2.customer_id
where outcome_code = 'order'
group by t1.customer_id
having count(*) >= 2`;

query q2
`joining, by = c("outcome_code", "customer_id")
joining, by = "customer_id"
select distinct customer_name
from
  (select outcome_code,
          customer_id,
          n,
          mailshot_id,
          mailshot_customer_date,
          payment_method,
          customer_name,
          customer_phone,
          customer_email,
          customer_address,
          customer_login,
          customer_password
   from
     (select outcome_code,
             customer_id,
             n,
             mailshot_id,
             mailshot_customer_date
      from
        (select outcome_code,
                customer_id,
                count(*) as n
         from input1
         group by outcome_code,
                  customer_id) as lhs
      inner join input1 as rhs on (lhs.outcome_code = rhs.outcome_code
                                       and lhs.customer_id = rhs.customer_id)) as lhs
   inner join input0 as rhs on (lhs.customer_id = rhs.customer_id))
where (outcome_code = 'order'
       and n = 2.0)`;

verify q1 q2;