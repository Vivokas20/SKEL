schema df_products(product_id:int, product_type_code:str, product_name:str, product_price:str);
schema df_customer_orders(order_id:int, customer_id:int, order_status_code:str, order_date:str);
schema df_order_items(order_item_id:int, order_id:int, product_id:int);

table df_products(df_products);
table df_customer_orders(df_customer_orders);
table df_order_items(df_order_items);

query q1
`select distinct t3.product_name
from df_customer_orders as t1
join df_order_items as t2 on t1.order_id = t2.order_id
join df_products as t3 on t2.product_id = t3.product_id
group by t3.product_id
having count (distinct t1.customer_id) >= 2`;

query q2
`select product_name
from
  (select product_name,
          count(distinct customer_id) as n_distinct
   from
     (select lhs.product_id as product_id,
             lhs.product_type_code as product_type_code,
             lhs.product_name as product_name,
             lhs.product_price as product_price,
             lhs.order_id as order_id,
             lhs.customer_id as customer_id,
             lhs.order_status_code as order_status_code,
             lhs.order_date as order_date,
             rhs.order_item_id as order_item_id
      from
        (select lhs.product_id as product_id,
                lhs.product_type_code as product_type_code,
                lhs.product_name as product_name,
                lhs.product_price as product_price,
                rhs.order_id as order_id,
                rhs.customer_id as customer_id,
                rhs.order_status_code as order_status_code,
                rhs.order_date as order_date
         from df_products as lhs
         cross join df_customer_orders as rhs) as lhs
      inner join df_order_items as rhs on (lhs.product_id = rhs.product_id
                                           and lhs.order_id = rhs.order_id))
   group by product_name)
where (n_distinct = 2.0)`;

verify q1 q2;