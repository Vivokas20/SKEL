schema df_basketball_match(team_id:int, school_id:int, team_name:str, acc_regular_season:str, acc_percent:str, acc_home:str, acc_road:str, all_games:str, all_games_percent:str, all_home:str, all_road:str, all_neutral:str);
schema df_university(school_id:int, school:str, location:str, founded:str, affiliation:str, enrollment:str, nickname:str, primary_conference:str);

table df_basketball_match(df_basketball_match);
table df_university(df_university);

query q1
`select count(*)
from df_university df_university
where school_id not in
    (select school_id
     from df_basketball_match df_basketball_match)`;

query q2
`select distinct team_id as count...
from
  (select lhs.team_id as team_id,
          lhs.school_id as school_id,
          lhs.team_name as team_name,
          lhs.acc_regular_season as acc_regular_season,
          lhs.acc_percent as acc_percent,
          lhs.acc_home as acc_home,
          lhs.acc_road as acc_road,
          lhs.all_games as all_games,
          lhs.all_games_percent as all_games_percent,
          lhs.all_home as all_home,
          lhs.all_road as all_road,
          lhs.all_neutral as all_neutral,
          rhs.enrollment as enrollment,
          rhs.school as school
   from df_basketball_match as lhs
   inner join
     (select enrollment,
             school,
             count(*) as n
      from df_university df_university
      group by enrollment,
               school) as rhs on (lhs.team_id = rhs.n))`;

verify q1 q2;