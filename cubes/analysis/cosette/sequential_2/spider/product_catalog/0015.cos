schema df_catalog_contents(catalog_entry_id:int, catalog_level_number:int, parent_entry_id:int, previous_entry_id:int, next_entry_id:int, catalog_entry_name:str, product_stock_number:str, price_in_dollars:str, price_in_euros:str, price_in_pounds:str, capacity:int, length:int, height:int, width:int);
schema df_catalog_contents_additional_attributes(catalog_entry_id:int, catalog_level_number:int, attribute_id:int, attribute_value:int);

table df_catalog_contents(df_catalog_contents);
table df_catalog_contents_additional_attributes(df_catalog_contents_additional_attributes);

query q1
`select t1.catalog_entry_name
from df_catalog_contents as t1
join df_catalog_contents_additional_attributes as t2 on t1.catalog_entry_id = t2.catalog_entry_id
where t2.catalog_level_number = "8"`;

query q2
`select catalog_entry_name
from
  (select lhs.catalog_entry_id as catalog_entry_id,
          lhs.catalog_level_number as catalog_level_number,
          lhs.attribute_id as attribute_id,
          lhs.attribute_value as attribute_value,
          rhs.catalog_level_number as catalog_level_number.other,
          rhs.parent_entry_id as parent_entry_id,
          rhs.previous_entry_id as previous_entry_id,
          rhs.next_entry_id as next_entry_id,
          rhs.catalog_entry_name as catalog_entry_name,
          rhs.product_stock_number as product_stock_number,
          rhs.price_in_dollars as price_in_dollars,
          rhs.price_in_euros as price_in_euros,
          rhs.price_in_pounds as price_in_pounds,
          rhs.capacity as capacity,
          rhs.length as length,
          rhs.height as height,
          rhs.width as width
   from
     (select *
      from df_catalog_contents_additional_attributes df_catalog_contents_additional_attributes
      where (catalog_level_number = 8.0)) as lhs
   inner join df_catalog_contents as rhs on (lhs.catalog_entry_id = rhs.catalog_entry_id))`;

verify q1 q2;