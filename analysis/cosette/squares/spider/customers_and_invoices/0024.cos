schema df_accounts(account_id:int, customer_id:int, date_account_opened:str, account_name:int, other_account_details:str);
schema df_financial_transactions(transaction_id:int, account_id:int, invoice_number:int, transaction_type:str, transaction_date:str, transaction_amount:str, transaction_comment:str, other_transaction_details:str);

table df_accounts(df_accounts);
table df_financial_transactions(df_financial_transactions);

query q1
`select t1.account_id,
       t2.account_name
from df_financial_transactions as t1
join df_accounts as t2 on t1.account_id = t2.account_id
group by t1.account_id
having count(*) >= 4`;

query q2
`joining, by = "account_id"
joining, by = c("account_id", "other_transaction_details")
select distinct account_id,
                account_name
from
  (select transaction_id,
          account_id,
          invoice_number,
          transaction_type,
          transaction_date,
          transaction_amount,
          transaction_comment,
          other_transaction_details,
          customer_id,
          date_account_opened,
          account_name,
          other_account_details,
          n
   from
     (select transaction_id,
             account_id,
             invoice_number,
             transaction_type,
             transaction_date,
             transaction_amount,
             transaction_comment,
             other_transaction_details,
             customer_id,
             date_account_opened,
             account_name,
             other_account_details
      from input1 as lhs
      inner join input0 as rhs on (lhs.account_id = rhs.account_id)) as lhs
   inner join
     (select account_id,
             other_transaction_details,
             count(*) as n
      from input1
      group by account_id,
               other_transaction_details) as rhs on (lhs.account_id = rhs.account_id
                                                         and lhs.other_transaction_details = rhs.other_transaction_details))
where (n >= 4.0)`;

verify q1 q2;