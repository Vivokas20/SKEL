schema df_customers(customer_id:int, payment_method:str, customer_name:str, customer_phone:str, customer_email:str, customer_address:str, customer_login:str, customer_password:str);
schema df_mailshot_customers(mailshot_id:int, customer_id:int, outcome_code:str, mailshot_customer_date:str);

table df_customers(df_customers);
table df_mailshot_customers(df_mailshot_customers);

query q1
`select t2.customer_name
from df_mailshot_customers as t1
join df_customers as t2 on t1.customer_id = t2.customer_id
where outcome_code = 'order'
group by t1.customer_id
having count(*) >= 2`;

query q2
`select customer_name
from
  (select customer_name,
          outcome_code,
          count(*) as n
   from
     (select lhs.mailshot_id as mailshot_id,
             lhs.customer_id as customer_id,
             lhs.outcome_code as outcome_code,
             lhs.mailshot_customer_date as mailshot_customer_date,
             rhs.payment_method as payment_method,
             rhs.customer_name as customer_name,
             rhs.customer_phone as customer_phone,
             rhs.customer_email as customer_email,
             rhs.customer_address as customer_address,
             rhs.customer_login as customer_login,
             rhs.customer_password as customer_password
      from df_mailshot_customers as lhs
      inner join df_customers as rhs on (lhs.customer_id = rhs.customer_id))
   group by customer_name,
            outcome_code)
where (outcome_code = 'order'
       and n >= 2.0)`;

verify q1 q2;