schema df_customers(customer_id:int, customer_address_id:int, customer_status_code:str, date_became_customer:str, date_of_birth:str, first_name:str, last_name:str, amount_outstanding:str, email_address:str, phone_number:str, cell_mobile_phone_number:str);
schema df_customer_payments(customer_id:int, datetime_payment:str, payment_method_code:str, amount_payment:str);

table df_customers(df_customers);
table df_customer_payments(df_customer_payments);

query q1
`select sum(t1.amount_payment)
from df_customer_payments as t1
join df_customers as t2 on t1.customer_id = t2.customer_id
where t2.first_name = "carole"
  and t2.last_name = "bernhard"`;

query q2
`select sumamount_payment as sum.t1.amount_payment.
from
  (select amount_outstanding,
          phone_number,
          sum(amount_payment) as sumamount_payment
   from
     (select lhs.customer_id as customer_id,
             lhs.customer_address_id as customer_address_id,
             lhs.customer_status_code as customer_status_code,
             lhs.date_became_customer as date_became_customer,
             lhs.date_of_birth as date_of_birth,
             lhs.first_name as first_name,
             lhs.last_name as last_name,
             lhs.amount_outstanding as amount_outstanding,
             lhs.email_address as email_address,
             lhs.phone_number as phone_number,
             lhs.cell_mobile_phone_number as cell_mobile_phone_number,
             rhs.datetime_payment as datetime_payment,
             rhs.payment_method_code as payment_method_code,
             rhs.amount_payment as amount_payment
      from
        (select *
         from df_customers df_customers
         where (first_name = 'carole'
                or last_name = 'bernhard')) as lhs
      inner join df_customer_payments as rhs on (lhs.customer_id = rhs.customer_id))
   group by amount_outstanding,
            phone_number)`;

verify q1 q2;