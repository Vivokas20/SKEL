schema df_staff(staff_id:int, staff_address_id:int, nickname:str, first_name:str, middle_name:str, last_name:str, date_of_birth:str, date_joined_staff:str, date_left_staff:str);
schema df_customers(customer_id:int, customer_address_id:int, customer_status_code:str, date_became_customer:str, date_of_birth:str, first_name:str, last_name:str, amount_outstanding:str, email_address:str, phone_number:str, cell_mobile_phone_number:str);

table df_staff(df_staff);
table df_customers(df_customers);

query q1
`select last_name
from df_customers df_customers intersect
select last_name
from df_staff df_staff`;

query q2
`select last_name
from
  (select lhs.staff_id as staff_id,
          lhs.staff_address_id as staff_address_id,
          lhs.nickname as nickname,
          lhs.first_name as first_name,
          lhs.middle_name as middle_name,
          lhs.last_name as last_name,
          lhs.date_of_birth as date_of_birth,
          lhs.date_joined_staff as date_joined_staff,
          lhs.date_left_staff as date_left_staff,
          rhs.customer_id as customer_id,
          rhs.customer_address_id as customer_address_id,
          rhs.customer_status_code as customer_status_code,
          rhs.date_became_customer as date_became_customer,
          rhs.date_of_birth as date_of_birth.other,
          rhs.first_name as first_name.other,
          rhs.amount_outstanding as amount_outstanding,
          rhs.email_address as email_address,
          rhs.phone_number as phone_number,
          rhs.cell_mobile_phone_number as cell_mobile_phone_number
   from df_staff as lhs
   inner join df_customers as rhs on (lhs.last_name = rhs.last_name))`;

verify q1 q2;