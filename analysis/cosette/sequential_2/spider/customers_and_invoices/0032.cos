schema df_orders(order_id:int, customer_id:int, date_order_placed:str, order_details:str);
schema df_invoices(invoice_number:int, order_id:int, invoice_date:str);

table df_orders(df_orders);
table df_invoices(df_invoices);

query q1
`select t2.order_id,
       t2.order_details
from df_invoices as t1
join df_orders as t2 on t1.order_id = t2.order_id
group by t2.order_id
having count(*) > 2`;

query q2
`select order_id,
       order_details
from
  (select lhs.order_id as order_id,
          lhs.customer_id as customer_id,
          lhs.date_order_placed as date_order_placed,
          lhs.order_details as order_details,
          lhs.n as n
   from
     (select lhs.order_id as order_id,
             lhs.customer_id as customer_id,
             lhs.date_order_placed as date_order_placed,
             lhs.order_details as order_details,
             rhs.n as n
      from df_orders as lhs
      inner join
        (select order_id,
                count(*) as n
         from df_invoices df_invoices
         group by order_id) as rhs on (lhs.order_id = rhs.order_id)) as lhs
   inner join
     (select *
      from
        (select order_id,
                count(*) as n
         from df_invoices df_invoices
         group by order_id)
      where (n > 2.0)) as rhs on (lhs.order_id = rhs.order_id
                                  and lhs.n = rhs.n))`;

verify q1 q2;