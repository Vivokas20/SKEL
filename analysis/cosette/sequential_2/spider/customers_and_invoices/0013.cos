schema df_customers(customer_id:int, customer_first_name:str, customer_middle_initial:str, customer_last_name:str, gender:int, email_address:str, login_name:str, login_password:str, phone_number:str, town_city:str, state_county_province:str, country:str);
schema df_accounts(account_id:int, customer_id:int, date_account_opened:str, account_name:int, other_account_details:str);

table df_customers(df_customers);
table df_accounts(df_accounts);

query q1
`select t2.customer_first_name,
       t1.customer_id
from df_accounts as t1
join df_customers as t2 on t1.customer_id = t2.customer_id
group by t1.customer_id
having count(*) >= 2`;

query q2
`select customer_first_name,
       customer_id
from
  (select lhs.customer_id as customer_id,
          lhs.customer_first_name as customer_first_name,
          lhs.customer_middle_initial as customer_middle_initial,
          lhs.customer_last_name as customer_last_name,
          lhs.gender as gender,
          lhs.email_address as email_address,
          lhs.login_name as login_name,
          lhs.login_password as login_password,
          lhs.phone_number as phone_number,
          lhs.town_city as town_city,
          lhs.state_county_province as state_county_province,
          lhs.country as country,
          rhs.n as n
   from df_customers as lhs
   inner join
     (select *
      from
        (select customer_id,
                count(*) as n
         from df_accounts df_accounts
         group by customer_id)
      where (n >= 2.0)) as rhs on (lhs.customer_id = rhs.customer_id))`;

verify q1 q2;