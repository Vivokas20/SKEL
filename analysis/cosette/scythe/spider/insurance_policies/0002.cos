schema df_customers(customer_id:int, customer_details:str);
schema df_customer_policies(policy_id:int, customer_id:int, policy_type_code:str, start_date:str, end_date:str);
schema df_claims(claim_id:int, policy_id:int, date_claim_made:str, date_claim_settled:str, amount_claimed:int, amount_settled:int);

table df_customers(df_customers);
table df_customer_policies(df_customer_policies);
table df_claims(df_claims);

query q1
`select t1.customer_details,
       t1.customer_id
from df_customers as t1
join df_customer_policies as t2 on t1.customer_id = t2.customer_id
group by t1.customer_id
having count(*) >= 2
except
select t1.customer_details,
       t1.customer_id
from df_customers as t1
join df_customer_policies as t2 on t1.customer_id = t2.customer_id
join df_claims as t3 on t2.policy_id = t3.policy_id`;

query q2
`select t3.customer_details,t3.customer_id
 from
  (select t4.customer_id, t4.policy_type_code, t4.count_end_date, t2.customer_id as customer_id1, t2.customer_details
  from (select *
       from
        (select
            t1.customer_id, t1.policy_type_code, count(t1.end_date) as count_end_date
          from
            (select *
               from
                input0
               where input0.customer_id < 5.0) as t1
          group by
            t1.customer_id, t1.policy_type_code) as t4
       where t4.count_end_date = 2.0) join 
      input as t2) as t3
 where t3.customer_id = t3.customer_id1`;

verify q1 q2;