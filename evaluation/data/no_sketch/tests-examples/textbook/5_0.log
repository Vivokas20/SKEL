[     2.263][MainProcess][INFO] Parsing specification...
[     2.268][MainProcess][INFO] File read
[     2.268][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.269][MainProcess][DEBUG] Reading input files...
[     2.280][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/5-1.txt: ['string', 'string', 'string']
[     2.286][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/5-2.txt: ['string', 'string']
[     2.290][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/5.out: ['string']
[     2.335][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 376, 'anti_join': 44, 'left_join': 4, 'union': 4, 'intersect': 16, 'semi_join': 4, 'cross_join': 24, 'filter': 4, 'summarise': 22, 'mutate': 2}
[     2.335][MainProcess][DEBUG] {'natural_join': 0.007575757575757576, 'natural_join3': 0.015151515151515152, 'natural_join4': 0.030303030303030304, 'inner_join': 0.7121212121212122, 'anti_join': 0.08333333333333333, 'left_join': 0.007575757575757576, 'union': 0.007575757575757576, 'intersect': 0.030303030303030304, 'semi_join': 0.007575757575757576, 'cross_join': 0.045454545454545456, 'filter': 0.007575757575757576, 'summarise': 0.041666666666666664, 'mutate': 0.003787878787878788}
[     2.335][MainProcess][DEBUG] {'natural_join': 0.007575757575757577, 'natural_join3': 0.015151515151515154, 'natural_join4': 0.030303030303030307, 'inner_join': 0.7121212121212123, 'anti_join': 0.08333333333333334, 'left_join': 0.007575757575757577, 'union': 0.007575757575757577, 'intersect': 0.030303030303030307, 'semi_join': 0.007575757575757577, 'cross_join': 0.04545454545454546, 'filter': 0.007575757575757577, 'summarise': 0.04166666666666667, 'mutate': 0.0037878787878787884}
[     2.335][MainProcess][INFO] Building synthesizer...
[     2.640][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 227 constraints
[     2.668][MainProcess][DEBUG] There is no solution for current loc (2).
[     2.668][MainProcess][DEBUG] Enumeration time: 0.3323328495025635
[     2.668][MainProcess][DEBUG] Synthesis time: 0.00038743019104003906
[     2.668][MainProcess][INFO] Increasing the number of lines of code to 3.
[     3.116][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 387 constraints
[     3.154][MainProcess][DEBUG] Enumeration time: 0.4856569766998291
[     4.364][MainProcess][DEBUG] Synthesis time: 1.2090930938720703
[     4.365][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'F_key'), filter(line0, 'n == max(n)'), natural_join(input1, line1)]
[     4.368][MainProcess][DEBUG] Solution found using process 0
[     4.368][MainProcess][INFO] Statistics:
[     4.369][MainProcess][INFO] 	Attempted programs: 52 (approx)
[     4.369][MainProcess][INFO] 		Rejected: 51 (approx)
[     4.369][MainProcess][INFO] 		Failed: 0 (approx)
[     4.369][MainProcess][INFO] 		Empty outputs: 35 (67.3%) (approx)
[     4.369][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     4.369][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     4.369][MainProcess][INFO] 	Total time spent in enumerator init: 0.817990 (approx)
[     4.369][MainProcess][INFO] 	Total time spent in enumerator: 0.168733 (approx)
[     4.369][MainProcess][INFO] 		Enumerated 308.178540 programs/s avg. (just enumeration time)
[     4.370][MainProcess][INFO] 		Enumerated 13.843084 programs/s avg. (overall)
[     4.370][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.991625 (approx)
[     4.370][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.047201 (approx)
[     4.370][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'F_key'), filter(line0, 'n == max(n)'), natural_join(input1, line1)]
[     4.370][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_5_1 <- read_csv("tests-examples/textbook/tables/5-1.txt", col_types = cols("C_name" = col_character(),"F_key" = col_character(),"Room" = col_character()))
df_5_1 <- copy_to(con, df_5_1)
df_5_2 <- read_csv("tests-examples/textbook/tables/5-2.txt", col_types = cols("F_key" = col_character(),"F_name" = col_character()))
df_5_2 <- copy_to(con, df_5_2)
expected_output <- read_csv("tests-examples/textbook/tables/5.out", col_types = cols("F_name" = col_character()))

df77 <- df_5_1 %>% group_by(F_key) %>% summarise(n = n()) %>% ungroup()
df78 <- df77 %>% filter(n == max(n))
df79 <- inner_join(df_5_2, df78, na_matches="never")
out <- df79 %>% select(F_name) %>% arrange(F_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT F_name
FROM
  (SELECT LHS.F_key AS F_key,
          F_name,
          n
   FROM df_5_2 AS LHS
   INNER JOIN
     (SELECT F_key,
             n
      FROM
        (SELECT F_key,
                n,
                MAX(n) OVER () AS q01
         FROM
           (SELECT F_key,
                   COUNT(*) AS n
            FROM df_5_1
            GROUP BY F_key))
      WHERE (n = q01)) AS RHS ON (LHS.F_key = RHS.F_key))
ORDER BY F_name
