[     2.298][MainProcess][INFO] Parsing specification...
[     2.302][MainProcess][INFO] File read
[     2.303][MainProcess][DEBUG] Reading input files...
[     2.310][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/045_1.csv: ['int64', 'string']
[     2.315][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/045_2.csv: ['int64', 'int64', 'int64']
[     2.319][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/045_o.csv: ['string', 'Float64']
[     2.383][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 376, 'anti_join': 44, 'left_join': 4, 'union': 4, 'intersect': 16, 'semi_join': 4, 'cross_join': 4440, 'filter': 12, 'summarise': 22, 'mutate': 2}
[     2.383][MainProcess][DEBUG] {'natural_join': 0.0008077544426494346, 'natural_join3': 0.0016155088852988692, 'natural_join4': 0.0032310177705977385, 'inner_join': 0.07592891760904685, 'anti_join': 0.008885298869143781, 'left_join': 0.0008077544426494346, 'union': 0.0008077544426494346, 'intersect': 0.0032310177705977385, 'semi_join': 0.0008077544426494346, 'cross_join': 0.8966074313408724, 'filter': 0.0024232633279483036, 'summarise': 0.0044426494345718905, 'mutate': 0.0004038772213247173}
[     2.383][MainProcess][DEBUG] {'natural_join': 0.0008077544426494346, 'natural_join3': 0.0016155088852988692, 'natural_join4': 0.0032310177705977385, 'inner_join': 0.07592891760904685, 'anti_join': 0.008885298869143781, 'left_join': 0.0008077544426494346, 'union': 0.0008077544426494346, 'intersect': 0.0032310177705977385, 'semi_join': 0.0008077544426494346, 'cross_join': 0.8966074313408724, 'filter': 0.0024232633279483036, 'summarise': 0.0044426494345718905, 'mutate': 0.0004038772213247173}
[     2.383][MainProcess][INFO] Building synthesizer...
[     3.271][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 98 constraints
[     3.362][MainProcess][DEBUG] There is no solution for current loc (1).
[     3.363][MainProcess][DEBUG] Enumeration time: 0.9789524078369141
[     3.364][MainProcess][DEBUG] Synthesis time: 0.001306772232055664
[     3.365][MainProcess][INFO] Increasing the number of lines of code to 2.
[     5.172][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 226 constraints
[     5.350][MainProcess][DEBUG] Enumeration time: 1.9842705726623535
[     5.633][MainProcess][DEBUG] Synthesis time: 0.2801496982574463
[     5.633][MainProcess][INFO] Solution found: [left_join(input0, input1), summarise(line0, 'sumQuantity = sum(Quantity)', 'Name')]
[     5.638][MainProcess][DEBUG] Solution found using process 0
[     5.638][MainProcess][INFO] Statistics:
[     5.638][MainProcess][INFO] 	Attempted programs: 14 (approx)
[     5.638][MainProcess][INFO] 		Rejected: 13 (approx)
[     5.638][MainProcess][INFO] 		Failed: 0 (approx)
[     5.638][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     5.638][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     5.638][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     5.638][MainProcess][INFO] 	Total time spent in enumerator init: 2.963223 (approx)
[     5.638][MainProcess][INFO] 	Total time spent in enumerator: 0.074578 (approx)
[     5.638][MainProcess][INFO] 		Enumerated 187.724003 programs/s avg. (just enumeration time)
[     5.639][MainProcess][INFO] 		Enumerated 2.794957 programs/s avg. (overall)
[     5.639][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.194011 (approx)
[     5.639][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.010832 (approx)
[     5.639][MainProcess][INFO] Solution found: [left_join(input0, input1), summarise(line0, 'sumQuantity = sum(Quantity)', 'Name')]
[     5.639][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_045_1 <- read_csv("tests-examples/scythe/recent_posts/tables/045_1.csv", col_types = cols("Menu_id" = col_integer(),"Name" = col_character()))
df_045_1 <- copy_to(con, df_045_1)
df_045_2 <- read_csv("tests-examples/scythe/recent_posts/tables/045_2.csv", col_types = cols("ID" = col_integer(),"Quantity" = col_integer(),"Menu_id" = col_integer()))
df_045_2 <- copy_to(con, df_045_2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/045_o.csv", col_types = cols("MenuName" = col_character(),"Quantity" = col_double()))

df19 <- left_join(df_045_1, df_045_2, na_matches="never")
df20 <- df19 %>% group_by(Name) %>% summarise(sumQuantity = sum(Quantity)) %>% ungroup()
out <- df20 %>% select(MenuName = Name, Quantity = sumQuantity) %>% arrange(MenuName)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name AS MenuName,
       sumQuantity AS Quantity
FROM
  (SELECT Name,
          SUM(Quantity) AS sumQuantity
   FROM
     (SELECT LHS.Menu_id AS Menu_id,
             Name,
             ID,
             Quantity
      FROM df_045_1 AS LHS
      LEFT JOIN df_045_2 AS RHS ON (LHS.Menu_id = RHS.Menu_id))
   GROUP BY Name)
ORDER BY MenuName
