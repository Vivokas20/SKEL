[     4.898][MainProcess][INFO] Parsing specification...
[     4.904][MainProcess][INFO] File read
[     4.905][MainProcess][DEBUG] Reading input files...
[     4.925][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/034.csv: ['string', 'datetime64[ns]', 'datetime64[ns]']
[     4.934][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/034_o.csv: ['string', 'datetime64[ns]', 'datetime64[ns]']
[     5.033][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 30, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 7, 'mutate': 1}
[     5.033][MainProcess][DEBUG] {'natural_join': 0.0008547008547008547, 'natural_join3': 0.0008547008547008547, 'natural_join4': 0.0008547008547008547, 'inner_join': 0.02564102564102564, 'anti_join': 0.005982905982905983, 'left_join': 0.0008547008547008547, 'union': 0.0008547008547008547, 'intersect': 0.002564102564102564, 'semi_join': 0.0008547008547008547, 'cross_join': 0.9487179487179487, 'filter': 0.005128205128205128, 'summarise': 0.005982905982905983, 'mutate': 0.0008547008547008547}
[     5.034][MainProcess][DEBUG] {'natural_join': 0.0008547008547008548, 'natural_join3': 0.0008547008547008548, 'natural_join4': 0.0008547008547008548, 'inner_join': 0.025641025641025644, 'anti_join': 0.005982905982905984, 'left_join': 0.0008547008547008548, 'union': 0.0008547008547008548, 'intersect': 0.0025641025641025645, 'semi_join': 0.0008547008547008548, 'cross_join': 0.9487179487179488, 'filter': 0.005128205128205129, 'summarise': 0.005982905982905984, 'mutate': 0.0008547008547008548}
[     5.034][MainProcess][INFO] Building synthesizer...
[     5.903][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 97 constraints
[     5.985][MainProcess][DEBUG] Enumeration time: 0.9509954452514648
[     6.771][MainProcess][DEBUG] Synthesis time: 0.7861669063568115
[     6.772][MainProcess][INFO] Increasing the number of lines of code to 2.
[     8.533][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 225 constraints
[     8.709][MainProcess][DEBUG] Enumeration time: 1.937248945236206
[    28.573][MainProcess][DEBUG] Synthesis time: 19.858476877212524
[    28.573][MainProcess][INFO] Solution found: [mutate(input0, 'maxDATE_UPDATE = max(DATE_UPDATE)'), cross_join(line0, line0, 'maxDATE_UPDATE >= maxDATE_UPDATE.other & DATE_UPDATE.other >= maxDATE_UPDATE.other')]
[    28.580][MainProcess][DEBUG] Solution found using process 0
[    28.580][MainProcess][INFO] Statistics:
[    28.580][MainProcess][INFO] 	Attempted programs: 43 (approx)
[    28.580][MainProcess][INFO] 		Rejected: 42 (approx)
[    28.580][MainProcess][INFO] 		Failed: 0 (approx)
[    28.580][MainProcess][INFO] 		Empty outputs: 14 (32.6%) (approx)
[    28.580][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    28.580][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    28.580][MainProcess][INFO] 	Total time spent in enumerator init: 2.888244 (approx)
[    28.580][MainProcess][INFO] 	Total time spent in enumerator: 0.185238 (approx)
[    28.581][MainProcess][INFO] 		Enumerated 232.133641 programs/s avg. (just enumeration time)
[    28.581][MainProcess][INFO] 		Enumerated 1.577036 programs/s avg. (overall)
[    28.581][MainProcess][INFO] 	Total time spent in evaluation & testing: 20.427824 (approx)
[    28.581][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.030413 (approx)
[    28.581][MainProcess][INFO] Solution found: [mutate(input0, 'maxDATE_UPDATE = max(DATE_UPDATE)'), cross_join(line0, line0, 'maxDATE_UPDATE >= maxDATE_UPDATE.other & DATE_UPDATE.other >= maxDATE_UPDATE.other')]
[    28.581][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_034 <- read_csv("tests-examples/scythe/recent_posts/tables/034.csv", col_types = cols("MATERIAL" = col_character(),"DISCO_DATE" = col_character(),"DATE_UPDATE" = col_character()))
df_034$DISCO_DATE <- ymd(df_034$DISCO_DATE)
df_034$DATE_UPDATE <- ymd(df_034$DATE_UPDATE)
df_034 <- copy_to(con, df_034)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/034_o.csv", col_types = cols("c1" = col_character(),"c2" = col_character(),"c3" = col_character()))
expected_output$c2 <- ymd(expected_output$c2)
expected_output$c3 <- ymd(expected_output$c3)

df55 <- df_034 %>% mutate(maxDATE_UPDATE = max(DATE_UPDATE))
df56 <- full_join(df55, df55, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(maxDATE_UPDATE >= maxDATE_UPDATE.other & DATE_UPDATE.other >= maxDATE_UPDATE.other)
out <- df56 %>% select(c1 = MATERIAL, c2 = DISCO_DATE.other, c3 = maxDATE_UPDATE) %>% distinct() %>% arrange(c1)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT MATERIAL AS c1,
                DISCO_DATE_other AS c2,
                maxDATE_UPDATE AS c3
FROM
  (SELECT LHS.MATERIAL AS MATERIAL,
          LHS.DISCO_DATE AS DISCO_DATE,
          LHS.DATE_UPDATE AS DATE_UPDATE,
          LHS.maxDATE_UPDATE AS maxDATE_UPDATE,
          RHS.MATERIAL AS MATERIAL_other,
          RHS.DISCO_DATE AS DISCO_DATE_other,
          RHS.DATE_UPDATE AS DATE_UPDATE_other,
          RHS.maxDATE_UPDATE AS maxDATE_UPDATE_other
   FROM
     (SELECT MATERIAL,
             DISCO_DATE,
             DATE_UPDATE,
             MAX(DATE_UPDATE) OVER () AS maxDATE_UPDATE
      FROM df_034) AS LHS
   CROSS JOIN
     (SELECT MATERIAL,
             DISCO_DATE,
             DATE_UPDATE,
             MAX(DATE_UPDATE) OVER () AS maxDATE_UPDATE
      FROM df_034) AS RHS)
WHERE (maxDATE_UPDATE >= maxDATE_UPDATE_other
       AND DATE_UPDATE_other >= maxDATE_UPDATE_other)
ORDER BY c1
