[     2.359][MainProcess][INFO] Parsing specification...
[     2.363][MainProcess][INFO] File read
[     2.364][MainProcess][DEBUG] Reading input files...
[     2.374][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/mill.csv: ['int64', 'int64', 'string', 'string', 'string', 'int64', 'string']
[     2.378][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/0007.csv: ['string']
[     2.379][MainProcess][INFO] Parsing sketch...
[     2.379][MainProcess][DEBUG] Sketch creation: Line(T1, root=['filter'], var=[], children=[Child([0], type=Table, var=[]),Child(["location != 'Donceel'"], type=FilterCondition, var=[])])
[     2.417][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 250, 'anti_join': 29, 'left_join': 1, 'union': 1, 'intersect': 7, 'semi_join': 1, 'cross_join': 2, 'filter': 2}
[     2.417][MainProcess][DEBUG] {'natural_join': 0.0033783783783783786, 'natural_join3': 0.0033783783783783786, 'natural_join4': 0.0033783783783783786, 'inner_join': 0.8445945945945946, 'anti_join': 0.09797297297297297, 'left_join': 0.0033783783783783786, 'union': 0.0033783783783783786, 'intersect': 0.02364864864864865, 'semi_join': 0.0033783783783783786, 'cross_join': 0.006756756756756757, 'filter': 0.006756756756756757}
[     2.417][MainProcess][DEBUG] {'natural_join': 0.0033783783783783786, 'natural_join3': 0.0033783783783783786, 'natural_join4': 0.0033783783783783786, 'inner_join': 0.8445945945945946, 'anti_join': 0.09797297297297297, 'left_join': 0.0033783783783783786, 'union': 0.0033783783783783786, 'intersect': 0.02364864864864865, 'semi_join': 0.0033783783783783786, 'cross_join': 0.006756756756756757, 'filter': 0.006756756756756757}
[     2.417][MainProcess][INFO] Building synthesizer...
[     2.419][MainProcess][DEBUG] [Line(T1, root=['filter'], var=[11], children=[Child([0], type=Table, var=[302]),Child(["location != 'Donceel'"], type=FilterCondition, var=[301]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.450][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 45 constraints
[     2.452][MainProcess][DEBUG] Enumeration time: 0.03475236892700195
[     2.490][MainProcess][DEBUG] Synthesis time: 0.03757596015930176
[     2.490][MainProcess][INFO] Solution found: [filter(input0, "location != 'Donceel'")]
[     2.491][MainProcess][DEBUG] Solution found using process 0
[     2.491][MainProcess][INFO] Statistics:
[     2.491][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.491][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.491][MainProcess][INFO] 		Failed: 0 (approx)
[     2.491][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.491][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.491][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.491][MainProcess][INFO] 	Total time spent in enumerator init: 0.034752 (approx)
[     2.491][MainProcess][INFO] 	Total time spent in enumerator: 0.000686 (approx)
[     2.491][MainProcess][INFO] 		Enumerated 1458.381085 programs/s avg. (just enumeration time)
[     2.492][MainProcess][INFO] 		Enumerated 0.553192 programs/s avg. (overall)
[     2.492][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.034942 (approx)
[     2.492][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.492][MainProcess][INFO] Solution found: [filter(input0, "location != 'Donceel'")]
[     2.492][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_mill <- read_csv("tests-examples/spider/architecture/tables/mill.csv", col_types = cols("architect_id" = col_integer(),"id" = col_integer(),"location" = col_character(),"name" = col_character(),"type" = col_character(),"built_year" = col_integer(),"notes" = col_character()))
df_mill <- copy_to(con, df_mill)
expected_output <- read_csv("tests-examples/spider/architecture/tables/0007.csv", col_types = cols("name" = col_character()))

df2 <- df_mill %>% filter(location != 'Donceel')
out <- df2 %>% select(name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `name`
FROM `df_mill`
WHERE (`location` != 'Donceel')
