[     2.339][MainProcess][INFO] Parsing specification...
[     2.344][MainProcess][INFO] File read
[     2.345][MainProcess][WARNING] "attrs" field is deprecated. Please use "columns"
[     2.345][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.345][MainProcess][WARNING] "const" field is deprecated. Please use "constants"
[     2.346][MainProcess][DEBUG] Reading input files...
[     2.354][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-1.txt: ['string', 'string']
[     2.359][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-2.txt: ['string', 'string']
[     2.365][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-3.txt: ['string', 'string']
[     2.371][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2-4.txt: ['string', 'string', 'int64']
[     2.375][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/2.out: ['int64']
[     2.376][MainProcess][INFO] Parsing sketch...
[     2.376][MainProcess][DEBUG] Sketch creation: Line(T1, root=['natural_join4'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[]),Child([2], type=Table, var=[]),Child([3], type=Table, var=[])])
[     2.376][MainProcess][DEBUG] Sketch creation: Line(T2, root=['filter'], var=[], children=[Child([0], type=Line, var=[]),Child(["F_name == 'faculty1' | major == 'History'"], type=FilterCondition, var=[])])
[     2.376][MainProcess][DEBUG] Sketch creation: Line(T3, root=['summarise'], var=[], children=[Child([1], type=Line, var=[]),Child(['maxage = max(age)'], type=SummariseCondition, var=[]),Child([''], type=Cols, var=[])])
[     2.473][MainProcess][DEBUG] {'natural_join': 16, 'natural_join3': 64, 'natural_join4': 256, 'inner_join': 5008, 'anti_join': 352, 'left_join': 16, 'union': 16, 'intersect': 96, 'semi_join': 16, 'cross_join': 33280, 'filter': 264, 'summarise': 176, 'mutate': 8}
[     2.473][MainProcess][DEBUG] {'natural_join': 0.0004043671653861706, 'natural_join3': 0.0016174686615446825, 'natural_join4': 0.00646987464617873, 'inner_join': 0.12656692276587142, 'anti_join': 0.008896077638495753, 'left_join': 0.0004043671653861706, 'union': 0.0004043671653861706, 'intersect': 0.002426202992317024, 'semi_join': 0.0004043671653861706, 'cross_join': 0.841083704003235, 'filter': 0.006672058228871815, 'summarise': 0.004448038819247877, 'mutate': 0.0002021835826930853}
[     2.473][MainProcess][DEBUG] {'natural_join': 0.0004043671653861706, 'natural_join3': 0.0016174686615446825, 'natural_join4': 0.00646987464617873, 'inner_join': 0.12656692276587142, 'anti_join': 0.008896077638495753, 'left_join': 0.0004043671653861706, 'union': 0.0004043671653861706, 'intersect': 0.002426202992317024, 'semi_join': 0.0004043671653861706, 'cross_join': 0.841083704003235, 'filter': 0.006672058228871815, 'summarise': 0.004448038819247877, 'mutate': 0.0002021835826930853}
[     2.474][MainProcess][INFO] Building synthesizer...
[     2.475][MainProcess][DEBUG] [Line(T1, root=['natural_join4'], var=[3], children=[Child([0], type=Table, var=[2503]),Child([1], type=Table, var=[2504]),Child([2], type=Table, var=[2505]),Child([3], type=Table, var=[2506])]), Line(T2, root=['filter'], var=[11], children=[Child([0], type=Line, var=[2508]),Child(["F_name == 'faculty1' | major == 'History'"], type=FilterCondition, var=[2446]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T3, root=['summarise'], var=[12], children=[Child([1], type=Line, var=[2509]),Child(['maxage = max(age)'], type=SummariseCondition, var=[2502]),Child([''], type=Cols, var=[20]),Child([None], type=None, var=[0])])]
[     2.666][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 170 constraints
[     2.676][MainProcess][DEBUG] Enumeration time: 0.20280766487121582
[     2.739][MainProcess][DEBUG] Synthesis time: 0.06202244758605957
[     2.739][MainProcess][INFO] Solution found: [natural_join4(input0, input1, input2, input3), filter(line0, "F_name == 'faculty1' | major == 'History'"), summarise(line1, 'maxage = max(age)', '')]
[     2.740][MainProcess][DEBUG] Solution found using process 0
[     2.741][MainProcess][INFO] Statistics:
[     2.741][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.741][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.741][MainProcess][INFO] 		Failed: 0 (approx)
[     2.741][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.741][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.741][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.741][MainProcess][INFO] 	Total time spent in enumerator init: 0.202808 (approx)
[     2.741][MainProcess][INFO] 	Total time spent in enumerator: 0.001483 (approx)
[     2.741][MainProcess][INFO] 		Enumerated 674.108647 programs/s avg. (just enumeration time)
[     2.741][MainProcess][INFO] 		Enumerated 0.488718 programs/s avg. (overall)
[     2.741][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.056638 (approx)
[     2.742][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.742][MainProcess][INFO] Solution found: [natural_join4(input0, input1, input2, input3), filter(line0, "F_name == 'faculty1' | major == 'History'"), summarise(line1, 'maxage = max(age)', '')]
[     2.742][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_2_1 <- read_csv("tests-examples/textbook/tables/2-1.txt", col_types = cols("C_name" = col_character(),"F_key" = col_character()))
df_2_1 <- copy_to(con, df_2_1)
df_2_2 <- read_csv("tests-examples/textbook/tables/2-2.txt", col_types = cols("S_key" = col_character(),"C_name" = col_character()))
df_2_2 <- copy_to(con, df_2_2)
df_2_3 <- read_csv("tests-examples/textbook/tables/2-3.txt", col_types = cols("F_key" = col_character(),"F_name" = col_character()))
df_2_3 <- copy_to(con, df_2_3)
df_2_4 <- read_csv("tests-examples/textbook/tables/2-4.txt", col_types = cols("S_key" = col_character(),"major" = col_character(),"age" = col_integer()))
df_2_4 <- copy_to(con, df_2_4)
expected_output <- read_csv("tests-examples/textbook/tables/2.out", col_types = cols("maxage" = col_integer()))

df4 <- inner_join(df_2_1, df_2_2, na_matches="never") %>% inner_join(df_2_3, na_matches="never") %>% inner_join(df_2_4, na_matches="never")
df5 <- df4 %>% filter(F_name == 'faculty1' | major == 'History')
df6 <- df5 %>% group_by() %>% summarise(maxage = max(age)) %>% ungroup()
out <- df6 %>% select(maxage) %>% distinct()


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `maxage`
FROM
  (SELECT MAX(`age`) AS `maxage`
   FROM
     (SELECT `C_name`,
             `F_key`,
             `LHS`.`S_key` AS `S_key`,
             `F_name`,
             `major`,
             `age`
      FROM
        (SELECT `C_name`,
                `LHS`.`F_key` AS `F_key`,
                `S_key`,
                `F_name`
         FROM
           (SELECT `LHS`.`C_name` AS `C_name`,
                   `F_key`,
                   `S_key`
            FROM `df_2_1` AS `LHS`
            INNER JOIN `df_2_2` AS `RHS` ON (`LHS`.`C_name` = `RHS`.`C_name`)) AS `LHS`
         INNER JOIN `df_2_3` AS `RHS` ON (`LHS`.`F_key` = `RHS`.`F_key`)) AS `LHS`
      INNER JOIN `df_2_4` AS `RHS` ON (`LHS`.`S_key` = `RHS`.`S_key`))
   WHERE (`F_name` = 'faculty1'
          OR `major` = 'History'))
