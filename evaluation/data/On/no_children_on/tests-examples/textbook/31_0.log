[     2.370][MainProcess][INFO] Parsing specification...
[     2.377][MainProcess][INFO] File read
[     2.378][MainProcess][DEBUG] Reading input files...
[     2.386][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     2.391][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     2.398][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     2.403][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/31.out: ['string']
[     2.404][MainProcess][INFO] Parsing sketch...
[     2.404][MainProcess][DEBUG] Sketch creation: Line(T1, root=['natural_join3'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[])])
[     2.404][MainProcess][DEBUG] Sketch creation: Line(T2, root=['filter'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=FilterCondition, var=[])])
[     2.404][MainProcess][DEBUG] Sketch creation: Line(T3, root=['anti_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Cols, var=[])])
[     2.455][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 711, 'anti_join': 198, 'left_join': 9, 'union': 9, 'intersect': 54, 'semi_join': 9, 'cross_join': 288, 'filter': 96}
[     2.455][MainProcess][DEBUG] {'natural_join': 0.006036217303822937, 'natural_join3': 0.018108651911468814, 'natural_join4': 0.05432595573440644, 'inner_join': 0.4768611670020121, 'anti_join': 0.13279678068410464, 'left_join': 0.006036217303822937, 'union': 0.006036217303822937, 'intersect': 0.03621730382293763, 'semi_join': 0.006036217303822937, 'cross_join': 0.193158953722334, 'filter': 0.06438631790744467}
[     2.455][MainProcess][DEBUG] {'natural_join': 0.006036217303822937, 'natural_join3': 0.018108651911468814, 'natural_join4': 0.05432595573440644, 'inner_join': 0.4768611670020121, 'anti_join': 0.13279678068410464, 'left_join': 0.006036217303822937, 'union': 0.006036217303822937, 'intersect': 0.03621730382293763, 'semi_join': 0.006036217303822937, 'cross_join': 0.193158953722334, 'filter': 0.06438631790744467}
[     2.455][MainProcess][INFO] Building synthesizer...
[     2.457][MainProcess][DEBUG] [Line(T1, root=['natural_join3'], var=[2], children=[Child(['??'], type=Table, var=[183, 184, 185]),Child(['??'], type=Table, var=[183, 184, 185]),Child(['??'], type=Table, var=[183, 184, 185]),Child([None], type=None, var=[0])]), Line(T2, root=['filter'], var=[11], children=[Child(['??'], type=Table, var=[183, 184, 185]),Child(['??'], type=FilterCondition, var=[151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T3, root=['anti_join'], var=[5], children=[Child(['??'], type=Table, var=[183, 184, 185]),Child(['??'], type=Table, var=[183, 184, 185]),Child(['??'], type=Cols, var=[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]),Child([None], type=None, var=[0])])]
[     2.659][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 159 constraints
[     2.672][MainProcess][DEBUG] Enumeration time: 0.21640348434448242
[     4.816][MainProcess][DEBUG] Synthesis time: 2.1435163021087646
[     4.816][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, "str_detect(aname, 'Boeing') | crusingrange <= 3000"), anti_join(line0, line1, 'aname,ename')]
[     4.820][MainProcess][DEBUG] Solution found using process 0
[     4.820][MainProcess][INFO] Statistics:
[     4.820][MainProcess][INFO] 	Attempted programs: 250 (approx)
[     4.820][MainProcess][INFO] 		Rejected: 249 (approx)
[     4.820][MainProcess][INFO] 		Failed: 0 (approx)
[     4.820][MainProcess][INFO] 		Empty outputs: 152 (60.8%) (approx)
[     4.821][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     4.821][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     4.821][MainProcess][INFO] 	Total time spent in enumerator init: 0.216403 (approx)
[     4.821][MainProcess][INFO] 	Total time spent in enumerator: 0.530409 (approx)
[     4.821][MainProcess][INFO] 		Enumerated 471.334510 programs/s avg. (just enumeration time)
[     4.821][MainProcess][INFO] 		Enumerated 60.591642 programs/s avg. (overall)
[     4.821][MainProcess][INFO] 	Total time spent in evaluation & testing: 1.411470 (approx)
[     4.821][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.199684 (approx)
[     4.821][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, "str_detect(aname, 'Boeing') | crusingrange <= 3000"), anti_join(line0, line1, 'aname,ename')]
[     4.821][MainProcess][INFO] Solution size: 3
[     5.227][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
expected_output <- read_csv("tests-examples/textbook/tables/31.out", col_types = cols("ename" = col_character()))

df198 <- inner_join(df_aircraft, df_certified, na_matches="never") %>% inner_join(df_employees, na_matches="never")
df199 <- df198 %>% filter(str_detect(aname, 'Boeing') | crusingrange <= 3000)
df200 <- anti_join(df198, df199, by=c('aname','ename'), na_matches="never")
out <- df200 %>% select(ename) %>% distinct() %>% arrange(ename)

Failed to generate SQL query
