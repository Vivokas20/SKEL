[     2.442][MainProcess][INFO] Parsing specification...
[     2.447][MainProcess][INFO] File read
[     2.448][MainProcess][DEBUG] Reading input files...
[     2.456][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i023.csv: ['int64', 'int64']
[     2.461][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o023.csv: ['int64', 'int64', 'int64']
[     2.461][MainProcess][INFO] Parsing sketch...
[     2.462][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(['row_number_ = row_number()'], type=Unknown, var=[])])
[     2.499][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 21, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 6, 'summarise': 4, 'mutate': 1}
[     2.500][MainProcess][DEBUG] {'natural_join': 0.022727272727272728, 'natural_join3': 0.022727272727272728, 'natural_join4': 0.022727272727272728, 'inner_join': 0.4772727272727273, 'anti_join': 0.09090909090909091, 'left_join': 0.022727272727272728, 'union': 0.022727272727272728, 'intersect': 0.045454545454545456, 'semi_join': 0.022727272727272728, 'cross_join': 0.13636363636363635, 'summarise': 0.09090909090909091, 'mutate': 0.022727272727272728}
[     2.500][MainProcess][DEBUG] {'natural_join': 0.02272727272727273, 'natural_join3': 0.02272727272727273, 'natural_join4': 0.02272727272727273, 'inner_join': 0.47727272727272735, 'anti_join': 0.09090909090909093, 'left_join': 0.02272727272727273, 'union': 0.02272727272727273, 'intersect': 0.04545454545454546, 'semi_join': 0.02272727272727273, 'cross_join': 0.13636363636363638, 'summarise': 0.09090909090909093, 'mutate': 0.02272727272727273}
[     2.500][MainProcess][INFO] Building synthesizer...
[     2.501][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 12], children=[Child([0], type=Table, var=[[47], [46]]),Child(['row_number_ = row_number()'], type=Unknown, var=[[47], [46]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.551][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 63 constraints
[     2.555][MainProcess][DEBUG] Enumeration time: 0.054885149002075195
[     2.602][MainProcess][DEBUG] Synthesis time: 0.047281503677368164
[     2.602][MainProcess][INFO] Solution found: [mutate(input0, 'row_number_ = row_number()')]
[     2.603][MainProcess][DEBUG] Solution found using process 0
[     2.603][MainProcess][INFO] Statistics:
[     2.603][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.603][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.603][MainProcess][INFO] 		Failed: 0 (approx)
[     2.604][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.604][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.604][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.604][MainProcess][INFO] 	Total time spent in enumerator init: 0.054885 (approx)
[     2.604][MainProcess][INFO] 	Total time spent in enumerator: 0.000794 (approx)
[     2.604][MainProcess][INFO] 		Enumerated 1259.172621 programs/s avg. (just enumeration time)
[     2.604][MainProcess][INFO] 		Enumerated 0.525200 programs/s avg. (overall)
[     2.604][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.044393 (approx)
[     2.604][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.604][MainProcess][INFO] Solution found: [mutate(input0, 'row_number_ = row_number()')]
[     2.604][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i023 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i023.csv", col_types = cols("itemID" = col_integer(),"ordercount" = col_integer()))
df_i023 <- copy_to(con, df_i023)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o023.csv", col_types = cols("rank" = col_integer(),"itemID" = col_integer(),"ordercount" = col_integer()))

df2 <- df_i023 %>% mutate(row_number_ = row_number())
out <- df2 %>% select(rank = row_number_, itemID, ordercount) %>% arrange(ordercount)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT ROW_NUMBER() OVER () AS rank,
                         itemID,
                         ordercount
FROM df_i023
ORDER BY ordercount
