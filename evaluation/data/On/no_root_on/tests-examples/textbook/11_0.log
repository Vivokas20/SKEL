[     2.279][MainProcess][INFO] Parsing specification...
[     2.284][MainProcess][INFO] File read
[     2.285][MainProcess][DEBUG] Reading input files...
[     2.294][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11-1.txt: ['string', 'string']
[     2.300][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11-2.txt: ['string', 'string']
[     2.305][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11.out: ['string']
[     2.305][MainProcess][INFO] Parsing sketch...
[     2.306][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[]),Child(["''"], type=Unknown, var=[])])
[     2.346][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 96, 'anti_join': 28, 'left_join': 4, 'union': 4, 'intersect': 12, 'semi_join': 4, 'cross_join': 0}
[     2.346][MainProcess][DEBUG] {'natural_join': 0.022727272727272728, 'natural_join3': 0.045454545454545456, 'natural_join4': 0.09090909090909091, 'inner_join': 0.5454545454545454, 'anti_join': 0.1590909090909091, 'left_join': 0.022727272727272728, 'union': 0.022727272727272728, 'intersect': 0.06818181818181818, 'semi_join': 0.022727272727272728, 'cross_join': 0.0}
[     2.346][MainProcess][DEBUG] {'natural_join': 0.02272727272727273, 'natural_join3': 0.04545454545454546, 'natural_join4': 0.09090909090909093, 'inner_join': 0.5454545454545455, 'anti_join': 0.15909090909090912, 'left_join': 0.02272727272727273, 'union': 0.02272727272727273, 'intersect': 0.06818181818181819, 'semi_join': 0.02272727272727273, 'cross_join': 0.0}
[     2.346][MainProcess][INFO] Building synthesizer...
[     2.348][MainProcess][DEBUG] [Line(T1, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([0], type=Table, var=[[45], [46], [14]]),Child([1], type=Table, var=[[45], [46], [14]]),Child(["''"], type=Unknown, var=[[45], [46], [14]]),Child([None], type=None, var=[0])])]
[     2.393][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 56 constraints
[     2.398][MainProcess][DEBUG] Enumeration time: 0.0513911247253418
[     2.434][MainProcess][DEBUG] Synthesis time: 0.03655242919921875
[     2.435][MainProcess][INFO] Solution found: [anti_join(input0, input1, '')]
[     2.435][MainProcess][DEBUG] Solution found using process 0
[     2.435][MainProcess][INFO] Statistics:
[     2.435][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.436][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.436][MainProcess][INFO] 		Failed: 0 (approx)
[     2.436][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.436][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.436][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.436][MainProcess][INFO] 	Total time spent in enumerator init: 0.051391 (approx)
[     2.436][MainProcess][INFO] 	Total time spent in enumerator: 0.000812 (approx)
[     2.436][MainProcess][INFO] 		Enumerated 1232.169213 programs/s avg. (just enumeration time)
[     2.436][MainProcess][INFO] 		Enumerated 0.567914 programs/s avg. (overall)
[     2.436][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.033820 (approx)
[     2.436][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.436][MainProcess][INFO] Solution found: [anti_join(input0, input1, '')]
[     2.437][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_11_1 <- read_csv("tests-examples/textbook/tables/11-1.txt", col_types = cols("S_key" = col_character(),"S_name" = col_character()))
df_11_1 <- copy_to(con, df_11_1)
df_11_2 <- read_csv("tests-examples/textbook/tables/11-2.txt", col_types = cols("S_key" = col_character(),"C_name" = col_character()))
df_11_2 <- copy_to(con, df_11_2)
expected_output <- read_csv("tests-examples/textbook/tables/11.out", col_types = cols("S_name" = col_character()))

df2 <- anti_join(df_11_1, df_11_2, by=c(), na_matches="never")
out <- df2 %>% select(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT *
   FROM df_11_1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM df_11_2 AS RHS
        WHERE (LHS.S_key = RHS.S_key) ))
