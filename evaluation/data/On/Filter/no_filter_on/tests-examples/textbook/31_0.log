[     2.381][MainProcess][INFO] Parsing specification...
[     2.389][MainProcess][INFO] File read
[     2.390][MainProcess][DEBUG] Reading input files...
[     2.398][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     2.404][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     2.410][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     2.416][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/31.out: ['string']
[     2.416][MainProcess][INFO] Parsing sketch...
[     2.416][MainProcess][DEBUG] Sketch creation: Line(T1, root=['natural_join3'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[]),Child([2], type=Table, var=[])])
[     2.417][MainProcess][DEBUG] Sketch creation: Line(T2, root=[None], var=[], children=[])
[     2.417][MainProcess][DEBUG] Sketch creation: Line(T3, root=['anti_join'], var=[], children=[Child([0], type=Line, var=[]),Child([1], type=Line, var=[]),Child(['crusingrange, salary'], type=Cols, var=[])])
[     2.469][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 711, 'anti_join': 198, 'left_join': 9, 'union': 9, 'intersect': 54, 'semi_join': 9, 'cross_join': 288, 'filter': 96}
[     2.469][MainProcess][DEBUG] {'natural_join': 0.006036217303822937, 'natural_join3': 0.018108651911468814, 'natural_join4': 0.05432595573440644, 'inner_join': 0.4768611670020121, 'anti_join': 0.13279678068410464, 'left_join': 0.006036217303822937, 'union': 0.006036217303822937, 'intersect': 0.03621730382293763, 'semi_join': 0.006036217303822937, 'cross_join': 0.193158953722334, 'filter': 0.06438631790744467}
[     2.469][MainProcess][DEBUG] {'natural_join': 0.006036217303822937, 'natural_join3': 0.018108651911468814, 'natural_join4': 0.05432595573440644, 'inner_join': 0.4768611670020121, 'anti_join': 0.13279678068410464, 'left_join': 0.006036217303822937, 'union': 0.006036217303822937, 'intersect': 0.03621730382293763, 'semi_join': 0.006036217303822937, 'cross_join': 0.193158953722334, 'filter': 0.06438631790744467}
[     2.469][MainProcess][INFO] Building synthesizer...
[     2.471][MainProcess][DEBUG] [Line(T1, root=['natural_join3'], var=[2], children=[Child([0], type=Table, var=[183]),Child([1], type=Table, var=[184]),Child([2], type=Table, var=[185]),Child([None], type=None, var=[0])]), Line(T2, root=[None], var=[], children=[]), Line(T3, root=['anti_join'], var=[5], children=[Child([0], type=Line, var=[187]),Child([1], type=Line, var=[188]),Child(['crusingrange, salary'], type=Cols, var=[36]),Child([None], type=None, var=[0])])]
[     2.793][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 220 constraints
[     2.836][MainProcess][DEBUG] Enumeration time: 0.36678504943847656
[     3.045][MainProcess][DEBUG] Synthesis time: 0.20900416374206543
[     3.045][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, "str_detect(aname, 'Boeing') | crusingrange < 3000"), anti_join(line0, line1, 'crusingrange,salary')]
[     3.047][MainProcess][DEBUG] Solution found using process 0
[     3.047][MainProcess][INFO] Statistics:
[     3.047][MainProcess][INFO] 	Attempted programs: 11 (approx)
[     3.047][MainProcess][INFO] 		Rejected: 10 (approx)
[     3.048][MainProcess][INFO] 		Failed: 0 (approx)
[     3.048][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     3.048][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     3.048][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     3.048][MainProcess][INFO] 	Total time spent in enumerator init: 0.366785 (approx)
[     3.048][MainProcess][INFO] 	Total time spent in enumerator: 0.022128 (approx)
[     3.048][MainProcess][INFO] 		Enumerated 497.105374 programs/s avg. (just enumeration time)
[     3.048][MainProcess][INFO] 		Enumerated 4.693087 programs/s avg. (overall)
[     3.048][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.174052 (approx)
[     3.048][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.011872 (approx)
[     3.048][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, "str_detect(aname, 'Boeing') | crusingrange < 3000"), anti_join(line0, line1, 'crusingrange,salary')]
[     3.048][MainProcess][INFO] Solution size: 3
[     3.484][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
expected_output <- read_csv("tests-examples/textbook/tables/31.out", col_types = cols("ename" = col_character()))

df24 <- inner_join(df_aircraft, df_certified, na_matches="never") %>% inner_join(df_employees, na_matches="never")
df25 <- df24 %>% filter(str_detect(aname, 'Boeing') | crusingrange < 3000)
df26 <- anti_join(df24, df25, by=c('crusingrange','salary'), na_matches="never")
out <- df26 %>% select(ename) %>% distinct() %>% arrange(ename)

Failed to generate SQL query
