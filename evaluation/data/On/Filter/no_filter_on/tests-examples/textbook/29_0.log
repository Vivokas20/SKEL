[     6.272][MainProcess][INFO] Parsing specification...
[     6.279][MainProcess][INFO] File read
[     6.280][MainProcess][DEBUG] Reading input files...
[     6.295][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     6.308][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/flights.txt: ['int64', 'string', 'string', 'int64', 'datetime64[ns]', 'datetime64[ns]', 'int64']
[     6.312][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/29.out: ['int64']
[     6.312][MainProcess][INFO] Parsing sketch...
[     6.312][MainProcess][DEBUG] Sketch creation: Line(T1, root=[None], var=[], children=[])
[     6.312][MainProcess][DEBUG] Sketch creation: Line(T2, root=['summarise'], var=[], children=[Child([0], type=Line, var=[]),Child(['distance = min(distance)'], type=SummariseCondition, var=[]),Child([''], type=Cols, var=[])])
[     6.312][MainProcess][DEBUG] Sketch creation: Line(T3, root=['natural_join'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Line, var=[])])
[     6.313][MainProcess][DEBUG] Sketch creation: Line(T4, root=[None], var=[], children=[])
[     7.432][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 6356, 'anti_join': 224, 'left_join': 4, 'union': 4, 'intersect': 40, 'semi_join': 4, 'cross_join': 121144, 'filter': 3496, 'summarise': 448, 'mutate': 8}
[     7.432][MainProcess][DEBUG] {'natural_join': 3.0359148729469626e-05, 'natural_join3': 6.071829745893925e-05, 'natural_join4': 0.0001214365949178785, 'inner_join': 0.048240687331127234, 'anti_join': 0.0017001123288502991, 'left_join': 3.0359148729469626e-05, 'union': 3.0359148729469626e-05, 'intersect': 0.00030359148729469627, 'semi_join': 3.0359148729469626e-05, 'cross_join': 0.9194571784207171, 'filter': 0.026533895989556452, 'summarise': 0.0034002246577005983, 'mutate': 6.071829745893925e-05}
[     7.432][MainProcess][DEBUG] {'natural_join': 3.0359148729469626e-05, 'natural_join3': 6.071829745893925e-05, 'natural_join4': 0.0001214365949178785, 'inner_join': 0.048240687331127234, 'anti_join': 0.0017001123288502991, 'left_join': 3.0359148729469626e-05, 'union': 3.0359148729469626e-05, 'intersect': 0.00030359148729469627, 'semi_join': 3.0359148729469626e-05, 'cross_join': 0.9194571784207171, 'filter': 0.026533895989556452, 'summarise': 0.0034002246577005983, 'mutate': 6.071829745893925e-05}
[     7.433][MainProcess][INFO] Building synthesizer...
[     7.442][MainProcess][DEBUG] [Line(T1, root=[None], var=[], children=[]), Line(T2, root=['summarise'], var=[12], children=[Child([0], type=Line, var=[33710]),Child(['distance = min(distance)'], type=SummariseCondition, var=[33705]),Child([''], type=Cols, var=[24]),Child([None], type=None, var=[0])]), Line(T3, root=['natural_join'], var=[1], children=[Child([0], type=Table, var=[33707]),Child([1], type=Line, var=[33711]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T4, root=[None], var=[], children=[])]
[    54.653][MainProcess][DEBUG] Enumerator for loc 4 constructed using 84 variables and 408 constraints
[    85.593][MainProcess][DEBUG] Enumeration time: 78.16035580635071
[   135.626][MainProcess][DEBUG] Synthesis time: 50.03262233734131
[   135.626][MainProcess][INFO] Solution found: [filter(input1, "origin == 'Los Angeles' & destination == 'Chicago'"), summarise(line0, 'distance = min(distance)', ''), natural_join(input0, line1), cross_join(line2, line1, 'crusingrange >= distance & distance <= distance.other')]
[   135.793][MainProcess][DEBUG] Solution found using process 0
[   135.793][MainProcess][INFO] Statistics:
[   135.794][MainProcess][INFO] 	Attempted programs: 359 (approx)
[   135.794][MainProcess][INFO] 		Rejected: 358 (approx)
[   135.794][MainProcess][INFO] 		Failed: 0 (approx)
[   135.794][MainProcess][INFO] 		Empty outputs: 116 (32.3%) (approx)
[   135.794][MainProcess][INFO] 		Redundant lines: 0 (approx)
[   135.794][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[   135.794][MainProcess][INFO] 	Total time spent in enumerator init: 78.160356 (approx)
[   135.794][MainProcess][INFO] 	Total time spent in enumerator: 43.110530 (approx)
[   135.794][MainProcess][INFO] 		Enumerated 8.327432 programs/s avg. (just enumeration time)
[   135.794][MainProcess][INFO] 		Enumerated 2.677278 programs/s avg. (overall)
[   135.794][MainProcess][INFO] 	Total time spent in evaluation & testing: 6.492446 (approx)
[   135.794][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.424643 (approx)
[   135.794][MainProcess][INFO] Solution found: [filter(input1, "origin == 'Los Angeles' & destination == 'Chicago'"), summarise(line0, 'distance = min(distance)', ''), natural_join(input0, line1), cross_join(line2, line1, 'crusingrange >= distance & distance <= distance.other')]
[   135.794][MainProcess][INFO] Solution size: 4

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_flights <- read_csv("tests-examples/textbook/tables/flights.txt", col_types = cols("flno" = col_integer(),"origin" = col_character(),"destination" = col_character(),"distance" = col_integer(),"departs" = col_character(),"arrives" = col_character(),"price" = col_integer()))
df_flights$departs <- parse_datetime(df_flights$departs)
df_flights$arrives <- parse_datetime(df_flights$arrives)
df_flights <- copy_to(con, df_flights)
expected_output <- read_csv("tests-examples/textbook/tables/29.out", col_types = cols("aid" = col_integer()))

df759 <- df_flights %>% filter(origin == 'Los Angeles' & destination == 'Chicago')
df760 <- df759 %>% group_by() %>% summarise(distance = min(distance)) %>% ungroup()
df761 <- full_join(df_aircraft, df760, by=character(), na_matches="never")
df762 <- full_join(df761, df760, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(crusingrange >= distance & distance <= distance.other)
out <- df762 %>% select(aid)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `aid`
FROM
  (SELECT `aid`,
          `aname`,
          `crusingrange`,
          `LHS`.`distance` AS `distance`,
          `RHS`.`distance` AS `distance_other`
   FROM
     (SELECT `aid`,
             `aname`,
             `crusingrange`,
             `distance`
      FROM `df_aircraft` AS `LHS`
      CROSS JOIN
        (SELECT MIN(`distance`) AS `distance`
         FROM `df_flights`
         WHERE (`origin` = 'Los Angeles'
                AND `destination` = 'Chicago')) AS `RHS`) AS `LHS`
   CROSS JOIN
     (SELECT MIN(`distance`) AS `distance`
      FROM `df_flights`
      WHERE (`origin` = 'Los Angeles'
             AND `destination` = 'Chicago')) AS RHS)
WHERE (crusingrange >= distance
       AND distance <= distance_other)
