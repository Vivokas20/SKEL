[     2.412][MainProcess][INFO] Parsing specification...
[     2.427][MainProcess][INFO] File read
[     2.429][MainProcess][DEBUG] Reading input files...
[     2.442][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/architect.csv: ['int64', 'string', 'string', 'string']
[     2.449][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/bridge.csv: ['int64', 'int64', 'string', 'string', 'Float64', 'Float64']
[     2.463][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/0017.csv: ['string']
[     2.464][MainProcess][INFO] Parsing sketch...
[     2.464][MainProcess][DEBUG] Sketch creation: Line(T1, root=[None], var=[], children=[])
[     2.464][MainProcess][DEBUG] Sketch creation: Line(T2, root=['inner_join'], var=[], children=[Child([0], type=Line, var=[]),Child([1], type=Table, var=[]),Child(['id = architect_id'], type=JoinCondition, var=[])])
[     2.517][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 944, 'anti_join': 148, 'left_join': 4, 'union': 4, 'intersect': 32, 'semi_join': 4, 'cross_join': 128, 'filter': 4}
[     2.518][MainProcess][DEBUG] {'natural_join': 0.0030864197530864196, 'natural_join3': 0.006172839506172839, 'natural_join4': 0.012345679012345678, 'inner_join': 0.7283950617283951, 'anti_join': 0.11419753086419752, 'left_join': 0.0030864197530864196, 'union': 0.0030864197530864196, 'intersect': 0.024691358024691357, 'semi_join': 0.0030864197530864196, 'cross_join': 0.09876543209876543, 'filter': 0.0030864197530864196}
[     2.518][MainProcess][DEBUG] {'natural_join': 0.0030864197530864196, 'natural_join3': 0.006172839506172839, 'natural_join4': 0.012345679012345678, 'inner_join': 0.7283950617283951, 'anti_join': 0.11419753086419752, 'left_join': 0.0030864197530864196, 'union': 0.0030864197530864196, 'intersect': 0.024691358024691357, 'semi_join': 0.0030864197530864196, 'cross_join': 0.09876543209876543, 'filter': 0.0030864197530864196}
[     2.518][MainProcess][INFO] Building synthesizer...
[     2.519][MainProcess][DEBUG] [Line(T1, root=[None], var=[], children=[]), Line(T2, root=['inner_join'], var=[4], children=[Child([0], type=Line, var=[330]),Child([1], type=Table, var=[328]),Child(['id = architect_id'], type=JoinCondition, var=[249]),Child([None], type=None, var=[0])])]
[     2.874][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 137 constraints
[     2.905][MainProcess][DEBUG] Enumeration time: 0.3866724967956543
[     2.974][MainProcess][DEBUG] Synthesis time: 0.06934881210327148
[     2.974][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American'"), inner_join(line0, input1, 'id = architect_id')]
[     2.976][MainProcess][DEBUG] Solution found using process 0
[     2.976][MainProcess][INFO] Statistics:
[     2.976][MainProcess][INFO] 	Attempted programs: 2 (approx)
[     2.976][MainProcess][INFO] 		Rejected: 1 (approx)
[     2.976][MainProcess][INFO] 		Failed: 0 (approx)
[     2.976][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.976][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.976][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.976][MainProcess][INFO] 	Total time spent in enumerator init: 0.386672 (approx)
[     2.976][MainProcess][INFO] 	Total time spent in enumerator: 0.003971 (approx)
[     2.977][MainProcess][INFO] 		Enumerated 503.638809 programs/s avg. (just enumeration time)
[     2.977][MainProcess][INFO] 		Enumerated 0.884968 programs/s avg. (overall)
[     2.977][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.061962 (approx)
[     2.977][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.002226 (approx)
[     2.977][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American'"), inner_join(line0, input1, 'id = architect_id')]
[     2.977][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_architect <- read_csv("tests-examples/spider/architecture/tables/architect.csv", col_types = cols("id" = col_integer(),"name" = col_character(),"nationality" = col_character(),"gender" = col_character()))
df_architect <- copy_to(con, df_architect)
df_bridge <- read_csv("tests-examples/spider/architecture/tables/bridge.csv", col_types = cols("architect_id" = col_integer(),"id" = col_integer(),"name" = col_character(),"location" = col_character(),"length_meters" = col_double(),"length_feet" = col_double()))
df_bridge <- copy_to(con, df_bridge)
expected_output <- read_csv("tests-examples/spider/architecture/tables/0017.csv", col_types = cols("name" = col_character()))

df5 <- df_architect %>% filter(nationality == 'American')
df6 <- inner_join(df5, df_bridge, by=c('id' = 'architect_id'), suffix = c('', '.other'), na_matches='never') %>% mutate(architect_id = id)
out <- df6 %>% select(name = name.other)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `name_other` AS `name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`name` AS `name`,
          `nationality`,
          `gender`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`name` AS `name_other`,
          `location`,
          `length_meters`,
          `length_feet`
   FROM
     (SELECT *
      FROM `df_architect`
      WHERE (`nationality` = 'American')) AS LHS
   INNER JOIN df_bridge AS RHS ON (LHS.id = RHS.architect_id))
