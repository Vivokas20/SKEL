[     2.336][MainProcess][INFO] Parsing specification...
[     2.354][MainProcess][INFO] File read
[     2.355][MainProcess][DEBUG] Reading input files...
[     2.366][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/011.csv: ['int64', 'string', 'string']
[     2.372][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/011_o.csv: ['int64', 'string']
[     2.373][MainProcess][INFO] Parsing sketch...
[     2.373][MainProcess][DEBUG] Sketch creation: Line(T1, root=[None], var=[], children=[])
[     2.418][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 30, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 130, 'unite': 9, 'summarise': 28, 'mutate': 4}
[     2.418][MainProcess][DEBUG] {'natural_join': 0.004608294930875576, 'natural_join3': 0.004608294930875576, 'natural_join4': 0.004608294930875576, 'inner_join': 0.1382488479262673, 'anti_join': 0.03225806451612903, 'left_join': 0.004608294930875576, 'union': 0.004608294930875576, 'intersect': 0.013824884792626729, 'semi_join': 0.004608294930875576, 'cross_join': 0.5990783410138248, 'unite': 0.041474654377880185, 'summarise': 0.12903225806451613, 'mutate': 0.018433179723502304}
[     2.418][MainProcess][DEBUG] {'natural_join': 0.004608294930875576, 'natural_join3': 0.004608294930875576, 'natural_join4': 0.004608294930875576, 'inner_join': 0.1382488479262673, 'anti_join': 0.03225806451612903, 'left_join': 0.004608294930875576, 'union': 0.004608294930875576, 'intersect': 0.013824884792626729, 'semi_join': 0.004608294930875576, 'cross_join': 0.5990783410138248, 'unite': 0.041474654377880185, 'summarise': 0.12903225806451613, 'mutate': 0.018433179723502304}
[     2.418][MainProcess][INFO] Building synthesizer...
[     2.420][MainProcess][DEBUG] [Line(T1, root=[None], var=[], children=[])]
[     2.620][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 97 constraints
[     2.637][MainProcess][DEBUG] Enumeration time: 0.2183520793914795
[     2.937][MainProcess][DEBUG] Synthesis time: 0.30022597312927246
[     2.937][MainProcess][INFO] Solution found: [summarise(input0, "concatValue = string_agg(Value, ', ')", 'ID')]
[     2.938][MainProcess][DEBUG] Solution found using process 0
[     2.939][MainProcess][INFO] Statistics:
[     2.939][MainProcess][INFO] 	Attempted programs: 29 (approx)
[     2.939][MainProcess][INFO] 		Rejected: 28 (approx)
[     2.939][MainProcess][INFO] 		Failed: 0 (approx)
[     2.939][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.939][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.939][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.939][MainProcess][INFO] 	Total time spent in enumerator init: 0.218352 (approx)
[     2.939][MainProcess][INFO] 	Total time spent in enumerator: 0.035220 (approx)
[     2.939][MainProcess][INFO] 		Enumerated 823.403528 programs/s avg. (just enumeration time)
[     2.939][MainProcess][INFO] 		Enumerated 13.051026 programs/s avg. (overall)
[     2.939][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.253400 (approx)
[     2.939][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.010959 (approx)
[     2.940][MainProcess][INFO] Solution found: [summarise(input0, "concatValue = string_agg(Value, ', ')", 'ID')]
[     2.940][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_011 <- read_csv("tests-examples/scythe/recent_posts/tables/011.csv", col_types = cols("ID" = col_integer(),"Name" = col_character(),"Value" = col_character()))
df_011 <- copy_to(con, df_011)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/011_o.csv", col_types = cols("ID" = col_integer(),"Value" = col_character()))

string_agg <- function(v,s) {paste0("", Reduce(function(x, y) paste(x, y, sep = s), v))}

df30 <- df_011 %>% group_by(ID) %>% summarise(concatValue = string_agg(Value, ', ')) %>% ungroup()
out <- df30 %>% select(ID, Value = concatValue)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `ID`,
       `concatValue` AS `Value`
FROM
  (SELECT `ID`,
          string_agg(`Value`, ', ') AS concatValue
   FROM df_011
   GROUP BY ID)
