[     3.524][MainProcess][INFO] Parsing specification...
[     3.528][MainProcess][INFO] File read
[     3.529][MainProcess][DEBUG] Reading input files...
[     3.538][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     3.543][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     3.548][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     3.552][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/24.out: ['string']
[     3.590][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 711, 'anti_join': 198, 'left_join': 9, 'union': 9, 'intersect': 54, 'semi_join': 9, 'cross_join': 54, 'filter': 18}
[     3.590][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     3.590][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     3.590][MainProcess][INFO] Building synthesizer...
[     3.692][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 83 constraints
[     3.703][MainProcess][DEBUG] There is no solution for current loc (1).
[     3.703][MainProcess][DEBUG] Enumeration time: 0.1124870777130127
[     3.703][MainProcess][DEBUG] Synthesis time: 0.0004131793975830078
[     3.703][MainProcess][INFO] Increasing the number of lines of code to 2.
[     3.912][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 195 constraints
[     3.931][MainProcess][DEBUG] Enumeration time: 0.2279808521270752
[     4.041][MainProcess][DEBUG] Synthesis time: 0.10941624641418457
[     4.041][MainProcess][INFO] Solution found: [filter(input1, 'salary >= 80000'), natural_join3(input0, input2, line0)]
[     4.042][MainProcess][DEBUG] Solution found using process 0
[     4.042][MainProcess][INFO] Statistics:
[     4.042][MainProcess][INFO] 	Attempted programs: 13 (approx)
[     4.043][MainProcess][INFO] 		Rejected: 1 (approx)
[     4.043][MainProcess][INFO] 		Failed: 11 (approx)
[     4.043][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     4.043][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     4.043][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     4.043][MainProcess][INFO] 	Total time spent in enumerator init: 0.340468 (approx)
[     4.043][MainProcess][INFO] 	Total time spent in enumerator: 0.027155 (approx)
[     4.043][MainProcess][INFO] 		Enumerated 478.730362 programs/s avg. (just enumeration time)
[     4.043][MainProcess][INFO] 		Enumerated 4.603052 programs/s avg. (overall)
[     4.043][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.023984 (approx)
[     4.043][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.006055 (approx)
[     4.043][MainProcess][INFO] Solution found: [filter(input1, 'salary >= 80000'), natural_join3(input0, input2, line0)]
[     4.043][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
expected_output <- read_csv("tests-examples/textbook/tables/24.out", col_types = cols("aname" = col_character()))

df20 <- df_employees %>% filter(salary >= 80000)
df21 <- inner_join(df_aircraft, df_certified, na_matches="never") %>% inner_join(df20, na_matches="never")
out <- df21 %>% select(aname) %>% distinct() %>% arrange(aname)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT aname
FROM
  (SELECT LHS.aid AS aid,
          LHS.aname AS aname,
          LHS.crusingrange AS crusingrange,
          LHS.eid AS eid,
          RHS.ename AS ename,
          RHS.salary AS salary
   FROM
     (SELECT LHS.aid AS aid,
             LHS.aname AS aname,
             LHS.crusingrange AS crusingrange,
             RHS.eid AS eid
      FROM df_aircraft AS LHS
      INNER JOIN df_certified AS RHS ON (LHS.aid = RHS.aid)) AS LHS
   INNER JOIN
     (SELECT *
      FROM df_employees
      WHERE (salary >= 80000.0)) AS RHS ON (LHS.eid = RHS.eid))
ORDER BY aname
