[     6.386][MainProcess][INFO] Parsing specification...
[     6.392][MainProcess][INFO] File read
[     6.394][MainProcess][DEBUG] Reading input files...
[     6.409][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i019.csv: ['int64', 'int64']
[     6.415][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o019.csv: ['int64', 'int64', 'int64']
[     6.464][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 21, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 6, 'summarise': 4, 'mutate': 1}
[     6.464][MainProcess][DEBUG] {'natural_join': 0.022727272727272728, 'natural_join3': 0.022727272727272728, 'natural_join4': 0.022727272727272728, 'inner_join': 0.4772727272727273, 'anti_join': 0.09090909090909091, 'left_join': 0.022727272727272728, 'union': 0.022727272727272728, 'intersect': 0.045454545454545456, 'semi_join': 0.022727272727272728, 'cross_join': 0.13636363636363635, 'summarise': 0.09090909090909091, 'mutate': 0.022727272727272728}
[     6.464][MainProcess][DEBUG] {'natural_join': 0.02272727272727273, 'natural_join3': 0.02272727272727273, 'natural_join4': 0.02272727272727273, 'inner_join': 0.47727272727272735, 'anti_join': 0.09090909090909093, 'left_join': 0.02272727272727273, 'union': 0.02272727272727273, 'intersect': 0.04545454545454546, 'semi_join': 0.02272727272727273, 'cross_join': 0.13636363636363638, 'summarise': 0.09090909090909093, 'mutate': 0.02272727272727273}
[     6.464][MainProcess][INFO] Building synthesizer...
[     6.571][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 90 constraints
[     6.578][MainProcess][DEBUG] Enumeration time: 0.11318540573120117
[     6.907][MainProcess][DEBUG] Synthesis time: 0.3292732238769531
[     6.907][MainProcess][INFO] Increasing the number of lines of code to 2.
[     7.093][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 210 constraints
[     7.104][MainProcess][DEBUG] Enumeration time: 0.1962120532989502
[     7.625][MainProcess][DEBUG] Synthesis time: 0.5214953422546387
[     7.626][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'age'), inner_join(input0, line0, 'age')]
[     7.627][MainProcess][DEBUG] Solution found using process 0
[     7.627][MainProcess][INFO] Statistics:
[     7.627][MainProcess][INFO] 	Attempted programs: 48 (approx)
[     7.627][MainProcess][INFO] 		Rejected: 47 (approx)
[     7.627][MainProcess][INFO] 		Failed: 0 (approx)
[     7.627][MainProcess][INFO] 		Empty outputs: 24 (50.0%) (approx)
[     7.628][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     7.628][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     7.628][MainProcess][INFO] 	Total time spent in enumerator init: 0.309397 (approx)
[     7.628][MainProcess][INFO] 	Total time spent in enumerator: 0.081298 (approx)
[     7.628][MainProcess][INFO] 		Enumerated 590.423072 programs/s avg. (just enumeration time)
[     7.628][MainProcess][INFO] 		Enumerated 8.151186 programs/s avg. (overall)
[     7.628][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.737034 (approx)
[     7.628][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.031231 (approx)
[     7.628][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'age'), inner_join(input0, line0, 'age')]
[     7.628][MainProcess][INFO] Solution size: 2
(declare-fun type_1 () Int)
(declare-fun root_1 () Int)
(declare-fun leaf_1_0 () Int)
(declare-fun leaf_1_1 () Int)
(declare-fun leaf_1_2 () Int)
(declare-fun leaf_1_3 () Int)
(declare-fun bv_1_0_b () (_ BitVec 3))
(declare-fun bv_1_0_a () (_ BitVec 3))
(declare-fun bv_1_1_b () (_ BitVec 3))
(declare-fun bv_1_1_a () (_ BitVec 3))
(declare-fun bv_1_2_b () (_ BitVec 3))
(declare-fun bv_1_2_a () (_ BitVec 3))
(declare-fun bv_1_3_b () (_ BitVec 3))
(declare-fun bv_1_3_a () (_ BitVec 3))
(declare-fun bv_1 () (_ BitVec 3))
(assert (< type_1 1))
(assert (>= type_1 0))
(assert (or (= root_1 1)
    (= root_1 2)
    (= root_1 3)
    (= root_1 4)
    (= root_1 5)
    (= root_1 6)
    (= root_1 7)
    (= root_1 8)
    (= root_1 9)
    (= root_1 10)
    (= root_1 11)
    (= root_1 12)))
(assert (or (= leaf_1_0 0)
    (= leaf_1_0 13)
    (= leaf_1_0 14)
    (= leaf_1_0 15)
    (= leaf_1_0 16)
    (= leaf_1_0 17)
    (= leaf_1_0 18)
    (= leaf_1_0 19)
    (= leaf_1_0 20)
    (= leaf_1_0 21)
    (= leaf_1_0 22)
    (= leaf_1_0 23)
    (= leaf_1_0 24)
    (= leaf_1_0 25)
    (= leaf_1_0 26)
    (= leaf_1_0 27)
    (= leaf_1_0 28)
    (= leaf_1_0 29)
    (= leaf_1_0 30)
    (= leaf_1_0 31)
    (= leaf_1_0 32)
    (= leaf_1_0 33)
    (= leaf_1_0 34)
    (= leaf_1_0 35)
    (= leaf_1_0 36)
    (= leaf_1_0 37)
    (= leaf_1_0 38)
    (= leaf_1_0 39)
    (= leaf_1_0 40)
    (= leaf_1_0 41)
    (= leaf_1_0 42)
    (= leaf_1_0 43)
    (= leaf_1_0 44)
    (= leaf_1_0 45)
    (= leaf_1_0 46)
    (= leaf_1_0 47)))
(assert (<= leaf_1_0 47))
(assert (>= leaf_1_0 0))
(assert (or (= leaf_1_1 0)
    (= leaf_1_1 13)
    (= leaf_1_1 14)
    (= leaf_1_1 15)
    (= leaf_1_1 16)
    (= leaf_1_1 17)
    (= leaf_1_1 18)
    (= leaf_1_1 19)
    (= leaf_1_1 20)
    (= leaf_1_1 21)
    (= leaf_1_1 22)
    (= leaf_1_1 23)
    (= leaf_1_1 24)
    (= leaf_1_1 25)
    (= leaf_1_1 26)
    (= leaf_1_1 27)
    (= leaf_1_1 28)
    (= leaf_1_1 29)
    (= leaf_1_1 30)
    (= leaf_1_1 31)
    (= leaf_1_1 32)
    (= leaf_1_1 33)
    (= leaf_1_1 34)
    (= leaf_1_1 35)
    (= leaf_1_1 36)
    (= leaf_1_1 37)
    (= leaf_1_1 38)
    (= leaf_1_1 39)
    (= leaf_1_1 40)
    (= leaf_1_1 41)
    (= leaf_1_1 42)
    (= leaf_1_1 43)
    (= leaf_1_1 44)
    (= leaf_1_1 45)
    (= leaf_1_1 46)
    (= leaf_1_1 47)))
(assert (<= leaf_1_1 47))
(assert (>= leaf_1_1 0))
(assert (or (= leaf_1_2 0)
    (= leaf_1_2 13)
    (= leaf_1_2 14)
    (= leaf_1_2 15)
    (= leaf_1_2 16)
    (= leaf_1_2 17)
    (= leaf_1_2 18)
    (= leaf_1_2 19)
    (= leaf_1_2 20)
    (= leaf_1_2 21)
    (= leaf_1_2 22)
    (= leaf_1_2 23)
    (= leaf_1_2 24)
    (= leaf_1_2 25)
    (= leaf_1_2 26)
    (= leaf_1_2 27)
    (= leaf_1_2 28)
    (= leaf_1_2 29)
    (= leaf_1_2 30)
    (= leaf_1_2 31)
    (= leaf_1_2 32)
    (= leaf_1_2 33)
    (= leaf_1_2 34)
    (= leaf_1_2 35)
    (= leaf_1_2 36)
    (= leaf_1_2 37)
    (= leaf_1_2 38)
    (= leaf_1_2 39)
    (= leaf_1_2 40)
    (= leaf_1_2 41)
    (= leaf_1_2 42)
    (= leaf_1_2 43)
    (= leaf_1_2 44)
    (= leaf_1_2 45)
    (= leaf_1_2 46)
    (= leaf_1_2 47)))
(assert (<= leaf_1_2 47))
(assert (>= leaf_1_2 0))
(assert (or (= leaf_1_3 0)
    (= leaf_1_3 13)
    (= leaf_1_3 14)
    (= leaf_1_3 15)
    (= leaf_1_3 16)
    (= leaf_1_3 17)
    (= leaf_1_3 18)
    (= leaf_1_3 19)
    (= leaf_1_3 20)
    (= leaf_1_3 21)
    (= leaf_1_3 22)
    (= leaf_1_3 23)
    (= leaf_1_3 24)
    (= leaf_1_3 25)
    (= leaf_1_3 26)
    (= leaf_1_3 27)
    (= leaf_1_3 28)
    (= leaf_1_3 29)
    (= leaf_1_3 30)
    (= leaf_1_3 31)
    (= leaf_1_3 32)
    (= leaf_1_3 33)
    (= leaf_1_3 34)
    (= leaf_1_3 35)
    (= leaf_1_3 36)
    (= leaf_1_3 37)
    (= leaf_1_3 38)
    (= leaf_1_3 39)
    (= leaf_1_3 40)
    (= leaf_1_3 41)
    (= leaf_1_3 42)
    (= leaf_1_3 43)
    (= leaf_1_3 44)
    (= leaf_1_3 45)
    (= leaf_1_3 46)
    (= leaf_1_3 47)))
(assert (<= leaf_1_3 47))
(assert (>= leaf_1_3 0))
(assert (or (= leaf_1_0 47) (= leaf_1_1 47) (= leaf_1_2 47) (= leaf_1_3 47)))
(assert (=> (= root_1 1) (= type_1 0)))
(assert (=> (= root_1 2) (= type_1 0)))
(assert (=> (= root_1 3) (= type_1 0)))
(assert (=> (= root_1 4) (= type_1 0)))
(assert (=> (= root_1 5) (= type_1 0)))
(assert (=> (= root_1 6) (= type_1 0)))
(assert (=> (= root_1 7) (= type_1 0)))
(assert (=> (= root_1 8) (= type_1 0)))
(assert (=> (= root_1 9) (= type_1 0)))
(assert (=> (= root_1 10) (= type_1 0)))
(assert (=> (= root_1 11) (= type_1 0)))
(assert (=> (= root_1 12) (= type_1 0)))
(assert (=> (= root_1 1)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 1)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 1) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 1) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_2 47) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 2) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_2 47) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_3 47) (= #b011 bv_1_3_a) (= #b000 bv_1_3_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_2 19) (= #b011 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 20) (= #b110 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 21) (= #b011 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 22) (= #b011 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 23) (= #b110 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 24) (= #b110 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 25) (= #b011 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 26) (= #b011 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 27) (= #b110 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 28) (= #b110 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 29) (= #b101 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 30) (= #b101 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 31) (= #b101 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 32) (= #b101 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 33) (= #b101 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 34) (= #b010 bv_1_2_a) (= #b001 bv_1_2_b))
        (and (= leaf_1_2 35) (= #b010 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 36) (= #b001 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 37) (= #b001 bv_1_2_a) (= #b001 bv_1_2_b))
        (and (= leaf_1_2 38) (= #b010 bv_1_2_a) (= #b010 bv_1_2_b))
        (and (= leaf_1_2 39) (= #b011 bv_1_2_a) (= #b011 bv_1_2_b)))))
(assert (=> (= root_1 4) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_2 15) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 16) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 17) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 18) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 5) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 6)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 6)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 6) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 6) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 7)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 7)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 7) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 7) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_2 13) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 14) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 8) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 9)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 9)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 9) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 9) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_2 40) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 41) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 42) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 43) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 44) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 45) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b)))))
(assert (=> (= root_1 10) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_1 46) (= #b000 bv_1_1_a) (= #b100 bv_1_1_b)))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_2 15) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 16) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 17) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 18) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 11) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 12)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 12)
    (or (and (= leaf_1_1 46) (= #b000 bv_1_1_a) (= #b100 bv_1_1_b)))))
(assert (=> (= root_1 12) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 12) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (or (= leaf_1_0 46) (= leaf_1_1 46) (= leaf_1_2 46) (= leaf_1_3 46)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 6) a!1)))
(assert (=> (= root_1 1) (and (< leaf_1_0 leaf_1_1) (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 2)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a) bv_1))))
(assert (=> (= root_1 3)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (< leaf_1_2 leaf_1_3)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a bv_1_3_a) bv_1))))
(assert (=> (= root_1 4)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (let ((a!1 (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
                (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
                (=> (= #b000 bv_1_2_a)
                    (distinct #b000 (bvand bv_1_0_a bv_1_1_a)))
                (= bv_1_0_a bv_1))))
  (=> (= root_1 5) a!1)))
(assert (=> (= root_1 6)
    (and (distinct #b000 (bvand bv_1_0_a bv_1_1_a))
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 7) (= (bvor bv_1_0_a bv_1_1_a) bv_1)))
(assert (=> (= root_1 8)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
         (= bv_1_2_a bv_1))))
(assert (=> (= root_1 9)
    (and (distinct #b000 (bvand bv_1_0_a bv_1_1_a)) (= bv_1_0_a bv_1))))
(assert (=> (= root_1 10)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_0_a bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 11)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= #b000 (bvand bv_1_1_b bv_1_2_a))
         (= (bvor bv_1_1_b bv_1_2_a) bv_1))))
(assert (=> (= root_1 12)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvor bv_1_0_a bv_1_1_b) bv_1))))

(declare-fun type_1 () Int)
(declare-fun root_1 () Int)
(declare-fun leaf_1_0 () Int)
(declare-fun leaf_1_1 () Int)
(declare-fun leaf_1_2 () Int)
(declare-fun leaf_1_3 () Int)
(declare-fun type_2 () Int)
(declare-fun root_2 () Int)
(declare-fun leaf_2_0 () Int)
(declare-fun leaf_2_1 () Int)
(declare-fun leaf_2_2 () Int)
(declare-fun leaf_2_3 () Int)
(declare-fun leaf_2_3_is_line_1 () Bool)
(declare-fun leaf_2_2_is_line_1 () Bool)
(declare-fun leaf_2_1_is_line_1 () Bool)
(declare-fun leaf_2_0_is_line_1 () Bool)
(declare-fun bv_1_0_b () (_ BitVec 3))
(declare-fun bv_1_0_a () (_ BitVec 3))
(declare-fun bv_1_1_b () (_ BitVec 3))
(declare-fun bv_1_1_a () (_ BitVec 3))
(declare-fun bv_1_2_b () (_ BitVec 3))
(declare-fun bv_1_2_a () (_ BitVec 3))
(declare-fun bv_1_3_b () (_ BitVec 3))
(declare-fun bv_1_3_a () (_ BitVec 3))
(declare-fun bv_2_0_b () (_ BitVec 3))
(declare-fun bv_1 () (_ BitVec 3))
(declare-fun bv_2_0_a () (_ BitVec 3))
(declare-fun bv_2_1_b () (_ BitVec 3))
(declare-fun bv_2_1_a () (_ BitVec 3))
(declare-fun bv_2_2_b () (_ BitVec 3))
(declare-fun bv_2_2_a () (_ BitVec 3))
(declare-fun bv_2_3_b () (_ BitVec 3))
(declare-fun bv_2_3_a () (_ BitVec 3))
(declare-fun bv_2 () (_ BitVec 3))
(assert (< type_1 1))
(assert (>= type_1 0))
(assert (or (= root_1 1)
    (= root_1 2)
    (= root_1 3)
    (= root_1 4)
    (= root_1 5)
    (= root_1 6)
    (= root_1 7)
    (= root_1 8)
    (= root_1 9)
    (= root_1 10)
    (= root_1 11)
    (= root_1 12)))
(assert (or (= leaf_1_0 0)
    (= leaf_1_0 13)
    (= leaf_1_0 14)
    (= leaf_1_0 15)
    (= leaf_1_0 16)
    (= leaf_1_0 17)
    (= leaf_1_0 18)
    (= leaf_1_0 19)
    (= leaf_1_0 20)
    (= leaf_1_0 21)
    (= leaf_1_0 22)
    (= leaf_1_0 23)
    (= leaf_1_0 24)
    (= leaf_1_0 25)
    (= leaf_1_0 26)
    (= leaf_1_0 27)
    (= leaf_1_0 28)
    (= leaf_1_0 29)
    (= leaf_1_0 30)
    (= leaf_1_0 31)
    (= leaf_1_0 32)
    (= leaf_1_0 33)
    (= leaf_1_0 34)
    (= leaf_1_0 35)
    (= leaf_1_0 36)
    (= leaf_1_0 37)
    (= leaf_1_0 38)
    (= leaf_1_0 39)
    (= leaf_1_0 40)
    (= leaf_1_0 41)
    (= leaf_1_0 42)
    (= leaf_1_0 43)
    (= leaf_1_0 44)
    (= leaf_1_0 45)
    (= leaf_1_0 46)
    (= leaf_1_0 47)))
(assert (<= leaf_1_0 47))
(assert (>= leaf_1_0 0))
(assert (or (= leaf_1_1 0)
    (= leaf_1_1 13)
    (= leaf_1_1 14)
    (= leaf_1_1 15)
    (= leaf_1_1 16)
    (= leaf_1_1 17)
    (= leaf_1_1 18)
    (= leaf_1_1 19)
    (= leaf_1_1 20)
    (= leaf_1_1 21)
    (= leaf_1_1 22)
    (= leaf_1_1 23)
    (= leaf_1_1 24)
    (= leaf_1_1 25)
    (= leaf_1_1 26)
    (= leaf_1_1 27)
    (= leaf_1_1 28)
    (= leaf_1_1 29)
    (= leaf_1_1 30)
    (= leaf_1_1 31)
    (= leaf_1_1 32)
    (= leaf_1_1 33)
    (= leaf_1_1 34)
    (= leaf_1_1 35)
    (= leaf_1_1 36)
    (= leaf_1_1 37)
    (= leaf_1_1 38)
    (= leaf_1_1 39)
    (= leaf_1_1 40)
    (= leaf_1_1 41)
    (= leaf_1_1 42)
    (= leaf_1_1 43)
    (= leaf_1_1 44)
    (= leaf_1_1 45)
    (= leaf_1_1 46)
    (= leaf_1_1 47)))
(assert (<= leaf_1_1 47))
(assert (>= leaf_1_1 0))
(assert (or (= leaf_1_2 0)
    (= leaf_1_2 13)
    (= leaf_1_2 14)
    (= leaf_1_2 15)
    (= leaf_1_2 16)
    (= leaf_1_2 17)
    (= leaf_1_2 18)
    (= leaf_1_2 19)
    (= leaf_1_2 20)
    (= leaf_1_2 21)
    (= leaf_1_2 22)
    (= leaf_1_2 23)
    (= leaf_1_2 24)
    (= leaf_1_2 25)
    (= leaf_1_2 26)
    (= leaf_1_2 27)
    (= leaf_1_2 28)
    (= leaf_1_2 29)
    (= leaf_1_2 30)
    (= leaf_1_2 31)
    (= leaf_1_2 32)
    (= leaf_1_2 33)
    (= leaf_1_2 34)
    (= leaf_1_2 35)
    (= leaf_1_2 36)
    (= leaf_1_2 37)
    (= leaf_1_2 38)
    (= leaf_1_2 39)
    (= leaf_1_2 40)
    (= leaf_1_2 41)
    (= leaf_1_2 42)
    (= leaf_1_2 43)
    (= leaf_1_2 44)
    (= leaf_1_2 45)
    (= leaf_1_2 46)
    (= leaf_1_2 47)))
(assert (<= leaf_1_2 47))
(assert (>= leaf_1_2 0))
(assert (or (= leaf_1_3 0)
    (= leaf_1_3 13)
    (= leaf_1_3 14)
    (= leaf_1_3 15)
    (= leaf_1_3 16)
    (= leaf_1_3 17)
    (= leaf_1_3 18)
    (= leaf_1_3 19)
    (= leaf_1_3 20)
    (= leaf_1_3 21)
    (= leaf_1_3 22)
    (= leaf_1_3 23)
    (= leaf_1_3 24)
    (= leaf_1_3 25)
    (= leaf_1_3 26)
    (= leaf_1_3 27)
    (= leaf_1_3 28)
    (= leaf_1_3 29)
    (= leaf_1_3 30)
    (= leaf_1_3 31)
    (= leaf_1_3 32)
    (= leaf_1_3 33)
    (= leaf_1_3 34)
    (= leaf_1_3 35)
    (= leaf_1_3 36)
    (= leaf_1_3 37)
    (= leaf_1_3 38)
    (= leaf_1_3 39)
    (= leaf_1_3 40)
    (= leaf_1_3 41)
    (= leaf_1_3 42)
    (= leaf_1_3 43)
    (= leaf_1_3 44)
    (= leaf_1_3 45)
    (= leaf_1_3 46)
    (= leaf_1_3 47)))
(assert (<= leaf_1_3 47))
(assert (>= leaf_1_3 0))
(assert (< type_2 1))
(assert (>= type_2 0))
(assert (or (= root_2 1)
    (= root_2 2)
    (= root_2 3)
    (= root_2 4)
    (= root_2 5)
    (= root_2 6)
    (= root_2 7)
    (= root_2 8)
    (= root_2 9)
    (= root_2 10)
    (= root_2 11)
    (= root_2 12)))
(assert (or (= leaf_2_0 0)
    (= leaf_2_0 13)
    (= leaf_2_0 14)
    (= leaf_2_0 15)
    (= leaf_2_0 16)
    (= leaf_2_0 17)
    (= leaf_2_0 18)
    (= leaf_2_0 19)
    (= leaf_2_0 20)
    (= leaf_2_0 21)
    (= leaf_2_0 22)
    (= leaf_2_0 23)
    (= leaf_2_0 24)
    (= leaf_2_0 25)
    (= leaf_2_0 26)
    (= leaf_2_0 27)
    (= leaf_2_0 28)
    (= leaf_2_0 29)
    (= leaf_2_0 30)
    (= leaf_2_0 31)
    (= leaf_2_0 32)
    (= leaf_2_0 33)
    (= leaf_2_0 34)
    (= leaf_2_0 35)
    (= leaf_2_0 36)
    (= leaf_2_0 37)
    (= leaf_2_0 38)
    (= leaf_2_0 39)
    (= leaf_2_0 40)
    (= leaf_2_0 41)
    (= leaf_2_0 42)
    (= leaf_2_0 43)
    (= leaf_2_0 44)
    (= leaf_2_0 45)
    (= leaf_2_0 46)
    (= leaf_2_0 47)
    (= leaf_2_0 49)))
(assert (<= leaf_2_0 49))
(assert (>= leaf_2_0 0))
(assert (or (= leaf_2_1 0)
    (= leaf_2_1 13)
    (= leaf_2_1 14)
    (= leaf_2_1 15)
    (= leaf_2_1 16)
    (= leaf_2_1 17)
    (= leaf_2_1 18)
    (= leaf_2_1 19)
    (= leaf_2_1 20)
    (= leaf_2_1 21)
    (= leaf_2_1 22)
    (= leaf_2_1 23)
    (= leaf_2_1 24)
    (= leaf_2_1 25)
    (= leaf_2_1 26)
    (= leaf_2_1 27)
    (= leaf_2_1 28)
    (= leaf_2_1 29)
    (= leaf_2_1 30)
    (= leaf_2_1 31)
    (= leaf_2_1 32)
    (= leaf_2_1 33)
    (= leaf_2_1 34)
    (= leaf_2_1 35)
    (= leaf_2_1 36)
    (= leaf_2_1 37)
    (= leaf_2_1 38)
    (= leaf_2_1 39)
    (= leaf_2_1 40)
    (= leaf_2_1 41)
    (= leaf_2_1 42)
    (= leaf_2_1 43)
    (= leaf_2_1 44)
    (= leaf_2_1 45)
    (= leaf_2_1 46)
    (= leaf_2_1 47)
    (= leaf_2_1 49)))
(assert (<= leaf_2_1 49))
(assert (>= leaf_2_1 0))
(assert (or (= leaf_2_2 0)
    (= leaf_2_2 13)
    (= leaf_2_2 14)
    (= leaf_2_2 15)
    (= leaf_2_2 16)
    (= leaf_2_2 17)
    (= leaf_2_2 18)
    (= leaf_2_2 19)
    (= leaf_2_2 20)
    (= leaf_2_2 21)
    (= leaf_2_2 22)
    (= leaf_2_2 23)
    (= leaf_2_2 24)
    (= leaf_2_2 25)
    (= leaf_2_2 26)
    (= leaf_2_2 27)
    (= leaf_2_2 28)
    (= leaf_2_2 29)
    (= leaf_2_2 30)
    (= leaf_2_2 31)
    (= leaf_2_2 32)
    (= leaf_2_2 33)
    (= leaf_2_2 34)
    (= leaf_2_2 35)
    (= leaf_2_2 36)
    (= leaf_2_2 37)
    (= leaf_2_2 38)
    (= leaf_2_2 39)
    (= leaf_2_2 40)
    (= leaf_2_2 41)
    (= leaf_2_2 42)
    (= leaf_2_2 43)
    (= leaf_2_2 44)
    (= leaf_2_2 45)
    (= leaf_2_2 46)
    (= leaf_2_2 47)
    (= leaf_2_2 49)))
(assert (<= leaf_2_2 49))
(assert (>= leaf_2_2 0))
(assert (or (= leaf_2_3 0)
    (= leaf_2_3 13)
    (= leaf_2_3 14)
    (= leaf_2_3 15)
    (= leaf_2_3 16)
    (= leaf_2_3 17)
    (= leaf_2_3 18)
    (= leaf_2_3 19)
    (= leaf_2_3 20)
    (= leaf_2_3 21)
    (= leaf_2_3 22)
    (= leaf_2_3 23)
    (= leaf_2_3 24)
    (= leaf_2_3 25)
    (= leaf_2_3 26)
    (= leaf_2_3 27)
    (= leaf_2_3 28)
    (= leaf_2_3 29)
    (= leaf_2_3 30)
    (= leaf_2_3 31)
    (= leaf_2_3 32)
    (= leaf_2_3 33)
    (= leaf_2_3 34)
    (= leaf_2_3 35)
    (= leaf_2_3 36)
    (= leaf_2_3 37)
    (= leaf_2_3 38)
    (= leaf_2_3 39)
    (= leaf_2_3 40)
    (= leaf_2_3 41)
    (= leaf_2_3 42)
    (= leaf_2_3 43)
    (= leaf_2_3 44)
    (= leaf_2_3 45)
    (= leaf_2_3 46)
    (= leaf_2_3 47)
    (= leaf_2_3 49)))
(assert (<= leaf_2_3 49))
(assert (>= leaf_2_3 0))
(assert (or (= leaf_1_0 47)
    (= leaf_1_1 47)
    (= leaf_1_2 47)
    (= leaf_1_3 47)
    (= leaf_2_0 47)
    (= leaf_2_1 47)
    (= leaf_2_2 47)
    (= leaf_2_3 47)))
(assert (or leaf_2_0_is_line_1 leaf_2_1_is_line_1 leaf_2_2_is_line_1 leaf_2_3_is_line_1))
(assert (=> (= root_1 1) (= type_1 0)))
(assert (=> (= root_1 2) (= type_1 0)))
(assert (=> (= root_1 3) (= type_1 0)))
(assert (=> (= root_1 4) (= type_1 0)))
(assert (=> (= root_1 5) (= type_1 0)))
(assert (=> (= root_1 6) (= type_1 0)))
(assert (=> (= root_1 7) (= type_1 0)))
(assert (=> (= root_1 8) (= type_1 0)))
(assert (=> (= root_1 9) (= type_1 0)))
(assert (=> (= root_1 10) (= type_1 0)))
(assert (=> (= root_1 11) (= type_1 0)))
(assert (=> (= root_1 12) (= type_1 0)))
(assert (=> (= root_2 1) (= type_2 0)))
(assert (=> (= root_2 2) (= type_2 0)))
(assert (=> (= root_2 3) (= type_2 0)))
(assert (=> (= root_2 4) (= type_2 0)))
(assert (=> (= root_2 5) (= type_2 0)))
(assert (=> (= root_2 6) (= type_2 0)))
(assert (=> (= root_2 7) (= type_2 0)))
(assert (=> (= root_2 8) (= type_2 0)))
(assert (=> (= root_2 9) (= type_2 0)))
(assert (=> (= root_2 10) (= type_2 0)))
(assert (=> (= root_2 11) (= type_2 0)))
(assert (=> (= root_2 12) (= type_2 0)))
(assert (=> (= root_1 1)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 1)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 1) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 1) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 2)
    (or (and (= leaf_1_2 47) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 2) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_2 47) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 3)
    (or (and (= leaf_1_3 47) (= #b011 bv_1_3_a) (= #b000 bv_1_3_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 4)
    (or (and (= leaf_1_2 19) (= #b011 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 20) (= #b110 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 21) (= #b011 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 22) (= #b011 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 23) (= #b110 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 24) (= #b110 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 25) (= #b011 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 26) (= #b011 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 27) (= #b110 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 28) (= #b110 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 29) (= #b101 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 30) (= #b101 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 31) (= #b101 bv_1_2_a) (= #b011 bv_1_2_b))
        (and (= leaf_1_2 32) (= #b101 bv_1_2_a) (= #b110 bv_1_2_b))
        (and (= leaf_1_2 33) (= #b101 bv_1_2_a) (= #b101 bv_1_2_b))
        (and (= leaf_1_2 34) (= #b010 bv_1_2_a) (= #b001 bv_1_2_b))
        (and (= leaf_1_2 35) (= #b010 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 36) (= #b001 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 37) (= #b001 bv_1_2_a) (= #b001 bv_1_2_b))
        (and (= leaf_1_2 38) (= #b010 bv_1_2_a) (= #b010 bv_1_2_b))
        (and (= leaf_1_2 39) (= #b011 bv_1_2_a) (= #b011 bv_1_2_b)))))
(assert (=> (= root_1 4) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 5)
    (or (and (= leaf_1_2 15) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 16) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 17) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 18) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 5) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 6)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 6)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 6) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 6) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 7)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 7)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 7) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 7) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 8)
    (or (and (= leaf_1_2 13) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 14) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 8) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 9)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 9)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 9) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 9) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_1 47) (= #b011 bv_1_1_a) (= #b000 bv_1_1_b)))))
(assert (=> (= root_1 10)
    (or (and (= leaf_1_2 40) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 41) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 42) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 43) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 44) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b))
        (and (= leaf_1_2 45) (= #b100 bv_1_2_a) (= #b100 bv_1_2_b)))))
(assert (=> (= root_1 10) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_1 46) (= #b000 bv_1_1_a) (= #b100 bv_1_1_b)))))
(assert (=> (= root_1 11)
    (or (and (= leaf_1_2 15) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 16) (= #b001 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 17) (= #b010 bv_1_2_a) (= #b000 bv_1_2_b))
        (and (= leaf_1_2 18) (= #b011 bv_1_2_a) (= #b000 bv_1_2_b)))))
(assert (=> (= root_1 11) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (=> (= root_1 12)
    (or (and (= leaf_1_0 47) (= #b011 bv_1_0_a) (= #b000 bv_1_0_b)))))
(assert (=> (= root_1 12)
    (or (and (= leaf_1_1 46) (= #b000 bv_1_1_a) (= #b100 bv_1_1_b)))))
(assert (=> (= root_1 12) (and (= leaf_1_2 0) (= #b000 bv_1_2_a) (= #b000 bv_1_2_b))))
(assert (=> (= root_1 12) (and (= leaf_1_3 0) (= #b000 bv_1_3_a) (= #b000 bv_1_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 1)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 1)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 1) (and (= leaf_2_2 0) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))))
(assert (=> (= root_2 1) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 2)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 2)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (= leaf_2_2_is_line_1 (= leaf_2_2 49)))
(assert (=> (= root_2 2)
    (or (and (= leaf_2_2 47) (= #b011 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 49) (= bv_2_2_a bv_1) (= #b000 bv_2_2_b)))))
(assert (=> (= root_2 2) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 3)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 3)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (= leaf_2_2_is_line_1 (= leaf_2_2 49)))
(assert (=> (= root_2 3)
    (or (and (= leaf_2_2 47) (= #b011 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 49) (= bv_2_2_a bv_1) (= #b000 bv_2_2_b)))))
(assert (= leaf_2_3_is_line_1 (= leaf_2_3 49)))
(assert (=> (= root_2 3)
    (or (and (= leaf_2_3 47) (= #b011 bv_2_3_a) (= #b000 bv_2_3_b))
        (and (= leaf_2_3 49) (= bv_2_3_a bv_1) (= #b000 bv_2_3_b)))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 4)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 4)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 4)
    (or (and (= leaf_2_2 19) (= #b011 bv_2_2_a) (= #b110 bv_2_2_b))
        (and (= leaf_2_2 20) (= #b110 bv_2_2_a) (= #b011 bv_2_2_b))
        (and (= leaf_2_2 21) (= #b011 bv_2_2_a) (= #b011 bv_2_2_b))
        (and (= leaf_2_2 22) (= #b011 bv_2_2_a) (= #b101 bv_2_2_b))
        (and (= leaf_2_2 23) (= #b110 bv_2_2_a) (= #b011 bv_2_2_b))
        (and (= leaf_2_2 24) (= #b110 bv_2_2_a) (= #b101 bv_2_2_b))
        (and (= leaf_2_2 25) (= #b011 bv_2_2_a) (= #b110 bv_2_2_b))
        (and (= leaf_2_2 26) (= #b011 bv_2_2_a) (= #b101 bv_2_2_b))
        (and (= leaf_2_2 27) (= #b110 bv_2_2_a) (= #b110 bv_2_2_b))
        (and (= leaf_2_2 28) (= #b110 bv_2_2_a) (= #b101 bv_2_2_b))
        (and (= leaf_2_2 29) (= #b101 bv_2_2_a) (= #b011 bv_2_2_b))
        (and (= leaf_2_2 30) (= #b101 bv_2_2_a) (= #b110 bv_2_2_b))
        (and (= leaf_2_2 31) (= #b101 bv_2_2_a) (= #b011 bv_2_2_b))
        (and (= leaf_2_2 32) (= #b101 bv_2_2_a) (= #b110 bv_2_2_b))
        (and (= leaf_2_2 33) (= #b101 bv_2_2_a) (= #b101 bv_2_2_b))
        (and (= leaf_2_2 34) (= #b010 bv_2_2_a) (= #b001 bv_2_2_b))
        (and (= leaf_2_2 35) (= #b010 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 36) (= #b001 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 37) (= #b001 bv_2_2_a) (= #b001 bv_2_2_b))
        (and (= leaf_2_2 38) (= #b010 bv_2_2_a) (= #b010 bv_2_2_b))
        (and (= leaf_2_2 39) (= #b011 bv_2_2_a) (= #b011 bv_2_2_b)))))
(assert (=> (= root_2 4) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_2 15) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 16) (= #b001 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 17) (= #b010 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 18) (= #b011 bv_2_2_a) (= #b000 bv_2_2_b)))))
(assert (=> (= root_2 5) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 6)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 6)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 6) (and (= leaf_2_2 0) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))))
(assert (=> (= root_2 6) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 7)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 7)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 7) (and (= leaf_2_2 0) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))))
(assert (=> (= root_2 7) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 8)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 8)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 8)
    (or (and (= leaf_2_2 13) (= #b001 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 14) (= #b010 bv_2_2_a) (= #b000 bv_2_2_b)))))
(assert (=> (= root_2 8) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 9)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 9)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 9) (and (= leaf_2_2 0) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))))
(assert (=> (= root_2 9) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 10)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 49)))
(assert (=> (= root_2 10)
    (or (and (= leaf_2_1 47) (= #b011 bv_2_1_a) (= #b000 bv_2_1_b))
        (and (= leaf_2_1 49) (= bv_2_1_a bv_1) (= #b000 bv_2_1_b)))))
(assert (=> (= root_2 10)
    (or (and (= leaf_2_2 40) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 41) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 42) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 43) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 44) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b))
        (and (= leaf_2_2 45) (= #b100 bv_2_2_a) (= #b100 bv_2_2_b)))))
(assert (=> (= root_2 10) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 11)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (=> (= root_2 11)
    (or (and (= leaf_2_1 46) (= #b000 bv_2_1_a) (= #b100 bv_2_1_b)))))
(assert (=> (= root_2 11)
    (or (and (= leaf_2_2 15) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 16) (= #b001 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 17) (= #b010 bv_2_2_a) (= #b000 bv_2_2_b))
        (and (= leaf_2_2 18) (= #b011 bv_2_2_a) (= #b000 bv_2_2_b)))))
(assert (=> (= root_2 11) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 49)))
(assert (=> (= root_2 12)
    (or (and (= leaf_2_0 47) (= #b011 bv_2_0_a) (= #b000 bv_2_0_b))
        (and (= leaf_2_0 49) (= bv_2_0_a bv_1) (= #b000 bv_2_0_b)))))
(assert (=> (= root_2 12)
    (or (and (= leaf_2_1 46) (= #b000 bv_2_1_a) (= #b100 bv_2_1_b)))))
(assert (=> (= root_2 12) (and (= leaf_2_2 0) (= #b000 bv_2_2_a) (= #b000 bv_2_2_b))))
(assert (=> (= root_2 12) (and (= leaf_2_3 0) (= #b000 bv_2_3_a) (= #b000 bv_2_3_b))))
(assert (or (= leaf_1_0 46)
    (= leaf_1_1 46)
    (= leaf_1_2 46)
    (= leaf_1_3 46)
    (= leaf_2_0 46)
    (= leaf_2_1 46)
    (= leaf_2_2 46)
    (= leaf_2_3 46)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 1))
    (distinct root_2 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 2))
    (distinct root_2 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 3))
    (distinct root_2 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 1))
    (distinct root_2 2)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 3))
    (distinct root_2 2)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 5))
    (distinct root_2 5)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 6) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 6) a!1)))
(assert (=> (= root_1 1) (and (< leaf_1_0 leaf_1_1) (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 2)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a) bv_1))))
(assert (=> (= root_1 3)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (< leaf_1_2 leaf_1_3)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a bv_1_3_a) bv_1))))
(assert (=> (= root_1 4)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (let ((a!1 (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
                (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
                (=> (= #b000 bv_1_2_a)
                    (distinct #b000 (bvand bv_1_0_a bv_1_1_a)))
                (= bv_1_0_a bv_1))))
  (=> (= root_1 5) a!1)))
(assert (=> (= root_1 6)
    (and (distinct #b000 (bvand bv_1_0_a bv_1_1_a))
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 7) (= (bvor bv_1_0_a bv_1_1_a) bv_1)))
(assert (=> (= root_1 8)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
         (= bv_1_2_a bv_1))))
(assert (=> (= root_1 9)
    (and (distinct #b000 (bvand bv_1_0_a bv_1_1_a)) (= bv_1_0_a bv_1))))
(assert (=> (= root_1 10)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_0_a bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 11)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= #b000 (bvand bv_1_1_b bv_1_2_a))
         (= (bvor bv_1_1_b bv_1_2_a) bv_1))))
(assert (=> (= root_1 12)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvor bv_1_0_a bv_1_1_b) bv_1))))
(assert (=> (= root_2 1) (and (< leaf_2_0 leaf_2_1) (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 2)
    (and (< leaf_2_0 leaf_2_1)
         (< leaf_2_1 leaf_2_2)
         (= (bvor bv_2_0_a bv_2_1_a bv_2_2_a) bv_2))))
(assert (=> (= root_2 3)
    (and (< leaf_2_0 leaf_2_1)
         (< leaf_2_1 leaf_2_2)
         (< leaf_2_2 leaf_2_3)
         (= (bvor bv_2_0_a bv_2_1_a bv_2_2_a bv_2_3_a) bv_2))))
(assert (=> (= root_2 4)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_1_a bv_2_2_b) bv_2_2_b)
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (let ((a!1 (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
                (= (bvand bv_2_1_a bv_2_2_a) bv_2_2_a)
                (=> (= #b000 bv_2_2_a)
                    (distinct #b000 (bvand bv_2_0_a bv_2_1_a)))
                (= bv_2_0_a bv_2))))
  (=> (= root_2 5) a!1)))
(assert (=> (= root_2 6)
    (and (distinct #b000 (bvand bv_2_0_a bv_2_1_a))
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 7) (= (bvor bv_2_0_a bv_2_1_a) bv_2)))
(assert (=> (= root_2 8)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_1_a bv_2_2_a) bv_2_2_a)
         (= bv_2_2_a bv_2))))
(assert (=> (= root_2 9)
    (and (distinct #b000 (bvand bv_2_0_a bv_2_1_a)) (= bv_2_0_a bv_2))))
(assert (=> (= root_2 10)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_0_a bv_2_1_a bv_2_2_b) bv_2_2_b)
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 11)
    (and (= (bvand bv_2_0_a bv_2_1_a) bv_2_1_a)
         (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= #b000 (bvand bv_2_1_b bv_2_2_a))
         (= (bvor bv_2_1_b bv_2_2_a) bv_2))))
(assert (=> (= root_2 12)
    (and (= (bvand bv_2_0_a bv_2_1_a) bv_2_1_a)
         (= (bvor bv_2_0_a bv_2_1_b) bv_2))))


------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i019 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i019.csv", col_types = cols("id" = col_integer(),"age" = col_integer()))
df_i019 <- copy_to(con, df_i019)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o019.csv", col_types = cols("id" = col_integer(),"age" = col_integer(),"n" = col_integer()))

df49 <- df_i019 %>% group_by(age) %>% summarise(n = n()) %>% ungroup()
df50 <- inner_join(df_i019, df49, by=c('age'), suffix = c('', '.other'), na_matches='never')
out <- df50 %>% select(id, age, n) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       age,
       n
FROM
  (SELECT id,
          LHS.age AS age,
          n
   FROM df_i019 AS LHS
   INNER JOIN
     (SELECT age,
             COUNT(*) AS n
      FROM df_i019
      GROUP BY age) AS RHS ON (LHS.age = RHS.age))
ORDER BY id
