[     2.488][MainProcess][INFO] Parsing specification...
[     2.493][MainProcess][INFO] File read
[     2.494][MainProcess][DEBUG] Reading input files...
[     2.504][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i016.csv: ['int64', 'int64', 'string']
[     2.510][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o016.csv: ['int64', 'string']
[     2.510][MainProcess][INFO] Parsing sketch...
[     2.510][MainProcess][DEBUG] Sketch creation: Line(T1, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     2.554][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 22, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 130, 'unite': 9, 'summarise': 28, 'mutate': 4}
[     2.554][MainProcess][DEBUG] {'natural_join': 0.004784688995215311, 'natural_join3': 0.004784688995215311, 'natural_join4': 0.004784688995215311, 'inner_join': 0.10526315789473684, 'anti_join': 0.03349282296650718, 'left_join': 0.004784688995215311, 'union': 0.004784688995215311, 'intersect': 0.014354066985645933, 'semi_join': 0.004784688995215311, 'cross_join': 0.6220095693779905, 'unite': 0.0430622009569378, 'summarise': 0.1339712918660287, 'mutate': 0.019138755980861243}
[     2.554][MainProcess][DEBUG] {'natural_join': 0.004784688995215311, 'natural_join3': 0.004784688995215311, 'natural_join4': 0.004784688995215311, 'inner_join': 0.10526315789473684, 'anti_join': 0.03349282296650718, 'left_join': 0.004784688995215311, 'union': 0.004784688995215311, 'intersect': 0.014354066985645933, 'semi_join': 0.004784688995215311, 'cross_join': 0.6220095693779905, 'unite': 0.0430622009569378, 'summarise': 0.1339712918660287, 'mutate': 0.019138755980861243}
[     2.554][MainProcess][INFO] Building synthesizer...
[     2.555][MainProcess][DEBUG] [Line(T1, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[180]),Child(['??'], type=SummariseCondition, var=[176, 177, 178, 179]),Child(['??'], type=Cols, var=[17, 18, 19, 20, 21, 22, 23]),Child([None], type=None, var=[0])])]
[     2.630][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 44 constraints
[     2.633][MainProcess][DEBUG] Enumeration time: 0.07857537269592285
[     2.927][MainProcess][DEBUG] Synthesis time: 0.2940940856933594
[     2.927][MainProcess][INFO] Solution found: [summarise(input0, "concatEMPLOYEE = string_agg(EMPLOYEE, ', ')", 'COMPANY_ID')]
[     2.928][MainProcess][DEBUG] Solution found using process 0
[     2.928][MainProcess][INFO] Statistics:
[     2.928][MainProcess][INFO] 	Attempted programs: 24 (approx)
[     2.929][MainProcess][INFO] 		Rejected: 23 (approx)
[     2.929][MainProcess][INFO] 		Failed: 0 (approx)
[     2.929][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.929][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.929][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.929][MainProcess][INFO] 	Total time spent in enumerator init: 0.078575 (approx)
[     2.929][MainProcess][INFO] 	Total time spent in enumerator: 0.024323 (approx)
[     2.929][MainProcess][INFO] 		Enumerated 986.701588 programs/s avg. (just enumeration time)
[     2.929][MainProcess][INFO] 		Enumerated 10.829057 programs/s avg. (overall)
[     2.929][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.258711 (approx)
[     2.929][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.010442 (approx)
[     2.929][MainProcess][INFO] Solution found: [summarise(input0, "concatEMPLOYEE = string_agg(EMPLOYEE, ', ')", 'COMPANY_ID')]
[     2.929][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i016 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i016.csv", col_types = cols("ID" = col_integer(),"COMPANY_ID" = col_integer(),"EMPLOYEE" = col_character()))
df_i016 <- copy_to(con, df_i016)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o016.csv", col_types = cols("COMPANY_ID" = col_integer(),"concatEMPLOYEE" = col_character()))

string_agg <- function(v,s) {paste0("", Reduce(function(x, y) paste(x, y, sep = s), v))}

df25 <- df_i016 %>% group_by(COMPANY_ID) %>% summarise(concatEMPLOYEE = string_agg(EMPLOYEE, ', ')) %>% ungroup()
out <- df25 %>% select(COMPANY_ID, concatEMPLOYEE)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `COMPANY_ID`,
       `concatEMPLOYEE`
FROM
  (SELECT `COMPANY_ID`,
          string_agg(`EMPLOYEE`, ', ') AS concatEMPLOYEE
   FROM df_i016
   GROUP BY COMPANY_ID)
