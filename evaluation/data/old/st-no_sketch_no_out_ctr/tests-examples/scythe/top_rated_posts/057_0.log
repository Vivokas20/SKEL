[     2.309][MainProcess][INFO] Parsing specification...
[     2.313][MainProcess][INFO] File read
[     2.314][MainProcess][DEBUG] Reading input files...
[     2.324][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i057.csv: ['int64', 'string', 'string', 'int64']
[     2.331][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o057.csv: ['string', 'string', 'int64']
[     2.399][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 60, 'anti_join': 11, 'left_join': 1, 'union': 1, 'intersect': 4, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 22, 'mutate': 2}
[     2.399][MainProcess][DEBUG] {'natural_join': 0.000819000819000819, 'natural_join3': 0.000819000819000819, 'natural_join4': 0.000819000819000819, 'inner_join': 0.04914004914004914, 'anti_join': 0.009009009009009009, 'left_join': 0.000819000819000819, 'union': 0.000819000819000819, 'intersect': 0.003276003276003276, 'semi_join': 0.000819000819000819, 'cross_join': 0.9090909090909091, 'filter': 0.004914004914004914, 'summarise': 0.018018018018018018, 'mutate': 0.001638001638001638}
[     2.399][MainProcess][DEBUG] {'natural_join': 0.000819000819000819, 'natural_join3': 0.000819000819000819, 'natural_join4': 0.000819000819000819, 'inner_join': 0.04914004914004914, 'anti_join': 0.009009009009009009, 'left_join': 0.000819000819000819, 'union': 0.000819000819000819, 'intersect': 0.003276003276003276, 'semi_join': 0.000819000819000819, 'cross_join': 0.9090909090909091, 'filter': 0.004914004914004914, 'summarise': 0.018018018018018018, 'mutate': 0.001638001638001638}
[     2.399][MainProcess][INFO] Building synthesizer...
[     3.315][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 92 constraints
[     3.399][MainProcess][DEBUG] Enumeration time: 1.0002520084381104
[     5.051][MainProcess][DEBUG] Synthesis time: 1.6519696712493896
[     5.052][MainProcess][INFO] Increasing the number of lines of code to 2.
[     6.753][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 215 constraints
[     6.926][MainProcess][DEBUG] Enumeration time: 1.8740794658660889
[    11.660][MainProcess][DEBUG] Synthesis time: 4.7318949699401855
[    11.661][MainProcess][INFO] Solution found: [summarise(input0, 'Birthyear = min(Birthyear)', 'City'), cross_join(input0, line0, 'Birthyear == Birthyear.other')]
[    11.667][MainProcess][DEBUG] Solution found using process 0
[    11.667][MainProcess][INFO] Statistics:
[    11.667][MainProcess][INFO] 	Attempted programs: 36 (approx)
[    11.667][MainProcess][INFO] 		Rejected: 35 (approx)
[    11.667][MainProcess][INFO] 		Failed: 0 (approx)
[    11.667][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[    11.668][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    11.668][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    11.668][MainProcess][INFO] 	Total time spent in enumerator init: 2.874331 (approx)
[    11.668][MainProcess][INFO] 	Total time spent in enumerator: 0.128081 (approx)
[    11.668][MainProcess][INFO] 		Enumerated 281.071951 programs/s avg. (just enumeration time)
[    11.668][MainProcess][INFO] 		Enumerated 3.274990 programs/s avg. (overall)
[    11.668][MainProcess][INFO] 	Total time spent in evaluation & testing: 6.233239 (approx)
[    11.668][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.021373 (approx)
[    11.668][MainProcess][INFO] Solution found: [summarise(input0, 'Birthyear = min(Birthyear)', 'City'), cross_join(input0, line0, 'Birthyear == Birthyear.other')]
[    11.668][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i057 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i057.csv", col_types = cols("ID" = col_integer(),"Name" = col_character(),"City" = col_character(),"Birthyear" = col_integer()))
df_i057 <- copy_to(con, df_i057)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o057.csv", col_types = cols("Name" = col_character(),"City" = col_character(),"minBirthyear" = col_integer()))

df38 <- df_i057 %>% group_by(City) %>% summarise(Birthyear = min(Birthyear)) %>% ungroup()
df39 <- full_join(df_i057, df38, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(Birthyear == Birthyear.other)
out <- df39 %>% select(Name, City, minBirthyear = Birthyear) %>% arrange(Name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Name,
       City,
       Birthyear AS minBirthyear
FROM
  (SELECT ID,
          Name,
          LHS.City AS City,
          LHS.Birthyear AS Birthyear,
          RHS.City AS City_other,
          RHS.Birthyear AS Birthyear_other
   FROM df_i057 AS LHS
   CROSS JOIN
     (SELECT City,
             MIN(Birthyear) AS Birthyear
      FROM df_i057
      GROUP BY City) AS RHS)
WHERE (Birthyear = Birthyear_other)
ORDER BY Name
