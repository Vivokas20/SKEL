[     6.271][MainProcess][INFO] Parsing specification...
[     6.276][MainProcess][INFO] File read
[     6.278][MainProcess][DEBUG] Reading input files...
[     6.288][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i043.csv: ['string', 'string']
[     6.294][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o043.csv: ['string', 'string']
[     6.340][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 7, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 6, 'filter': 6, 'summarise': 4, 'mutate': 1}
[     6.340][MainProcess][DEBUG] {'natural_join': 0.027777777777777776, 'natural_join3': 0.027777777777777776, 'natural_join4': 0.027777777777777776, 'inner_join': 0.19444444444444445, 'anti_join': 0.1111111111111111, 'left_join': 0.027777777777777776, 'union': 0.027777777777777776, 'intersect': 0.05555555555555555, 'semi_join': 0.027777777777777776, 'cross_join': 0.16666666666666666, 'filter': 0.16666666666666666, 'summarise': 0.1111111111111111, 'mutate': 0.027777777777777776}
[     6.341][MainProcess][DEBUG] {'natural_join': 0.02777777777777778, 'natural_join3': 0.02777777777777778, 'natural_join4': 0.02777777777777778, 'inner_join': 0.19444444444444448, 'anti_join': 0.11111111111111112, 'left_join': 0.02777777777777778, 'union': 0.02777777777777778, 'intersect': 0.05555555555555556, 'semi_join': 0.02777777777777778, 'cross_join': 0.16666666666666669, 'filter': 0.16666666666666669, 'summarise': 0.11111111111111112, 'mutate': 0.02777777777777778}
[     6.341][MainProcess][INFO] Building synthesizer...
[     6.517][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 216 constraints
[     6.530][MainProcess][DEBUG] Enumeration time: 0.1889181137084961
[     7.367][MainProcess][DEBUG] Synthesis time: 0.8369865417480469
[     7.367][MainProcess][INFO] Increasing the number of lines of code to 3.
[     7.607][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 371 constraints
[     7.623][MainProcess][DEBUG] Enumeration time: 0.25617098808288574
[    24.457][MainProcess][DEBUG] Synthesis time: 16.83345103263855
[    24.458][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'EmailAddress'), filter(line0, 'n > 1'), inner_join(line1, input0, 'EmailAddress')]
[    24.464][MainProcess][DEBUG] Solution found using process 0
[    24.465][MainProcess][INFO] Statistics:
[    24.465][MainProcess][INFO] 	Attempted programs: 622 (approx)
[    24.465][MainProcess][INFO] 		Rejected: 621 (approx)
[    24.465][MainProcess][INFO] 		Failed: 0 (approx)
[    24.465][MainProcess][INFO] 		Empty outputs: 361 (58.0%) (approx)
[    24.465][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    24.465][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    24.465][MainProcess][INFO] 	Total time spent in enumerator init: 0.445089 (approx)
[    24.465][MainProcess][INFO] 	Total time spent in enumerator: 1.959860 (approx)
[    24.465][MainProcess][INFO] 		Enumerated 317.369555 programs/s avg. (just enumeration time)
[    24.465][MainProcess][INFO] 		Enumerated 27.314825 programs/s avg. (overall)
[    24.466][MainProcess][INFO] 	Total time spent in evaluation & testing: 15.193992 (approx)
[    24.466][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.512514 (approx)
[    24.466][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'EmailAddress'), filter(line0, 'n > 1'), inner_join(line1, input0, 'EmailAddress')]
[    24.466][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i043 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i043.csv", col_types = cols("CustomerName" = col_character(),"EmailAddress" = col_character()))
df_i043 <- copy_to(con, df_i043)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o043.csv", col_types = cols("CustomerName" = col_character(),"EmailAddress" = col_character()))

df628 <- df_i043 %>% group_by(EmailAddress) %>% summarise(n = n()) %>% ungroup()
df629 <- df628 %>% filter(n > 1)
df630 <- inner_join(df629, df_i043, by=c('EmailAddress'), suffix = c('', '.other'), na_matches='never')
out <- df630 %>% select(CustomerName, EmailAddress) %>% arrange(CustomerName)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT CustomerName,
       EmailAddress
FROM
  (SELECT LHS.EmailAddress AS EmailAddress,
          n,
          CustomerName
   FROM
     (SELECT *
      FROM
        (SELECT EmailAddress,
                COUNT(*) AS n
         FROM df_i043
         GROUP BY EmailAddress)
      WHERE (n > 1.0)) AS LHS
   INNER JOIN df_i043 AS RHS ON (LHS.EmailAddress = RHS.EmailAddress))
ORDER BY CustomerName
