[     2.362][MainProcess][INFO] Parsing specification...
[     2.367][MainProcess][INFO] File read
[     2.369][MainProcess][DEBUG] Reading input files...
[     2.379][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8-1.txt: ['string', 'string', 'int64']
[     2.385][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/8.out: ['string', 'int64']
[     2.429][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 12, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 134, 'filter': 32, 'summarise': 7, 'mutate': 1}
[     2.429][MainProcess][DEBUG] {'natural_join': 0.0049504950495049506, 'natural_join3': 0.0049504950495049506, 'natural_join4': 0.0049504950495049506, 'inner_join': 0.0594059405940594, 'anti_join': 0.034653465346534656, 'left_join': 0.0049504950495049506, 'union': 0.0049504950495049506, 'intersect': 0.01485148514851485, 'semi_join': 0.0049504950495049506, 'cross_join': 0.6633663366336634, 'filter': 0.15841584158415842, 'summarise': 0.034653465346534656, 'mutate': 0.0049504950495049506}
[     2.429][MainProcess][DEBUG] {'natural_join': 0.0049504950495049506, 'natural_join3': 0.0049504950495049506, 'natural_join4': 0.0049504950495049506, 'inner_join': 0.0594059405940594, 'anti_join': 0.034653465346534656, 'left_join': 0.0049504950495049506, 'union': 0.0049504950495049506, 'intersect': 0.01485148514851485, 'semi_join': 0.0049504950495049506, 'cross_join': 0.6633663366336634, 'filter': 0.15841584158415842, 'summarise': 0.034653465346534656, 'mutate': 0.0049504950495049506}
[     2.430][MainProcess][INFO] Building synthesizer...
[     2.852][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 216 constraints
[     2.884][MainProcess][DEBUG] Enumeration time: 0.4542727470397949
[     3.009][MainProcess][DEBUG] Synthesis time: 0.12477922439575195
[     3.009][MainProcess][INFO] Solution found: [filter(input0, "level != 'JR'"), summarise(line0, 'meanage = mean(age)', 'level')]
[     3.011][MainProcess][DEBUG] Solution found using process 0
[     3.011][MainProcess][INFO] Statistics:
[     3.011][MainProcess][INFO] 	Attempted programs: 6 (approx)
[     3.011][MainProcess][INFO] 		Rejected: 5 (approx)
[     3.011][MainProcess][INFO] 		Failed: 0 (approx)
[     3.011][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     3.011][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     3.011][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     3.011][MainProcess][INFO] 	Total time spent in enumerator init: 0.454273 (approx)
[     3.011][MainProcess][INFO] 	Total time spent in enumerator: 0.012492 (approx)
[     3.011][MainProcess][INFO] 		Enumerated 480.291314 programs/s avg. (just enumeration time)
[     3.012][MainProcess][INFO] 		Enumerated 2.585137 programs/s avg. (overall)
[     3.012][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.105776 (approx)
[     3.012][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.005421 (approx)
[     3.012][MainProcess][INFO] Solution found: [filter(input0, "level != 'JR'"), summarise(line0, 'meanage = mean(age)', 'level')]
[     3.012][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_8_1 <- read_csv("tests-examples/textbook/tables/8-1.txt", col_types = cols("S_key" = col_character(),"level" = col_character(),"age" = col_integer()))
df_8_1 <- copy_to(con, df_8_1)
expected_output <- read_csv("tests-examples/textbook/tables/8.out", col_types = cols("level" = col_character(),"meanage" = col_integer()))

df9 <- df_8_1 %>% filter(level != 'JR')
df10 <- df9 %>% group_by(level) %>% summarise(meanage = mean(age)) %>% ungroup()
out <- df10 %>% select(level, meanage) %>% arrange(level)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `level`,
       `meanage`
FROM
  (SELECT `level`,
          AVG(`age`) AS `meanage`
   FROM `df_8_1`
   WHERE (`level` != 'JR')
   GROUP BY LEVEL)
ORDER BY LEVEL
