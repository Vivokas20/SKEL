[     5.732][MainProcess][INFO] Parsing specification...
[     5.740][MainProcess][INFO] File read
[     5.742][MainProcess][DEBUG] Reading input files...
[     5.759][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     5.775][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/flights.txt: ['int64', 'string', 'string', 'int64', 'datetime64[ns]', 'datetime64[ns]', 'int64']
[     5.780][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/26.out: ['string']
[     6.135][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 2956, 'anti_join': 224, 'left_join': 4, 'union': 4, 'intersect': 40, 'semi_join': 4, 'cross_join': 26200, 'filter': 3156, 'summarise': 448, 'mutate': 8}
[     6.136][MainProcess][DEBUG] {'natural_join': 0.00012094823415578132, 'natural_join3': 0.00024189646831156264, 'natural_join4': 0.0004837929366231253, 'inner_join': 0.0893807450411224, 'anti_join': 0.006773101112723754, 'left_join': 0.00012094823415578132, 'union': 0.00012094823415578132, 'intersect': 0.0012094823415578133, 'semi_join': 0.00012094823415578132, 'cross_join': 0.7922109337203677, 'filter': 0.09542815674891146, 'summarise': 0.013546202225447508, 'mutate': 0.00024189646831156264}
[     6.136][MainProcess][DEBUG] {'natural_join': 0.00012094823415578132, 'natural_join3': 0.00024189646831156264, 'natural_join4': 0.0004837929366231253, 'inner_join': 0.0893807450411224, 'anti_join': 0.006773101112723754, 'left_join': 0.00012094823415578132, 'union': 0.00012094823415578132, 'intersect': 0.0012094823415578133, 'semi_join': 0.00012094823415578132, 'cross_join': 0.7922109337203677, 'filter': 0.09542815674891146, 'summarise': 0.013546202225447508, 'mutate': 0.00024189646831156264}
[     6.136][MainProcess][INFO] Building synthesizer...
[    19.079][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 218 constraints
[    31.148][MainProcess][DEBUG] There is no solution for current loc (2).
[    31.148][MainProcess][DEBUG] Enumeration time: 25.0121066570282
[    31.149][MainProcess][DEBUG] Synthesis time: 0.0004730224609375
[    31.149][MainProcess][INFO] Increasing the number of lines of code to 3.
[    49.981][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 373 constraints
[    57.372][MainProcess][DEBUG] Enumeration time: 26.222933053970337
[   222.410][MainProcess][DEBUG] Synthesis time: 164.975679397583
[   222.410][MainProcess][INFO] Solution found: [filter(input1, "destination != 'Los Angeles' | destination == 'Honolulu'"), summarise(input0, 'salary = min(salary)', ''), natural_join4(input0, input1, line0, line1)]
[   222.487][MainProcess][DEBUG] Solution found using process 0
[   222.487][MainProcess][INFO] Statistics:
[   222.487][MainProcess][INFO] 	Attempted programs: 1403 (approx)
[   222.488][MainProcess][INFO] 		Rejected: 1402 (approx)
[   222.488][MainProcess][INFO] 		Failed: 0 (approx)
[   222.488][MainProcess][INFO] 		Empty outputs: 819 (58.4%) (approx)
[   222.488][MainProcess][INFO] 		Redundant lines: 0 (approx)
[   222.488][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[   222.488][MainProcess][INFO] 	Total time spent in enumerator init: 51.235040 (approx)
[   222.488][MainProcess][INFO] 	Total time spent in enumerator: 96.454735 (approx)
[   222.488][MainProcess][INFO] 		Enumerated 14.545683 programs/s avg. (just enumeration time)
[   222.488][MainProcess][INFO] 		Enumerated 6.351587 programs/s avg. (overall)
[   222.488][MainProcess][INFO] 	Total time spent in evaluation & testing: 67.222860 (approx)
[   222.488][MainProcess][INFO] 	Total time spent blocking cubes/programs: 1.284890 (approx)
[   222.488][MainProcess][INFO] Solution found: [filter(input1, "destination != 'Los Angeles' | destination == 'Honolulu'"), summarise(input0, 'salary = min(salary)', ''), natural_join4(input0, input1, line0, line1)]
[   222.488][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
df_flights <- read_csv("tests-examples/textbook/tables/flights.txt", col_types = cols("flno" = col_integer(),"origin" = col_character(),"destination" = col_character(),"distance" = col_integer(),"departs" = col_character(),"arrives" = col_character(),"price" = col_integer()))
df_flights$departs <- parse_datetime(df_flights$departs)
df_flights$arrives <- parse_datetime(df_flights$arrives)
df_flights <- copy_to(con, df_flights)
expected_output <- read_csv("tests-examples/textbook/tables/26.out", col_types = cols("ename" = col_character()))

df1947 <- df_flights %>% filter(destination != 'Los Angeles' | destination == 'Honolulu')
df1948 <- df_employees %>% group_by() %>% summarise(salary = min(salary)) %>% ungroup()
df1949 <- full_join(df_employees, df_flights, by=character(), na_matches="never") %>% inner_join(df1947, na_matches="never") %>% inner_join(df1948, na_matches="never")
out <- df1949 %>% select(ename) %>% distinct() %>% arrange(ename)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `ename`
FROM
  (SELECT `eid`,
          `ename`,
          `LHS`.`salary` AS `salary`,
          `flno`,
          `origin`,
          `destination`,
          `distance`,
          `departs`,
          `arrives`,
          `price`
   FROM
     (SELECT `eid`,
             `ename`,
             `salary`,
             `LHS`.`flno` AS `flno`,
             `LHS`.`origin` AS `origin`,
             `LHS`.`destination` AS `destination`,
             `LHS`.`distance` AS `distance`,
             `LHS`.`departs` AS `departs`,
             `LHS`.`arrives` AS `arrives`,
             `LHS`.`price` AS `price`
      FROM
        (SELECT `eid`,
                `ename`,
                `salary`,
                `flno`,
                `origin`,
                `destination`,
                `distance`,
                `departs`,
                `arrives`,
                `price`
         FROM `df_employees` AS `LHS`
         CROSS JOIN `df_flights` AS `RHS`) AS `LHS`
      INNER JOIN
        (SELECT *
         FROM `df_flights`
         WHERE (`destination` != 'Los Angeles'
                OR `destination` = 'Honolulu')) AS RHS ON (LHS.flno = RHS.flno
                                                           AND LHS.origin = RHS.origin
                                                           AND LHS.destination = RHS.destination
                                                           AND LHS.distance = RHS.distance
                                                           AND LHS.departs = RHS.departs
                                                           AND LHS.arrives = RHS.arrives
                                                           AND LHS.price = RHS.price)) AS LHS
   INNER JOIN
     (SELECT MIN(salary) AS salary
      FROM df_employees) AS RHS ON (LHS.salary = RHS.salary))
ORDER BY ename
