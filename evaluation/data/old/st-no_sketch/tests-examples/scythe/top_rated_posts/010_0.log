[     2.497][MainProcess][INFO] Parsing specification...
[     2.502][MainProcess][INFO] File read
[     2.503][MainProcess][DEBUG] Reading input files...
[     2.519][MainProcess][WARNING] Using integers larger than 32 bits! Converting column phone_number to string.
[     2.520][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i010_1.csv: ['datetime64[ns]', 'string', 'object']
[     2.530][MainProcess][WARNING] Using integers larger than 32 bits! Converting column phone_number to string.
[     2.531][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i010_2.csv: ['datetime64[ns]', 'datetime64[ns]', 'object']
[     2.540][MainProcess][WARNING] Using integers larger than 32 bits! Converting column phone_number to string.
[     2.541][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o010.csv: ['datetime64[ns]', 'datetime64[ns]', 'object']
[     2.611][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 104, 'anti_join': 44, 'left_join': 4, 'union': 4, 'intersect': 16, 'semi_join': 4, 'cross_join': 0}
[     2.611][MainProcess][DEBUG] {'natural_join': 0.0196078431372549, 'natural_join3': 0.0392156862745098, 'natural_join4': 0.0784313725490196, 'inner_join': 0.5098039215686274, 'anti_join': 0.21568627450980393, 'left_join': 0.0196078431372549, 'union': 0.0196078431372549, 'intersect': 0.0784313725490196, 'semi_join': 0.0196078431372549, 'cross_join': 0.0}
[     2.612][MainProcess][DEBUG] {'natural_join': 0.0196078431372549, 'natural_join3': 0.0392156862745098, 'natural_join4': 0.0784313725490196, 'inner_join': 0.5098039215686274, 'anti_join': 0.21568627450980393, 'left_join': 0.0196078431372549, 'union': 0.0196078431372549, 'intersect': 0.0784313725490196, 'semi_join': 0.0196078431372549, 'cross_join': 0.0}
[     2.612][MainProcess][INFO] Building synthesizer...
[     2.713][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 75 constraints
[     2.720][MainProcess][DEBUG] Enumeration time: 0.10797500610351562
[     4.094][MainProcess][DEBUG] Synthesis time: 1.3737053871154785
[     4.094][MainProcess][INFO] Solution found: [anti_join(input1, input0, 'phone_number')]
[     4.096][MainProcess][DEBUG] Solution found using process 0
[     4.097][MainProcess][INFO] Statistics:
[     4.097][MainProcess][INFO] 	Attempted programs: 11 (approx)
[     4.097][MainProcess][INFO] 		Rejected: 10 (approx)
[     4.097][MainProcess][INFO] 		Failed: 0 (approx)
[     4.097][MainProcess][INFO] 		Empty outputs: 7 (63.6%) (approx)
[     4.097][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     4.097][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     4.097][MainProcess][INFO] 	Total time spent in enumerator init: 0.107975 (approx)
[     4.098][MainProcess][INFO] 	Total time spent in enumerator: 0.016879 (approx)
[     4.098][MainProcess][INFO] 		Enumerated 651.685015 programs/s avg. (just enumeration time)
[     4.098][MainProcess][INFO] 		Enumerated 3.232474 programs/s avg. (overall)
[     4.098][MainProcess][INFO] 	Total time spent in evaluation & testing: 1.348026 (approx)
[     4.098][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.008057 (approx)
[     4.098][MainProcess][INFO] Solution found: [anti_join(input1, input0, 'phone_number')]
[     4.098][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i010_1 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i010_1.csv", col_types = cols("id" = col_character(),"name" = col_character(),"phone_number" = col_character()))
df_i010_1$id <- parse_datetime(df_i010_1$id)
df_i010_1 <- copy_to(con, df_i010_1)
df_i010_2 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i010_2.csv", col_types = cols("id" = col_character(),"date" = col_character(),"phone_number" = col_character()))
df_i010_2$id <- parse_datetime(df_i010_2$id)
df_i010_2$date <- parse_datetime(df_i010_2$date)
df_i010_2 <- copy_to(con, df_i010_2)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o010.csv", col_types = cols("id" = col_character(),"date" = col_character(),"phone_number" = col_character()))
expected_output$id <- parse_datetime(expected_output$id)
expected_output$date <- parse_datetime(expected_output$date)

df12 <- anti_join(df_i010_2, df_i010_1, by=c('phone_number'), na_matches="never")
out <- df12 %>% select(id, date, phone_number) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id, date, phone_number
FROM
  (SELECT *
   FROM df_i010_2 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM df_i010_1 AS RHS
        WHERE (LHS.phone_number = RHS.phone_number) ))
ORDER BY id
