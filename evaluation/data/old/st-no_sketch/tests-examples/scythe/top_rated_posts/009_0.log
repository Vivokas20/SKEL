[     2.351][MainProcess][INFO] Parsing specification...
[     2.357][MainProcess][INFO] File read
[     2.358][MainProcess][DEBUG] Reading input files...
[     2.369][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i009.csv: ['string', 'string', 'int64']
[     2.376][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o009.csv: ['string', 'string', 'int64']
[     2.445][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 22, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 14, 'mutate': 2}
[     2.445][MainProcess][DEBUG] {'natural_join': 0.0008547008547008547, 'natural_join3': 0.0008547008547008547, 'natural_join4': 0.0008547008547008547, 'inner_join': 0.018803418803418803, 'anti_join': 0.005982905982905983, 'left_join': 0.0008547008547008547, 'union': 0.0008547008547008547, 'intersect': 0.002564102564102564, 'semi_join': 0.0008547008547008547, 'cross_join': 0.9487179487179487, 'filter': 0.005128205128205128, 'summarise': 0.011965811965811967, 'mutate': 0.0017094017094017094}
[     2.445][MainProcess][DEBUG] {'natural_join': 0.0008547008547008548, 'natural_join3': 0.0008547008547008548, 'natural_join4': 0.0008547008547008548, 'inner_join': 0.018803418803418806, 'anti_join': 0.005982905982905984, 'left_join': 0.0008547008547008548, 'union': 0.0008547008547008548, 'intersect': 0.0025641025641025645, 'semi_join': 0.0008547008547008548, 'cross_join': 0.9487179487179488, 'filter': 0.005128205128205129, 'summarise': 0.011965811965811968, 'mutate': 0.0017094017094017096}
[     2.445][MainProcess][INFO] Building synthesizer...
[     3.288][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 93 constraints
[     3.374][MainProcess][DEBUG] Enumeration time: 0.9281940460205078
[     4.318][MainProcess][DEBUG] Synthesis time: 0.9437053203582764
[     4.318][MainProcess][INFO] Increasing the number of lines of code to 2.
[     6.021][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 216 constraints
[     6.180][MainProcess][DEBUG] Enumeration time: 1.8618443012237549
[    31.320][MainProcess][DEBUG] Synthesis time: 25.13750648498535
[    31.320][MainProcess][INFO] Solution found: [summarise(input0, 'maxtime_stamp = max(time_stamp)', 'time_stamp,username'), cross_join(line0, input0, 'time_stamp > maxtime_stamp | time_stamp < time_stamp.other')]
[    31.327][MainProcess][DEBUG] Solution found using process 0
[    31.327][MainProcess][INFO] Statistics:
[    31.327][MainProcess][INFO] 	Attempted programs: 117 (approx)
[    31.327][MainProcess][INFO] 		Rejected: 116 (approx)
[    31.327][MainProcess][INFO] 		Failed: 0 (approx)
[    31.327][MainProcess][INFO] 		Empty outputs: 41 (35.0%) (approx)
[    31.327][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    31.327][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    31.327][MainProcess][INFO] 	Total time spent in enumerator init: 2.790038 (approx)
[    31.328][MainProcess][INFO] 	Total time spent in enumerator: 0.522583 (approx)
[    31.328][MainProcess][INFO] 		Enumerated 223.887672 programs/s avg. (just enumeration time)
[    31.328][MainProcess][INFO] 		Enumerated 3.817189 programs/s avg. (overall)
[    31.328][MainProcess][INFO] 	Total time spent in evaluation & testing: 25.474581 (approx)
[    31.328][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.082378 (approx)
[    31.328][MainProcess][INFO] Solution found: [summarise(input0, 'maxtime_stamp = max(time_stamp)', 'time_stamp,username'), cross_join(line0, input0, 'time_stamp > maxtime_stamp | time_stamp < time_stamp.other')]
[    31.328][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i009 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i009.csv", col_types = cols("username" = col_character(),"ip" = col_character(),"time_stamp" = col_integer()))
df_i009 <- copy_to(con, df_i009)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o009.csv", col_types = cols("username" = col_character(),"ip" = col_character(),"time_stamp" = col_integer()))

df122 <- df_i009 %>% group_by(time_stamp,username) %>% summarise(maxtime_stamp = max(time_stamp)) %>% ungroup()
df123 <- full_join(df122, df_i009, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(time_stamp > maxtime_stamp | time_stamp < time_stamp.other)
out <- df123 %>% select(username = username.other, ip, time_stamp = time_stamp.other) %>% distinct() %>% arrange(username)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT username_other AS username,
                ip,
                time_stamp_other AS time_stamp
FROM
  (SELECT LHS.time_stamp AS time_stamp,
          LHS.username AS username,
          maxtime_stamp,
          RHS.username AS username_other,
          ip,
          RHS.time_stamp AS time_stamp_other
   FROM
     (SELECT time_stamp,
             username,
             MAX(time_stamp) AS maxtime_stamp
      FROM df_i009
      GROUP BY time_stamp,
               username) AS LHS
   CROSS JOIN df_i009 AS RHS)
WHERE (time_stamp > maxtime_stamp
       OR time_stamp < time_stamp_other)
ORDER BY username
