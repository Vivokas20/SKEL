[     2.342][MainProcess][INFO] Parsing specification...
[     2.349][MainProcess][INFO] File read
[     2.350][MainProcess][DEBUG] Reading input files...
[     2.357][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     2.362][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     2.368][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/34.out: ['string', 'Float64']
[     2.368][MainProcess][INFO] Parsing sketch...
[     2.369][MainProcess][DEBUG] Sketch creation: Line(T1, root=['mutate'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[])])
[     2.369][MainProcess][DEBUG] Sketch creation: Line(T2, root=['anti_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Cols, var=[])])
[     2.369][MainProcess][DEBUG] Sketch creation: Line(T3, root=['cross_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=CrossJoinCondition, var=[])])
[     2.439][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 120, 'anti_join': 44, 'left_join': 4, 'union': 4, 'intersect': 16, 'semi_join': 4, 'cross_join': 4440, 'filter': 12, 'summarise': 22, 'mutate': 2}
[     2.439][MainProcess][DEBUG] {'natural_join': 0.0008517887563884157, 'natural_join3': 0.0017035775127768314, 'natural_join4': 0.0034071550255536627, 'inner_join': 0.02555366269165247, 'anti_join': 0.009369676320272573, 'left_join': 0.0008517887563884157, 'union': 0.0008517887563884157, 'intersect': 0.0034071550255536627, 'semi_join': 0.0008517887563884157, 'cross_join': 0.9454855195911414, 'filter': 0.002555366269165247, 'summarise': 0.004684838160136286, 'mutate': 0.00042589437819420784}
[     2.439][MainProcess][DEBUG] {'natural_join': 0.0008517887563884158, 'natural_join3': 0.0017035775127768316, 'natural_join4': 0.003407155025553663, 'inner_join': 0.025553662691652473, 'anti_join': 0.009369676320272574, 'left_join': 0.0008517887563884158, 'union': 0.0008517887563884158, 'intersect': 0.003407155025553663, 'semi_join': 0.0008517887563884158, 'cross_join': 0.9454855195911415, 'filter': 0.0025553662691652473, 'summarise': 0.004684838160136287, 'mutate': 0.0004258943781942079}
[     2.439][MainProcess][INFO] Building synthesizer...
[     2.441][MainProcess][DEBUG] [Line(T1, root=['mutate'], var=[13], children=[Child(['??'], type=Table, var=[1176, 1177]),Child(['??'], type=SummariseCondition, var=[1175]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['anti_join'], var=[5], children=[Child(['??'], type=Table, var=[1176, 1177]),Child(['??'], type=Table, var=[1176, 1177]),Child(['??'], type=Cols, var=[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]),Child([None], type=None, var=[0])]), Line(T3, root=['cross_join'], var=[10], children=[Child(['??'], type=Table, var=[1176, 1177]),Child(['??'], type=Table, var=[1176, 1177]),Child(['??'], type=CrossJoinCondition, var=[59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168]),Child([None], type=None, var=[0])])]
[   101.545][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 167 constraints
[   101.601][MainProcess][DEBUG] Enumeration time: 99.16130375862122
[   102.708][MainProcess][DEBUG] Synthesis time: 1.1069490909576416
[   102.708][MainProcess][INFO] Solution found: [mutate(input1, 'meansalary = mean(salary)'), anti_join(line0, input0, 'eid'), cross_join(line1, line1, 'salary < meansalary.other & meansalary < salary.other')]
[   102.712][MainProcess][DEBUG] Solution found using process 0
[   102.713][MainProcess][INFO] Statistics:
[   102.713][MainProcess][INFO] 	Attempted programs: 62 (approx)
[   102.713][MainProcess][INFO] 		Rejected: 61 (approx)
[   102.713][MainProcess][INFO] 		Failed: 0 (approx)
[   102.713][MainProcess][INFO] 		Empty outputs: 20 (32.3%) (approx)
[   102.713][MainProcess][INFO] 		Redundant lines: 0 (approx)
[   102.713][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[   102.713][MainProcess][INFO] 	Total time spent in enumerator init: 99.161304 (approx)
[   102.713][MainProcess][INFO] 	Total time spent in enumerator: 0.153259 (approx)
[   102.714][MainProcess][INFO] 		Enumerated 404.545098 programs/s avg. (just enumeration time)
[   102.714][MainProcess][INFO] 		Enumerated 0.607616 programs/s avg. (overall)
[   102.714][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.897232 (approx)
[   102.714][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.055005 (approx)
[   102.714][MainProcess][INFO] Solution found: [mutate(input1, 'meansalary = mean(salary)'), anti_join(line0, input0, 'eid'), cross_join(line1, line1, 'salary < meansalary.other & meansalary < salary.other')]
[   102.714][MainProcess][INFO] Solution size: 3
(declare-fun type_1 () Int)
(declare-fun root_1 () Int)
(declare-fun leaf_1_0 () Int)
(declare-fun leaf_1_1 () Int)
(declare-fun leaf_1_2 () Int)
(declare-fun leaf_1_3 () Int)
(declare-fun type_2 () Int)
(declare-fun root_2 () Int)
(declare-fun leaf_2_0 () Int)
(declare-fun leaf_2_1 () Int)
(declare-fun leaf_2_2 () Int)
(declare-fun leaf_2_3 () Int)
(declare-fun type_3 () Int)
(declare-fun root_3 () Int)
(declare-fun leaf_3_0 () Int)
(declare-fun leaf_3_1 () Int)
(declare-fun leaf_3_2 () Int)
(declare-fun leaf_3_3 () Int)
(declare-fun leaf_3_3_is_line_1 () Bool)
(declare-fun leaf_3_2_is_line_1 () Bool)
(declare-fun leaf_3_1_is_line_1 () Bool)
(declare-fun leaf_3_0_is_line_1 () Bool)
(declare-fun leaf_2_3_is_line_1 () Bool)
(declare-fun leaf_2_2_is_line_1 () Bool)
(declare-fun leaf_2_1_is_line_1 () Bool)
(declare-fun leaf_2_0_is_line_1 () Bool)
(declare-fun leaf_3_3_is_line_2 () Bool)
(declare-fun leaf_3_2_is_line_2 () Bool)
(declare-fun leaf_3_1_is_line_2 () Bool)
(declare-fun leaf_3_0_is_line_2 () Bool)
(declare-fun bv_1_0_b () (_ BitVec 5))
(declare-fun bv_1_0_a () (_ BitVec 5))
(declare-fun bv_1_1_b () (_ BitVec 5))
(declare-fun bv_1_1_a () (_ BitVec 5))
(declare-fun bv_1_2_b () (_ BitVec 5))
(declare-fun bv_1_2_a () (_ BitVec 5))
(declare-fun bv_1_3_b () (_ BitVec 5))
(declare-fun bv_1_3_a () (_ BitVec 5))
(declare-fun bv_2_0_b () (_ BitVec 5))
(declare-fun bv_1 () (_ BitVec 5))
(declare-fun bv_2_0_a () (_ BitVec 5))
(declare-fun bv_2_1_b () (_ BitVec 5))
(declare-fun bv_2_1_a () (_ BitVec 5))
(declare-fun bv_2_2_b () (_ BitVec 5))
(declare-fun bv_2_2_a () (_ BitVec 5))
(declare-fun bv_2_3_b () (_ BitVec 5))
(declare-fun bv_2_3_a () (_ BitVec 5))
(declare-fun bv_3_0_b () (_ BitVec 5))
(declare-fun bv_2 () (_ BitVec 5))
(declare-fun bv_3_0_a () (_ BitVec 5))
(declare-fun bv_3_1_b () (_ BitVec 5))
(declare-fun bv_3_1_a () (_ BitVec 5))
(declare-fun bv_3_2_b () (_ BitVec 5))
(declare-fun bv_3_2_a () (_ BitVec 5))
(declare-fun bv_3_3_b () (_ BitVec 5))
(declare-fun bv_3_3_a () (_ BitVec 5))
(declare-fun bv_3 () (_ BitVec 5))
(assert (< type_1 1))
(assert (>= type_1 0))
(assert (or (= root_1 13)))
(assert (or (= leaf_1_0 1176) (= leaf_1_0 1177)))
(assert (<= leaf_1_0 1177))
(assert (>= leaf_1_0 1176))
(assert (or (= leaf_1_1 1175)))
(assert (<= leaf_1_1 1175))
(assert (>= leaf_1_1 1175))
(assert (or (= leaf_1_2 0)))
(assert (<= leaf_1_2 0))
(assert (>= leaf_1_2 0))
(assert (or (= leaf_1_3 0)))
(assert (<= leaf_1_3 0))
(assert (>= leaf_1_3 0))
(assert (< type_2 1))
(assert (>= type_2 0))
(assert (or (= root_2 5)))
(assert (or (= leaf_2_0 1176) (= leaf_2_0 1177) (= leaf_2_0 1179)))
(assert (<= leaf_2_0 1179))
(assert (>= leaf_2_0 1176))
(assert (or (= leaf_2_1 1176) (= leaf_2_1 1177) (= leaf_2_1 1179)))
(assert (<= leaf_2_1 1179))
(assert (>= leaf_2_1 1176))
(assert (or (= leaf_2_2 18)
    (= leaf_2_2 19)
    (= leaf_2_2 20)
    (= leaf_2_2 21)
    (= leaf_2_2 22)
    (= leaf_2_2 23)
    (= leaf_2_2 24)
    (= leaf_2_2 25)
    (= leaf_2_2 26)
    (= leaf_2_2 27)
    (= leaf_2_2 28)))
(assert (<= leaf_2_2 28))
(assert (>= leaf_2_2 18))
(assert (or (= leaf_2_3 0)))
(assert (<= leaf_2_3 0))
(assert (>= leaf_2_3 0))
(assert (< type_3 1))
(assert (>= type_3 0))
(assert (or (= root_3 10)))
(assert (or (= leaf_3_0 1176) (= leaf_3_0 1177) (= leaf_3_0 1179) (= leaf_3_0 1180)))
(assert (<= leaf_3_0 1180))
(assert (>= leaf_3_0 1176))
(assert (or (= leaf_3_1 1176) (= leaf_3_1 1177) (= leaf_3_1 1179) (= leaf_3_1 1180)))
(assert (<= leaf_3_1 1180))
(assert (>= leaf_3_1 1176))
(assert (or (= leaf_3_2 59)
    (= leaf_3_2 60)
    (= leaf_3_2 61)
    (= leaf_3_2 62)
    (= leaf_3_2 63)
    (= leaf_3_2 64)
    (= leaf_3_2 65)
    (= leaf_3_2 66)
    (= leaf_3_2 67)
    (= leaf_3_2 68)
    (= leaf_3_2 69)
    (= leaf_3_2 70)
    (= leaf_3_2 71)
    (= leaf_3_2 72)
    (= leaf_3_2 73)
    (= leaf_3_2 74)
    (= leaf_3_2 75)
    (= leaf_3_2 76)
    (= leaf_3_2 77)
    (= leaf_3_2 78)
    (= leaf_3_2 79)
    (= leaf_3_2 80)
    (= leaf_3_2 81)
    (= leaf_3_2 82)
    (= leaf_3_2 83)
    (= leaf_3_2 84)
    (= leaf_3_2 85)
    (= leaf_3_2 86)
    (= leaf_3_2 87)
    (= leaf_3_2 88)
    (= leaf_3_2 89)
    (= leaf_3_2 90)
    (= leaf_3_2 91)
    (= leaf_3_2 92)
    (= leaf_3_2 93)
    (= leaf_3_2 94)
    (= leaf_3_2 95)
    (= leaf_3_2 96)
    (= leaf_3_2 97)
    (= leaf_3_2 98)
    (= leaf_3_2 99)
    (= leaf_3_2 100)
    (= leaf_3_2 101)
    (= leaf_3_2 102)
    (= leaf_3_2 103)
    (= leaf_3_2 104)
    (= leaf_3_2 105)
    (= leaf_3_2 106)
    (= leaf_3_2 107)
    (= leaf_3_2 108)
    (= leaf_3_2 109)
    (= leaf_3_2 110)
    (= leaf_3_2 111)
    (= leaf_3_2 112)
    (= leaf_3_2 113)
    (= leaf_3_2 114)
    (= leaf_3_2 115)
    (= leaf_3_2 116)
    (= leaf_3_2 117)
    (= leaf_3_2 118)
    (= leaf_3_2 119)
    (= leaf_3_2 120)
    (= leaf_3_2 121)
    (= leaf_3_2 122)
    (= leaf_3_2 123)
    (= leaf_3_2 124)
    (= leaf_3_2 125)
    (= leaf_3_2 126)
    (= leaf_3_2 127)
    (= leaf_3_2 128)
    (= leaf_3_2 129)
    (= leaf_3_2 130)
    (= leaf_3_2 131)
    (= leaf_3_2 132)
    (= leaf_3_2 133)
    (= leaf_3_2 134)
    (= leaf_3_2 135)
    (= leaf_3_2 136)
    (= leaf_3_2 137)
    (= leaf_3_2 138)
    (= leaf_3_2 139)
    (= leaf_3_2 140)
    (= leaf_3_2 141)
    (= leaf_3_2 142)
    (= leaf_3_2 143)
    (= leaf_3_2 144)
    (= leaf_3_2 145)
    (= leaf_3_2 146)
    (= leaf_3_2 147)
    (= leaf_3_2 148)
    (= leaf_3_2 149)
    (= leaf_3_2 150)
    (= leaf_3_2 151)
    (= leaf_3_2 152)
    (= leaf_3_2 153)
    (= leaf_3_2 154)
    (= leaf_3_2 155)
    (= leaf_3_2 156)
    (= leaf_3_2 157)
    (= leaf_3_2 158)
    (= leaf_3_2 159)
    (= leaf_3_2 160)
    (= leaf_3_2 161)
    (= leaf_3_2 162)
    (= leaf_3_2 163)
    (= leaf_3_2 164)
    (= leaf_3_2 165)
    (= leaf_3_2 166)
    (= leaf_3_2 167)
    (= leaf_3_2 168)
    (= leaf_3_2 169)
    (= leaf_3_2 170)
    (= leaf_3_2 171)
    (= leaf_3_2 172)
    (= leaf_3_2 173)
    (= leaf_3_2 174)
    (= leaf_3_2 175)
    (= leaf_3_2 176)
    (= leaf_3_2 177)
    (= leaf_3_2 178)
    (= leaf_3_2 179)
    (= leaf_3_2 180)
    (= leaf_3_2 181)
    (= leaf_3_2 182)
    (= leaf_3_2 183)
    (= leaf_3_2 184)
    (= leaf_3_2 185)
    (= leaf_3_2 186)
    (= leaf_3_2 187)
    (= leaf_3_2 188)
    (= leaf_3_2 189)
    (= leaf_3_2 190)
    (= leaf_3_2 191)
    (= leaf_3_2 192)
    (= leaf_3_2 193)
    (= leaf_3_2 194)
    (= leaf_3_2 195)
    (= leaf_3_2 196)
    (= leaf_3_2 197)
    (= leaf_3_2 198)
    (= leaf_3_2 199)
    (= leaf_3_2 200)
    (= leaf_3_2 201)
    (= leaf_3_2 202)
    (= leaf_3_2 203)
    (= leaf_3_2 204)
    (= leaf_3_2 205)
    (= leaf_3_2 206)
    (= leaf_3_2 207)
    (= leaf_3_2 208)
    (= leaf_3_2 209)
    (= leaf_3_2 210)
    (= leaf_3_2 211)
    (= leaf_3_2 212)
    (= leaf_3_2 213)
    (= leaf_3_2 214)
    (= leaf_3_2 215)
    (= leaf_3_2 216)
    (= leaf_3_2 217)
    (= leaf_3_2 218)
    (= leaf_3_2 219)
    (= leaf_3_2 220)
    (= leaf_3_2 221)
    (= leaf_3_2 222)
    (= leaf_3_2 223)
    (= leaf_3_2 224)
    (= leaf_3_2 225)
    (= leaf_3_2 226)
    (= leaf_3_2 227)
    (= leaf_3_2 228)
    (= leaf_3_2 229)
    (= leaf_3_2 230)
    (= leaf_3_2 231)
    (= leaf_3_2 232)
    (= leaf_3_2 233)
    (= leaf_3_2 234)
    (= leaf_3_2 235)
    (= leaf_3_2 236)
    (= leaf_3_2 237)
    (= leaf_3_2 238)
    (= leaf_3_2 239)
    (= leaf_3_2 240)
    (= leaf_3_2 241)
    (= leaf_3_2 242)
    (= leaf_3_2 243)
    (= leaf_3_2 244)
    (= leaf_3_2 245)
    (= leaf_3_2 246)
    (= leaf_3_2 247)
    (= leaf_3_2 248)
    (= leaf_3_2 249)
    (= leaf_3_2 250)
    (= leaf_3_2 251)
    (= leaf_3_2 252)
    (= leaf_3_2 253)
    (= leaf_3_2 254)
    (= leaf_3_2 255)
    (= leaf_3_2 256)
    (= leaf_3_2 257)
    (= leaf_3_2 258)
    (= leaf_3_2 259)
    (= leaf_3_2 260)
    (= leaf_3_2 261)
    (= leaf_3_2 262)
    (= leaf_3_2 263)
    (= leaf_3_2 264)
    (= leaf_3_2 265)
    (= leaf_3_2 266)
    (= leaf_3_2 267)
    (= leaf_3_2 268)
    (= leaf_3_2 269)
    (= leaf_3_2 270)
    (= leaf_3_2 271)
    (= leaf_3_2 272)
    (= leaf_3_2 273)
    (= leaf_3_2 274)
    (= leaf_3_2 275)
    (= leaf_3_2 276)
    (= leaf_3_2 277)
    (= leaf_3_2 278)
    (= leaf_3_2 279)
    (= leaf_3_2 280)
    (= leaf_3_2 281)
    (= leaf_3_2 282)
    (= leaf_3_2 283)
    (= leaf_3_2 284)
    (= leaf_3_2 285)
    (= leaf_3_2 286)
    (= leaf_3_2 287)
    (= leaf_3_2 288)
    (= leaf_3_2 289)
    (= leaf_3_2 290)
    (= leaf_3_2 291)
    (= leaf_3_2 292)
    (= leaf_3_2 293)
    (= leaf_3_2 294)
    (= leaf_3_2 295)
    (= leaf_3_2 296)
    (= leaf_3_2 297)
    (= leaf_3_2 298)
    (= leaf_3_2 299)
    (= leaf_3_2 300)
    (= leaf_3_2 301)
    (= leaf_3_2 302)
    (= leaf_3_2 303)
    (= leaf_3_2 304)
    (= leaf_3_2 305)
    (= leaf_3_2 306)
    (= leaf_3_2 307)
    (= leaf_3_2 308)
    (= leaf_3_2 309)
    (= leaf_3_2 310)
    (= leaf_3_2 311)
    (= leaf_3_2 312)
    (= leaf_3_2 313)
    (= leaf_3_2 314)
    (= leaf_3_2 315)
    (= leaf_3_2 316)
    (= leaf_3_2 317)
    (= leaf_3_2 318)
    (= leaf_3_2 319)
    (= leaf_3_2 320)
    (= leaf_3_2 321)
    (= leaf_3_2 322)
    (= leaf_3_2 323)
    (= leaf_3_2 324)
    (= leaf_3_2 325)
    (= leaf_3_2 326)
    (= leaf_3_2 327)
    (= leaf_3_2 328)
    (= leaf_3_2 329)
    (= leaf_3_2 330)
    (= leaf_3_2 331)
    (= leaf_3_2 332)
    (= leaf_3_2 333)
    (= leaf_3_2 334)
    (= leaf_3_2 335)
    (= leaf_3_2 336)
    (= leaf_3_2 337)
    (= leaf_3_2 338)
    (= leaf_3_2 339)
    (= leaf_3_2 340)
    (= leaf_3_2 341)
    (= leaf_3_2 342)
    (= leaf_3_2 343)
    (= leaf_3_2 344)
    (= leaf_3_2 345)
    (= leaf_3_2 346)
    (= leaf_3_2 347)
    (= leaf_3_2 348)
    (= leaf_3_2 349)
    (= leaf_3_2 350)
    (= leaf_3_2 351)
    (= leaf_3_2 352)
    (= leaf_3_2 353)
    (= leaf_3_2 354)
    (= leaf_3_2 355)
    (= leaf_3_2 356)
    (= leaf_3_2 357)
    (= leaf_3_2 358)
    (= leaf_3_2 359)
    (= leaf_3_2 360)
    (= leaf_3_2 361)
    (= leaf_3_2 362)
    (= leaf_3_2 363)
    (= leaf_3_2 364)
    (= leaf_3_2 365)
    (= leaf_3_2 366)
    (= leaf_3_2 367)
    (= leaf_3_2 368)
    (= leaf_3_2 369)
    (= leaf_3_2 370)
    (= leaf_3_2 371)
    (= leaf_3_2 372)
    (= leaf_3_2 373)
    (= leaf_3_2 374)
    (= leaf_3_2 375)
    (= leaf_3_2 376)
    (= leaf_3_2 377)
    (= leaf_3_2 378)
    (= leaf_3_2 379)
    (= leaf_3_2 380)
    (= leaf_3_2 381)
    (= leaf_3_2 382)
    (= leaf_3_2 383)
    (= leaf_3_2 384)
    (= leaf_3_2 385)
    (= leaf_3_2 386)
    (= leaf_3_2 387)
    (= leaf_3_2 388)
    (= leaf_3_2 389)
    (= leaf_3_2 390)
    (= leaf_3_2 391)
    (= leaf_3_2 392)
    (= leaf_3_2 393)
    (= leaf_3_2 394)
    (= leaf_3_2 395)
    (= leaf_3_2 396)
    (= leaf_3_2 397)
    (= leaf_3_2 398)
    (= leaf_3_2 399)
    (= leaf_3_2 400)
    (= leaf_3_2 401)
    (= leaf_3_2 402)
    (= leaf_3_2 403)
    (= leaf_3_2 404)
    (= leaf_3_2 405)
    (= leaf_3_2 406)
    (= leaf_3_2 407)
    (= leaf_3_2 408)
    (= leaf_3_2 409)
    (= leaf_3_2 410)
    (= leaf_3_2 411)
    (= leaf_3_2 412)
    (= leaf_3_2 413)
    (= leaf_3_2 414)
    (= leaf_3_2 415)
    (= leaf_3_2 416)
    (= leaf_3_2 417)
    (= leaf_3_2 418)
    (= leaf_3_2 419)
    (= leaf_3_2 420)
    (= leaf_3_2 421)
    (= leaf_3_2 422)
    (= leaf_3_2 423)
    (= leaf_3_2 424)
    (= leaf_3_2 425)
    (= leaf_3_2 426)
    (= leaf_3_2 427)
    (= leaf_3_2 428)
    (= leaf_3_2 429)
    (= leaf_3_2 430)
    (= leaf_3_2 431)
    (= leaf_3_2 432)
    (= leaf_3_2 433)
    (= leaf_3_2 434)
    (= leaf_3_2 435)
    (= leaf_3_2 436)
    (= leaf_3_2 437)
    (= leaf_3_2 438)
    (= leaf_3_2 439)
    (= leaf_3_2 440)
    (= leaf_3_2 441)
    (= leaf_3_2 442)
    (= leaf_3_2 443)
    (= leaf_3_2 444)
    (= leaf_3_2 445)
    (= leaf_3_2 446)
    (= leaf_3_2 447)
    (= leaf_3_2 448)
    (= leaf_3_2 449)
    (= leaf_3_2 450)
    (= leaf_3_2 451)
    (= leaf_3_2 452)
    (= leaf_3_2 453)
    (= leaf_3_2 454)
    (= leaf_3_2 455)
    (= leaf_3_2 456)
    (= leaf_3_2 457)
    (= leaf_3_2 458)
    (= leaf_3_2 459)
    (= leaf_3_2 460)
    (= leaf_3_2 461)
    (= leaf_3_2 462)
    (= leaf_3_2 463)
    (= leaf_3_2 464)
    (= leaf_3_2 465)
    (= leaf_3_2 466)
    (= leaf_3_2 467)
    (= leaf_3_2 468)
    (= leaf_3_2 469)
    (= leaf_3_2 470)
    (= leaf_3_2 471)
    (= leaf_3_2 472)
    (= leaf_3_2 473)
    (= leaf_3_2 474)
    (= leaf_3_2 475)
    (= leaf_3_2 476)
    (= leaf_3_2 477)
    (= leaf_3_2 478)
    (= leaf_3_2 479)
    (= leaf_3_2 480)
    (= leaf_3_2 481)
    (= leaf_3_2 482)
    (= leaf_3_2 483)
    (= leaf_3_2 484)
    (= leaf_3_2 485)
    (= leaf_3_2 486)
    (= leaf_3_2 487)
    (= leaf_3_2 488)
    (= leaf_3_2 489)
    (= leaf_3_2 490)
    (= leaf_3_2 491)
    (= leaf_3_2 492)
    (= leaf_3_2 493)
    (= leaf_3_2 494)
    (= leaf_3_2 495)
    (= leaf_3_2 496)
    (= leaf_3_2 497)
    (= leaf_3_2 498)
    (= leaf_3_2 499)
    (= leaf_3_2 500)
    (= leaf_3_2 501)
    (= leaf_3_2 502)
    (= leaf_3_2 503)
    (= leaf_3_2 504)
    (= leaf_3_2 505)
    (= leaf_3_2 506)
    (= leaf_3_2 507)
    (= leaf_3_2 508)
    (= leaf_3_2 509)
    (= leaf_3_2 510)
    (= leaf_3_2 511)
    (= leaf_3_2 512)
    (= leaf_3_2 513)
    (= leaf_3_2 514)
    (= leaf_3_2 515)
    (= leaf_3_2 516)
    (= leaf_3_2 517)
    (= leaf_3_2 518)
    (= leaf_3_2 519)
    (= leaf_3_2 520)
    (= leaf_3_2 521)
    (= leaf_3_2 522)
    (= leaf_3_2 523)
    (= leaf_3_2 524)
    (= leaf_3_2 525)
    (= leaf_3_2 526)
    (= leaf_3_2 527)
    (= leaf_3_2 528)
    (= leaf_3_2 529)
    (= leaf_3_2 530)
    (= leaf_3_2 531)
    (= leaf_3_2 532)
    (= leaf_3_2 533)
    (= leaf_3_2 534)
    (= leaf_3_2 535)
    (= leaf_3_2 536)
    (= leaf_3_2 537)
    (= leaf_3_2 538)
    (= leaf_3_2 539)
    (= leaf_3_2 540)
    (= leaf_3_2 541)
    (= leaf_3_2 542)
    (= leaf_3_2 543)
    (= leaf_3_2 544)
    (= leaf_3_2 545)
    (= leaf_3_2 546)
    (= leaf_3_2 547)
    (= leaf_3_2 548)
    (= leaf_3_2 549)
    (= leaf_3_2 550)
    (= leaf_3_2 551)
    (= leaf_3_2 552)
    (= leaf_3_2 553)
    (= leaf_3_2 554)
    (= leaf_3_2 555)
    (= leaf_3_2 556)
    (= leaf_3_2 557)
    (= leaf_3_2 558)
    (= leaf_3_2 559)
    (= leaf_3_2 560)
    (= leaf_3_2 561)
    (= leaf_3_2 562)
    (= leaf_3_2 563)
    (= leaf_3_2 564)
    (= leaf_3_2 565)
    (= leaf_3_2 566)
    (= leaf_3_2 567)
    (= leaf_3_2 568)
    (= leaf_3_2 569)
    (= leaf_3_2 570)
    (= leaf_3_2 571)
    (= leaf_3_2 572)
    (= leaf_3_2 573)
    (= leaf_3_2 574)
    (= leaf_3_2 575)
    (= leaf_3_2 576)
    (= leaf_3_2 577)
    (= leaf_3_2 578)
    (= leaf_3_2 579)
    (= leaf_3_2 580)
    (= leaf_3_2 581)
    (= leaf_3_2 582)
    (= leaf_3_2 583)
    (= leaf_3_2 584)
    (= leaf_3_2 585)
    (= leaf_3_2 586)
    (= leaf_3_2 587)
    (= leaf_3_2 588)
    (= leaf_3_2 589)
    (= leaf_3_2 590)
    (= leaf_3_2 591)
    (= leaf_3_2 592)
    (= leaf_3_2 593)
    (= leaf_3_2 594)
    (= leaf_3_2 595)
    (= leaf_3_2 596)
    (= leaf_3_2 597)
    (= leaf_3_2 598)
    (= leaf_3_2 599)
    (= leaf_3_2 600)
    (= leaf_3_2 601)
    (= leaf_3_2 602)
    (= leaf_3_2 603)
    (= leaf_3_2 604)
    (= leaf_3_2 605)
    (= leaf_3_2 606)
    (= leaf_3_2 607)
    (= leaf_3_2 608)
    (= leaf_3_2 609)
    (= leaf_3_2 610)
    (= leaf_3_2 611)
    (= leaf_3_2 612)
    (= leaf_3_2 613)
    (= leaf_3_2 614)
    (= leaf_3_2 615)
    (= leaf_3_2 616)
    (= leaf_3_2 617)
    (= leaf_3_2 618)
    (= leaf_3_2 619)
    (= leaf_3_2 620)
    (= leaf_3_2 621)
    (= leaf_3_2 622)
    (= leaf_3_2 623)
    (= leaf_3_2 624)
    (= leaf_3_2 625)
    (= leaf_3_2 626)
    (= leaf_3_2 627)
    (= leaf_3_2 628)
    (= leaf_3_2 629)
    (= leaf_3_2 630)
    (= leaf_3_2 631)
    (= leaf_3_2 632)
    (= leaf_3_2 633)
    (= leaf_3_2 634)
    (= leaf_3_2 635)
    (= leaf_3_2 636)
    (= leaf_3_2 637)
    (= leaf_3_2 638)
    (= leaf_3_2 639)
    (= leaf_3_2 640)
    (= leaf_3_2 641)
    (= leaf_3_2 642)
    (= leaf_3_2 643)
    (= leaf_3_2 644)
    (= leaf_3_2 645)
    (= leaf_3_2 646)
    (= leaf_3_2 647)
    (= leaf_3_2 648)
    (= leaf_3_2 649)
    (= leaf_3_2 650)
    (= leaf_3_2 651)
    (= leaf_3_2 652)
    (= leaf_3_2 653)
    (= leaf_3_2 654)
    (= leaf_3_2 655)
    (= leaf_3_2 656)
    (= leaf_3_2 657)
    (= leaf_3_2 658)
    (= leaf_3_2 659)
    (= leaf_3_2 660)
    (= leaf_3_2 661)
    (= leaf_3_2 662)
    (= leaf_3_2 663)
    (= leaf_3_2 664)
    (= leaf_3_2 665)
    (= leaf_3_2 666)
    (= leaf_3_2 667)
    (= leaf_3_2 668)
    (= leaf_3_2 669)
    (= leaf_3_2 670)
    (= leaf_3_2 671)
    (= leaf_3_2 672)
    (= leaf_3_2 673)
    (= leaf_3_2 674)
    (= leaf_3_2 675)
    (= leaf_3_2 676)
    (= leaf_3_2 677)
    (= leaf_3_2 678)
    (= leaf_3_2 679)
    (= leaf_3_2 680)
    (= leaf_3_2 681)
    (= leaf_3_2 682)
    (= leaf_3_2 683)
    (= leaf_3_2 684)
    (= leaf_3_2 685)
    (= leaf_3_2 686)
    (= leaf_3_2 687)
    (= leaf_3_2 688)
    (= leaf_3_2 689)
    (= leaf_3_2 690)
    (= leaf_3_2 691)
    (= leaf_3_2 692)
    (= leaf_3_2 693)
    (= leaf_3_2 694)
    (= leaf_3_2 695)
    (= leaf_3_2 696)
    (= leaf_3_2 697)
    (= leaf_3_2 698)
    (= leaf_3_2 699)
    (= leaf_3_2 700)
    (= leaf_3_2 701)
    (= leaf_3_2 702)
    (= leaf_3_2 703)
    (= leaf_3_2 704)
    (= leaf_3_2 705)
    (= leaf_3_2 706)
    (= leaf_3_2 707)
    (= leaf_3_2 708)
    (= leaf_3_2 709)
    (= leaf_3_2 710)
    (= leaf_3_2 711)
    (= leaf_3_2 712)
    (= leaf_3_2 713)
    (= leaf_3_2 714)
    (= leaf_3_2 715)
    (= leaf_3_2 716)
    (= leaf_3_2 717)
    (= leaf_3_2 718)
    (= leaf_3_2 719)
    (= leaf_3_2 720)
    (= leaf_3_2 721)
    (= leaf_3_2 722)
    (= leaf_3_2 723)
    (= leaf_3_2 724)
    (= leaf_3_2 725)
    (= leaf_3_2 726)
    (= leaf_3_2 727)
    (= leaf_3_2 728)
    (= leaf_3_2 729)
    (= leaf_3_2 730)
    (= leaf_3_2 731)
    (= leaf_3_2 732)
    (= leaf_3_2 733)
    (= leaf_3_2 734)
    (= leaf_3_2 735)
    (= leaf_3_2 736)
    (= leaf_3_2 737)
    (= leaf_3_2 738)
    (= leaf_3_2 739)
    (= leaf_3_2 740)
    (= leaf_3_2 741)
    (= leaf_3_2 742)
    (= leaf_3_2 743)
    (= leaf_3_2 744)
    (= leaf_3_2 745)
    (= leaf_3_2 746)
    (= leaf_3_2 747)
    (= leaf_3_2 748)
    (= leaf_3_2 749)
    (= leaf_3_2 750)
    (= leaf_3_2 751)
    (= leaf_3_2 752)
    (= leaf_3_2 753)
    (= leaf_3_2 754)
    (= leaf_3_2 755)
    (= leaf_3_2 756)
    (= leaf_3_2 757)
    (= leaf_3_2 758)
    (= leaf_3_2 759)
    (= leaf_3_2 760)
    (= leaf_3_2 761)
    (= leaf_3_2 762)
    (= leaf_3_2 763)
    (= leaf_3_2 764)
    (= leaf_3_2 765)
    (= leaf_3_2 766)
    (= leaf_3_2 767)
    (= leaf_3_2 768)
    (= leaf_3_2 769)
    (= leaf_3_2 770)
    (= leaf_3_2 771)
    (= leaf_3_2 772)
    (= leaf_3_2 773)
    (= leaf_3_2 774)
    (= leaf_3_2 775)
    (= leaf_3_2 776)
    (= leaf_3_2 777)
    (= leaf_3_2 778)
    (= leaf_3_2 779)
    (= leaf_3_2 780)
    (= leaf_3_2 781)
    (= leaf_3_2 782)
    (= leaf_3_2 783)
    (= leaf_3_2 784)
    (= leaf_3_2 785)
    (= leaf_3_2 786)
    (= leaf_3_2 787)
    (= leaf_3_2 788)
    (= leaf_3_2 789)
    (= leaf_3_2 790)
    (= leaf_3_2 791)
    (= leaf_3_2 792)
    (= leaf_3_2 793)
    (= leaf_3_2 794)
    (= leaf_3_2 795)
    (= leaf_3_2 796)
    (= leaf_3_2 797)
    (= leaf_3_2 798)
    (= leaf_3_2 799)
    (= leaf_3_2 800)
    (= leaf_3_2 801)
    (= leaf_3_2 802)
    (= leaf_3_2 803)
    (= leaf_3_2 804)
    (= leaf_3_2 805)
    (= leaf_3_2 806)
    (= leaf_3_2 807)
    (= leaf_3_2 808)
    (= leaf_3_2 809)
    (= leaf_3_2 810)
    (= leaf_3_2 811)
    (= leaf_3_2 812)
    (= leaf_3_2 813)
    (= leaf_3_2 814)
    (= leaf_3_2 815)
    (= leaf_3_2 816)
    (= leaf_3_2 817)
    (= leaf_3_2 818)
    (= leaf_3_2 819)
    (= leaf_3_2 820)
    (= leaf_3_2 821)
    (= leaf_3_2 822)
    (= leaf_3_2 823)
    (= leaf_3_2 824)
    (= leaf_3_2 825)
    (= leaf_3_2 826)
    (= leaf_3_2 827)
    (= leaf_3_2 828)
    (= leaf_3_2 829)
    (= leaf_3_2 830)
    (= leaf_3_2 831)
    (= leaf_3_2 832)
    (= leaf_3_2 833)
    (= leaf_3_2 834)
    (= leaf_3_2 835)
    (= leaf_3_2 836)
    (= leaf_3_2 837)
    (= leaf_3_2 838)
    (= leaf_3_2 839)
    (= leaf_3_2 840)
    (= leaf_3_2 841)
    (= leaf_3_2 842)
    (= leaf_3_2 843)
    (= leaf_3_2 844)
    (= leaf_3_2 845)
    (= leaf_3_2 846)
    (= leaf_3_2 847)
    (= leaf_3_2 848)
    (= leaf_3_2 849)
    (= leaf_3_2 850)
    (= leaf_3_2 851)
    (= leaf_3_2 852)
    (= leaf_3_2 853)
    (= leaf_3_2 854)
    (= leaf_3_2 855)
    (= leaf_3_2 856)
    (= leaf_3_2 857)
    (= leaf_3_2 858)
    (= leaf_3_2 859)
    (= leaf_3_2 860)
    (= leaf_3_2 861)
    (= leaf_3_2 862)
    (= leaf_3_2 863)
    (= leaf_3_2 864)
    (= leaf_3_2 865)
    (= leaf_3_2 866)
    (= leaf_3_2 867)
    (= leaf_3_2 868)
    (= leaf_3_2 869)
    (= leaf_3_2 870)
    (= leaf_3_2 871)
    (= leaf_3_2 872)
    (= leaf_3_2 873)
    (= leaf_3_2 874)
    (= leaf_3_2 875)
    (= leaf_3_2 876)
    (= leaf_3_2 877)
    (= leaf_3_2 878)
    (= leaf_3_2 879)
    (= leaf_3_2 880)
    (= leaf_3_2 881)
    (= leaf_3_2 882)
    (= leaf_3_2 883)
    (= leaf_3_2 884)
    (= leaf_3_2 885)
    (= leaf_3_2 886)
    (= leaf_3_2 887)
    (= leaf_3_2 888)
    (= leaf_3_2 889)
    (= leaf_3_2 890)
    (= leaf_3_2 891)
    (= leaf_3_2 892)
    (= leaf_3_2 893)
    (= leaf_3_2 894)
    (= leaf_3_2 895)
    (= leaf_3_2 896)
    (= leaf_3_2 897)
    (= leaf_3_2 898)
    (= leaf_3_2 899)
    (= leaf_3_2 900)
    (= leaf_3_2 901)
    (= leaf_3_2 902)
    (= leaf_3_2 903)
    (= leaf_3_2 904)
    (= leaf_3_2 905)
    (= leaf_3_2 906)
    (= leaf_3_2 907)
    (= leaf_3_2 908)
    (= leaf_3_2 909)
    (= leaf_3_2 910)
    (= leaf_3_2 911)
    (= leaf_3_2 912)
    (= leaf_3_2 913)
    (= leaf_3_2 914)
    (= leaf_3_2 915)
    (= leaf_3_2 916)
    (= leaf_3_2 917)
    (= leaf_3_2 918)
    (= leaf_3_2 919)
    (= leaf_3_2 920)
    (= leaf_3_2 921)
    (= leaf_3_2 922)
    (= leaf_3_2 923)
    (= leaf_3_2 924)
    (= leaf_3_2 925)
    (= leaf_3_2 926)
    (= leaf_3_2 927)
    (= leaf_3_2 928)
    (= leaf_3_2 929)
    (= leaf_3_2 930)
    (= leaf_3_2 931)
    (= leaf_3_2 932)
    (= leaf_3_2 933)
    (= leaf_3_2 934)
    (= leaf_3_2 935)
    (= leaf_3_2 936)
    (= leaf_3_2 937)
    (= leaf_3_2 938)
    (= leaf_3_2 939)
    (= leaf_3_2 940)
    (= leaf_3_2 941)
    (= leaf_3_2 942)
    (= leaf_3_2 943)
    (= leaf_3_2 944)
    (= leaf_3_2 945)
    (= leaf_3_2 946)
    (= leaf_3_2 947)
    (= leaf_3_2 948)
    (= leaf_3_2 949)
    (= leaf_3_2 950)
    (= leaf_3_2 951)
    (= leaf_3_2 952)
    (= leaf_3_2 953)
    (= leaf_3_2 954)
    (= leaf_3_2 955)
    (= leaf_3_2 956)
    (= leaf_3_2 957)
    (= leaf_3_2 958)
    (= leaf_3_2 959)
    (= leaf_3_2 960)
    (= leaf_3_2 961)
    (= leaf_3_2 962)
    (= leaf_3_2 963)
    (= leaf_3_2 964)
    (= leaf_3_2 965)
    (= leaf_3_2 966)
    (= leaf_3_2 967)
    (= leaf_3_2 968)
    (= leaf_3_2 969)
    (= leaf_3_2 970)
    (= leaf_3_2 971)
    (= leaf_3_2 972)
    (= leaf_3_2 973)
    (= leaf_3_2 974)
    (= leaf_3_2 975)
    (= leaf_3_2 976)
    (= leaf_3_2 977)
    (= leaf_3_2 978)
    (= leaf_3_2 979)
    (= leaf_3_2 980)
    (= leaf_3_2 981)
    (= leaf_3_2 982)
    (= leaf_3_2 983)
    (= leaf_3_2 984)
    (= leaf_3_2 985)
    (= leaf_3_2 986)
    (= leaf_3_2 987)
    (= leaf_3_2 988)
    (= leaf_3_2 989)
    (= leaf_3_2 990)
    (= leaf_3_2 991)
    (= leaf_3_2 992)
    (= leaf_3_2 993)
    (= leaf_3_2 994)
    (= leaf_3_2 995)
    (= leaf_3_2 996)
    (= leaf_3_2 997)
    (= leaf_3_2 998)
    (= leaf_3_2 999)
    (= leaf_3_2 1000)
    (= leaf_3_2 1001)
    (= leaf_3_2 1002)
    (= leaf_3_2 1003)
    (= leaf_3_2 1004)
    (= leaf_3_2 1005)
    (= leaf_3_2 1006)
    (= leaf_3_2 1007)
    (= leaf_3_2 1008)
    (= leaf_3_2 1009)
    (= leaf_3_2 1010)
    (= leaf_3_2 1011)
    (= leaf_3_2 1012)
    (= leaf_3_2 1013)
    (= leaf_3_2 1014)
    (= leaf_3_2 1015)
    (= leaf_3_2 1016)
    (= leaf_3_2 1017)
    (= leaf_3_2 1018)
    (= leaf_3_2 1019)
    (= leaf_3_2 1020)
    (= leaf_3_2 1021)
    (= leaf_3_2 1022)
    (= leaf_3_2 1023)
    (= leaf_3_2 1024)
    (= leaf_3_2 1025)
    (= leaf_3_2 1026)
    (= leaf_3_2 1027)
    (= leaf_3_2 1028)
    (= leaf_3_2 1029)
    (= leaf_3_2 1030)
    (= leaf_3_2 1031)
    (= leaf_3_2 1032)
    (= leaf_3_2 1033)
    (= leaf_3_2 1034)
    (= leaf_3_2 1035)
    (= leaf_3_2 1036)
    (= leaf_3_2 1037)
    (= leaf_3_2 1038)
    (= leaf_3_2 1039)
    (= leaf_3_2 1040)
    (= leaf_3_2 1041)
    (= leaf_3_2 1042)
    (= leaf_3_2 1043)
    (= leaf_3_2 1044)
    (= leaf_3_2 1045)
    (= leaf_3_2 1046)
    (= leaf_3_2 1047)
    (= leaf_3_2 1048)
    (= leaf_3_2 1049)
    (= leaf_3_2 1050)
    (= leaf_3_2 1051)
    (= leaf_3_2 1052)
    (= leaf_3_2 1053)
    (= leaf_3_2 1054)
    (= leaf_3_2 1055)
    (= leaf_3_2 1056)
    (= leaf_3_2 1057)
    (= leaf_3_2 1058)
    (= leaf_3_2 1059)
    (= leaf_3_2 1060)
    (= leaf_3_2 1061)
    (= leaf_3_2 1062)
    (= leaf_3_2 1063)
    (= leaf_3_2 1064)
    (= leaf_3_2 1065)
    (= leaf_3_2 1066)
    (= leaf_3_2 1067)
    (= leaf_3_2 1068)
    (= leaf_3_2 1069)
    (= leaf_3_2 1070)
    (= leaf_3_2 1071)
    (= leaf_3_2 1072)
    (= leaf_3_2 1073)
    (= leaf_3_2 1074)
    (= leaf_3_2 1075)
    (= leaf_3_2 1076)
    (= leaf_3_2 1077)
    (= leaf_3_2 1078)
    (= leaf_3_2 1079)
    (= leaf_3_2 1080)
    (= leaf_3_2 1081)
    (= leaf_3_2 1082)
    (= leaf_3_2 1083)
    (= leaf_3_2 1084)
    (= leaf_3_2 1085)
    (= leaf_3_2 1086)
    (= leaf_3_2 1087)
    (= leaf_3_2 1088)
    (= leaf_3_2 1089)
    (= leaf_3_2 1090)
    (= leaf_3_2 1091)
    (= leaf_3_2 1092)
    (= leaf_3_2 1093)
    (= leaf_3_2 1094)
    (= leaf_3_2 1095)
    (= leaf_3_2 1096)
    (= leaf_3_2 1097)
    (= leaf_3_2 1098)
    (= leaf_3_2 1099)
    (= leaf_3_2 1100)
    (= leaf_3_2 1101)
    (= leaf_3_2 1102)
    (= leaf_3_2 1103)
    (= leaf_3_2 1104)
    (= leaf_3_2 1105)
    (= leaf_3_2 1106)
    (= leaf_3_2 1107)
    (= leaf_3_2 1108)
    (= leaf_3_2 1109)
    (= leaf_3_2 1110)
    (= leaf_3_2 1111)
    (= leaf_3_2 1112)
    (= leaf_3_2 1113)
    (= leaf_3_2 1114)
    (= leaf_3_2 1115)
    (= leaf_3_2 1116)
    (= leaf_3_2 1117)
    (= leaf_3_2 1118)
    (= leaf_3_2 1119)
    (= leaf_3_2 1120)
    (= leaf_3_2 1121)
    (= leaf_3_2 1122)
    (= leaf_3_2 1123)
    (= leaf_3_2 1124)
    (= leaf_3_2 1125)
    (= leaf_3_2 1126)
    (= leaf_3_2 1127)
    (= leaf_3_2 1128)
    (= leaf_3_2 1129)
    (= leaf_3_2 1130)
    (= leaf_3_2 1131)
    (= leaf_3_2 1132)
    (= leaf_3_2 1133)
    (= leaf_3_2 1134)
    (= leaf_3_2 1135)
    (= leaf_3_2 1136)
    (= leaf_3_2 1137)
    (= leaf_3_2 1138)
    (= leaf_3_2 1139)
    (= leaf_3_2 1140)
    (= leaf_3_2 1141)
    (= leaf_3_2 1142)
    (= leaf_3_2 1143)
    (= leaf_3_2 1144)
    (= leaf_3_2 1145)
    (= leaf_3_2 1146)
    (= leaf_3_2 1147)
    (= leaf_3_2 1148)
    (= leaf_3_2 1149)
    (= leaf_3_2 1150)
    (= leaf_3_2 1151)
    (= leaf_3_2 1152)
    (= leaf_3_2 1153)
    (= leaf_3_2 1154)
    (= leaf_3_2 1155)
    (= leaf_3_2 1156)
    (= leaf_3_2 1157)
    (= leaf_3_2 1158)
    (= leaf_3_2 1159)
    (= leaf_3_2 1160)
    (= leaf_3_2 1161)
    (= leaf_3_2 1162)
    (= leaf_3_2 1163)
    (= leaf_3_2 1164)
    (= leaf_3_2 1165)
    (= leaf_3_2 1166)
    (= leaf_3_2 1167)
    (= leaf_3_2 1168)))
(assert (<= leaf_3_2 1168))
(assert (>= leaf_3_2 59))
(assert (or (= leaf_3_3 0)))
(assert (<= leaf_3_3 0))
(assert (>= leaf_3_3 0))
(assert (or (= leaf_1_0 1176)
    (= leaf_1_1 1176)
    (= leaf_1_2 1176)
    (= leaf_1_3 1176)
    (= leaf_2_0 1176)
    (= leaf_2_1 1176)
    (= leaf_2_2 1176)
    (= leaf_2_3 1176)
    (= leaf_3_0 1176)
    (= leaf_3_1 1176)
    (= leaf_3_2 1176)
    (= leaf_3_3 1176)))
(assert (or (= leaf_1_0 1177)
    (= leaf_1_1 1177)
    (= leaf_1_2 1177)
    (= leaf_1_3 1177)
    (= leaf_2_0 1177)
    (= leaf_2_1 1177)
    (= leaf_2_2 1177)
    (= leaf_2_3 1177)
    (= leaf_3_0 1177)
    (= leaf_3_1 1177)
    (= leaf_3_2 1177)
    (= leaf_3_3 1177)))
(assert (or leaf_2_0_is_line_1
    leaf_2_1_is_line_1
    leaf_2_2_is_line_1
    leaf_2_3_is_line_1
    leaf_3_0_is_line_1
    leaf_3_1_is_line_1
    leaf_3_2_is_line_1
    leaf_3_3_is_line_1))
(assert (or leaf_3_0_is_line_2 leaf_3_1_is_line_2 leaf_3_2_is_line_2 leaf_3_3_is_line_2))
(assert (=> (= root_1 1) (= type_1 0)))
(assert (=> (= root_1 2) (= type_1 0)))
(assert (=> (= root_1 3) (= type_1 0)))
(assert (=> (= root_1 4) (= type_1 0)))
(assert (=> (= root_1 5) (= type_1 0)))
(assert (=> (= root_1 6) (= type_1 0)))
(assert (=> (= root_1 7) (= type_1 0)))
(assert (=> (= root_1 8) (= type_1 0)))
(assert (=> (= root_1 9) (= type_1 0)))
(assert (=> (= root_1 10) (= type_1 0)))
(assert (=> (= root_1 11) (= type_1 0)))
(assert (=> (= root_1 12) (= type_1 0)))
(assert (=> (= root_1 13) (= type_1 0)))
(assert (=> (= root_2 1) (= type_2 0)))
(assert (=> (= root_2 2) (= type_2 0)))
(assert (=> (= root_2 3) (= type_2 0)))
(assert (=> (= root_2 4) (= type_2 0)))
(assert (=> (= root_2 5) (= type_2 0)))
(assert (=> (= root_2 6) (= type_2 0)))
(assert (=> (= root_2 7) (= type_2 0)))
(assert (=> (= root_2 8) (= type_2 0)))
(assert (=> (= root_2 9) (= type_2 0)))
(assert (=> (= root_2 10) (= type_2 0)))
(assert (=> (= root_2 11) (= type_2 0)))
(assert (=> (= root_2 12) (= type_2 0)))
(assert (=> (= root_2 13) (= type_2 0)))
(assert (=> (= root_3 1) (= type_3 0)))
(assert (=> (= root_3 2) (= type_3 0)))
(assert (=> (= root_3 3) (= type_3 0)))
(assert (=> (= root_3 4) (= type_3 0)))
(assert (=> (= root_3 5) (= type_3 0)))
(assert (=> (= root_3 6) (= type_3 0)))
(assert (=> (= root_3 7) (= type_3 0)))
(assert (=> (= root_3 8) (= type_3 0)))
(assert (=> (= root_3 9) (= type_3 0)))
(assert (=> (= root_3 10) (= type_3 0)))
(assert (=> (= root_3 11) (= type_3 0)))
(assert (=> (= root_3 12) (= type_3 0)))
(assert (=> (= root_3 13) (= type_3 0)))
(assert (=> (= root_1 13)
    (or (and (= leaf_1_0 1176) (= #b00011 bv_1_0_a) (= #b00000 bv_1_0_b))
        (and (= leaf_1_0 1177) (= #b01110 bv_1_0_a) (= #b00000 bv_1_0_b)))))
(assert (=> (= root_1 13)
    (or (and (= leaf_1_1 1175) (= #b01000 bv_1_1_a) (= #b10000 bv_1_1_b)))))
(assert (=> (= root_1 13)
    (and (= leaf_1_2 0) (= #b00000 bv_1_2_a) (= #b00000 bv_1_2_b))))
(assert (=> (= root_1 13)
    (and (= leaf_1_3 0) (= #b00000 bv_1_3_a) (= #b00000 bv_1_3_b))))
(assert (= leaf_2_0_is_line_1 (= leaf_2_0 1179)))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_0 1176) (= #b00011 bv_2_0_a) (= #b00000 bv_2_0_b))
        (and (= leaf_2_0 1177) (= #b01110 bv_2_0_a) (= #b00000 bv_2_0_b))
        (and (= leaf_2_0 1179) (= bv_2_0_a bv_1) (= #b00000 bv_2_0_b)))))
(assert (= leaf_2_1_is_line_1 (= leaf_2_1 1179)))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_1 1176) (= #b00011 bv_2_1_a) (= #b00000 bv_2_1_b))
        (and (= leaf_2_1 1177) (= #b01110 bv_2_1_a) (= #b00000 bv_2_1_b))
        (and (= leaf_2_1 1179) (= bv_2_1_a bv_1) (= #b00000 bv_2_1_b)))))
(assert (=> (= root_2 5)
    (or (and (= leaf_2_2 18) (= #b00000 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 19) (= #b00001 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 20) (= #b00010 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 21) (= #b00100 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 22) (= #b01000 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 23) (= #b00011 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 24) (= #b00101 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 25) (= #b01001 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 26) (= #b00110 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 27) (= #b01010 bv_2_2_a) (= #b00000 bv_2_2_b))
        (and (= leaf_2_2 28) (= #b01100 bv_2_2_a) (= #b00000 bv_2_2_b)))))
(assert (=> (= root_2 5) (and (= leaf_2_3 0) (= #b00000 bv_2_3_a) (= #b00000 bv_2_3_b))))
(assert (= leaf_3_0_is_line_1 (= leaf_3_0 1179)))
(assert (= leaf_3_0_is_line_2 (= leaf_3_0 1180)))
(assert (=> (= root_3 10)
    (or (and (= leaf_3_0 1176) (= #b00011 bv_3_0_a) (= #b00000 bv_3_0_b))
        (and (= leaf_3_0 1177) (= #b01110 bv_3_0_a) (= #b00000 bv_3_0_b))
        (and (= leaf_3_0 1179) (= bv_3_0_a bv_1) (= #b00000 bv_3_0_b))
        (and (= leaf_3_0 1180) (= bv_3_0_a bv_2) (= #b00000 bv_3_0_b)))))
(assert (= leaf_3_1_is_line_1 (= leaf_3_1 1179)))
(assert (= leaf_3_1_is_line_2 (= leaf_3_1 1180)))
(assert (=> (= root_3 10)
    (or (and (= leaf_3_1 1176) (= #b00011 bv_3_1_a) (= #b00000 bv_3_1_b))
        (and (= leaf_3_1 1177) (= #b01110 bv_3_1_a) (= #b00000 bv_3_1_b))
        (and (= leaf_3_1 1179) (= bv_3_1_a bv_1) (= #b00000 bv_3_1_b))
        (and (= leaf_3_1 1180) (= bv_3_1_a bv_2) (= #b00000 bv_3_1_b)))))
(assert (=> (= root_3 10)
    (or (and (= leaf_3_2 59) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 60) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 61) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 62) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 63) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 64) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 65) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 66) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 67) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 68) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 69) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 70) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 71) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 72) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 73) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 74) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 75) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 76) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 77) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 78) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 79) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 80) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 81) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 82) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 83) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 84) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 85) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 86) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 87) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 88) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 89) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 90) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 91) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 92) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 93) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 94) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 95) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 96) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 97) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 98) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 99) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 100) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 101) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 102) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 103) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 104) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 105) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 106) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 107) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 108) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 109) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 110) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 111) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 112) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 113) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 114) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 115) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 116) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 117) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 118) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 119) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 120) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 121) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 122) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 123) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 124) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 125) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 126) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 127) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 128) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 129) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 130) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 131) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 132) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 133) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 134) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 135) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 136) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 137) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 138) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 139) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 140) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 141) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 142) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 143) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 144) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 145) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 146) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 147) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 148) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 149) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 150) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 151) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 152) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 153) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 154) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 155) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 156) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 157) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 158) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 159) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 160) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 161) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 162) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 163) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 164) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 165) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 166) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 167) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 168) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 169) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 170) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 171) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 172) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 173) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 174) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 175) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 176) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 177) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 178) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 179) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 180) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 181) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 182) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 183) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 184) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 185) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 186) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 187) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 188) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 189) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 190) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 191) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 192) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 193) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 194) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 195) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 196) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 197) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 198) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 199) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 200) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 201) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 202) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 203) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 204) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 205) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 206) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 207) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 208) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 209) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 210) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 211) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 212) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 213) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 214) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 215) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 216) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 217) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 218) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 219) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 220) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 221) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 222) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 223) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 224) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 225) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 226) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 227) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 228) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 229) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 230) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 231) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 232) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 233) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 234) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 235) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 236) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 237) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 238) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 239) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 240) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 241) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 242) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 243) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 244) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 245) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 246) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 247) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 248) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 249) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 250) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 251) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 252) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 253) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 254) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 255) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 256) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 257) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 258) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 259) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 260) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 261) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 262) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 263) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 264) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 265) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 266) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 267) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 268) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 269) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 270) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 271) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 272) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 273) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 274) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 275) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 276) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 277) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 278) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 279) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 280) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 281) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 282) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 283) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 284) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 285) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 286) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 287) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 288) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 289) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 290) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 291) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 292) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 293) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 294) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 295) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 296) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 297) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 298) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 299) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 300) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 301) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 302) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 303) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 304) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 305) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 306) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 307) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 308) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 309) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 310) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 311) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 312) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 313) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 314) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 315) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 316) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 317) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 318) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 319) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 320) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 321) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 322) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 323) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 324) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 325) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 326) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 327) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 328) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 329) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 330) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 331) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 332) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 333) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 334) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 335) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 336) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 337) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 338) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 339) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 340) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 341) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 342) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 343) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 344) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 345) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 346) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 347) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 348) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 349) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 350) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 351) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 352) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 353) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 354) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 355) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 356) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 357) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 358) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 359) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 360) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 361) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 362) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 363) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 364) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 365) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 366) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 367) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 368) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 369) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 370) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 371) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 372) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 373) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 374) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 375) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 376) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 377) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 378) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 379) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 380) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 381) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 382) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 383) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 384) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 385) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 386) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 387) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 388) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 389) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 390) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 391) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 392) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 393) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 394) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 395) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 396) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 397) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 398) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 399) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 400) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 401) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 402) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 403) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 404) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 405) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 406) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 407) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 408) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 409) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 410) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 411) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 412) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 413) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 414) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 415) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 416) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 417) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 418) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 419) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 420) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 421) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 422) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 423) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 424) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 425) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 426) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 427) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 428) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 429) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 430) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 431) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 432) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 433) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 434) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 435) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 436) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 437) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 438) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 439) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 440) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 441) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 442) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 443) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 444) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 445) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 446) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 447) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 448) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 449) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 450) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 451) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 452) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 453) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 454) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 455) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 456) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 457) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 458) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 459) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 460) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 461) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 462) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 463) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 464) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 465) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 466) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 467) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 468) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 469) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 470) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 471) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 472) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 473) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 474) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 475) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 476) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 477) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 478) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 479) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 480) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 481) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 482) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 483) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 484) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 485) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 486) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 487) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 488) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 489) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 490) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 491) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 492) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 493) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 494) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 495) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 496) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 497) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 498) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 499) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 500) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 501) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 502) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 503) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 504) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 505) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 506) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 507) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 508) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 509) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 510) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 511) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 512) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 513) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 514) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 515) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 516) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 517) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 518) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 519) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 520) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 521) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 522) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 523) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 524) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 525) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 526) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 527) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 528) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 529) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 530) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 531) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 532) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 533) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 534) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 535) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 536) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 537) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 538) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 539) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 540) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 541) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 542) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 543) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 544) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 545) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 546) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 547) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 548) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 549) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 550) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 551) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 552) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 553) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 554) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 555) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 556) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 557) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 558) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 559) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 560) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 561) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 562) (= #b11000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 563) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 564) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 565) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 566) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 567) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 568) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 569) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 570) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 571) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 572) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 573) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 574) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 575) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 576) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 577) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 578) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 579) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 580) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 581) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 582) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 583) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 584) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 585) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 586) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 587) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 588) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 589) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 590) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 591) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 592) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 593) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 594) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 595) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 596) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 597) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 598) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 599) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 600) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 601) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 602) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 603) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 604) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 605) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 606) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 607) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 608) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 609) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 610) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 611) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 612) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 613) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 614) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 615) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 616) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 617) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 618) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 619) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 620) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 621) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 622) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 623) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 624) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 625) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 626) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 627) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 628) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 629) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 630) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 631) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 632) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 633) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 634) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 635) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 636) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 637) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 638) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 639) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 640) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 641) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 642) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 643) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 644) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 645) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 646) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 647) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 648) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 649) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 650) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 651) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 652) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 653) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 654) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 655) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 656) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 657) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 658) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 659) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 660) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 661) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 662) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 663) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 664) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 665) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 666) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 667) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 668) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 669) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 670) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 671) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 672) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 673) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 674) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 675) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 676) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 677) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 678) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 679) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 680) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 681) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 682) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 683) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 684) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 685) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 686) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 687) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 688) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 689) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 690) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 691) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 692) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 693) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 694) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 695) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 696) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 697) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 698) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 699) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 700) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 701) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 702) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 703) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 704) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 705) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 706) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 707) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 708) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 709) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 710) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 711) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 712) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 713) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 714) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 715) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 716) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 717) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 718) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 719) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 720) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 721) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 722) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 723) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 724) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 725) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 726) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 727) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 728) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 729) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 730) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 731) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 732) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 733) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 734) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 735) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 736) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 737) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 738) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 739) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 740) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 741) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 742) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 743) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 744) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 745) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 746) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 747) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 748) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 749) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 750) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 751) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 752) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 753) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 754) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 755) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 756) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 757) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 758) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 759) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 760) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 761) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 762) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 763) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 764) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 765) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 766) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 767) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 768) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 769) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 770) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 771) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 772) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 773) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 774) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 775) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 776) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 777) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 778) (= #b11000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 779) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 780) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 781) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 782) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 783) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 784) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 785) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 786) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 787) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 788) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 789) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 790) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 791) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 792) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 793) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 794) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 795) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 796) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 797) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 798) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 799) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 800) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 801) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 802) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 803) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 804) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 805) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 806) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 807) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 808) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 809) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 810) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 811) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 812) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 813) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 814) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 815) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 816) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 817) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 818) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 819) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 820) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 821) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 822) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 823) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 824) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 825) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 826) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 827) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 828) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 829) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 830) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 831) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 832) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 833) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 834) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 835) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 836) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 837) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 838) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 839) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 840) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 841) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 842) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 843) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 844) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 845) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 846) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 847) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 848) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 849) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 850) (= #b11000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 851) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 852) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 853) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 854) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 855) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 856) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 857) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 858) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 859) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 860) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 861) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 862) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 863) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 864) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 865) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 866) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 867) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 868) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 869) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 870) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 871) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 872) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 873) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 874) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 875) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 876) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 877) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 878) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 879) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 880) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 881) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 882) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 883) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 884) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 885) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 886) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 887) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 888) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 889) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 890) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 891) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 892) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 893) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 894) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 895) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 896) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 897) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 898) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 899) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 900) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 901) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 902) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 903) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 904) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 905) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 906) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 907) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 908) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 909) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 910) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 911) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 912) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 913) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 914) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 915) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 916) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 917) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 918) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 919) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 920) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 921) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 922) (= #b01000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 923) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 924) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 925) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 926) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 927) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 928) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 929) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 930) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 931) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 932) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 933) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 934) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 935) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 936) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 937) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 938) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 939) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 940) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 941) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 942) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 943) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 944) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 945) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 946) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 947) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 948) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 949) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 950) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 951) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 952) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 953) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 954) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 955) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 956) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 957) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 958) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 959) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 960) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 961) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 962) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 963) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 964) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 965) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 966) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 967) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 968) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 969) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 970) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 971) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 972) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 973) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 974) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 975) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 976) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 977) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 978) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 979) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 980) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 981) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 982) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 983) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 984) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 985) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 986) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 987) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 988) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 989) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 990) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 991) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 992) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 993) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 994) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 995) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 996) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 997) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 998) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 999) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1000) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1001) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1002) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1003) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1004) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1005) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1006) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1007) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1008) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1009) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1010) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1011) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1012) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1013) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1014) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1015) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1016) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1017) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1018) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1019) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1020) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1021) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1022) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1023) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1024) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1025) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1026) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1027) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1028) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1029) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1030) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1031) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1032) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1033) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1034) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1035) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1036) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1037) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1038) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1039) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1040) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1041) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1042) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1043) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1044) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1045) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1046) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1047) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1048) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1049) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1050) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1051) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1052) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1053) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1054) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1055) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1056) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1057) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1058) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1059) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1060) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1061) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1062) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1063) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1064) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1065) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1066) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1067) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1068) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1069) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1070) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1071) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1072) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1073) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1074) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1075) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1076) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1077) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1078) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1079) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1080) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1081) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1082) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1083) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1084) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1085) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1086) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1087) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1088) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1089) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1090) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1091) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1092) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1093) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1094) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1095) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1096) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1097) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1098) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1099) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1100) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1101) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1102) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1103) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1104) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1105) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1106) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1107) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1108) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1109) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1110) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1111) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1112) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1113) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1114) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1115) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1116) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1117) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1118) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1119) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1120) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1121) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1122) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1123) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1124) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1125) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1126) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1127) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1128) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1129) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1130) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1131) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1132) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1133) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1134) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1135) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1136) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1137) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1138) (= #b10000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1139) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1140) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1141) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1142) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1143) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1144) (= #b01000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1145) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1146) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1147) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1148) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1149) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1150) (= #b01000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1151) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1152) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1153) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1154) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1155) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1156) (= #b10000 bv_3_2_a) (= #b01000 bv_3_2_b))
        (and (= leaf_3_2 1157) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1158) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1159) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1160) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1161) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1162) (= #b10000 bv_3_2_a) (= #b10000 bv_3_2_b))
        (and (= leaf_3_2 1163) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1164) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1165) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1166) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1167) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b))
        (and (= leaf_3_2 1168) (= #b00000 bv_3_2_a) (= #b11000 bv_3_2_b)))))
(assert (=> (= root_3 10)
    (and (= leaf_3_3 0) (= #b00000 bv_3_3_a) (= #b00000 bv_3_3_b))))
(assert (or (= leaf_1_0 1175)
    (= leaf_1_1 1175)
    (= leaf_1_2 1175)
    (= leaf_1_3 1175)
    (= leaf_2_0 1175)
    (= leaf_2_1 1175)
    (= leaf_2_2 1175)
    (= leaf_2_3 1175)
    (= leaf_3_0 1175)
    (= leaf_3_1 1175)
    (= leaf_3_2 1175)
    (= leaf_3_3 1175)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 1))
    (distinct root_2 1)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 1))
    (distinct root_3 1)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 1))
    (distinct root_3 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 2))
    (distinct root_2 1)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 2))
    (distinct root_3 1)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 2))
    (distinct root_3 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 3))
    (distinct root_2 1)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 3))
    (distinct root_3 1)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 3))
    (distinct root_3 1)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 1))
    (distinct root_2 2)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 1))
    (distinct root_3 2)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 1))
    (distinct root_3 2)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 3))
    (distinct root_2 2)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 3))
    (distinct root_3 2)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 3))
    (distinct root_3 2)))
(assert (=> (and (or leaf_2_0_is_line_1
             leaf_2_1_is_line_1
             leaf_2_2_is_line_1
             leaf_2_3_is_line_1)
         (= root_1 5))
    (distinct root_2 5)))
(assert (=> (and (or leaf_3_0_is_line_1
             leaf_3_1_is_line_1
             leaf_3_2_is_line_1
             leaf_3_3_is_line_1)
         (= root_1 5))
    (distinct root_3 5)))
(assert (=> (and (or leaf_3_0_is_line_2
             leaf_3_1_is_line_2
             leaf_3_2_is_line_2
             leaf_3_3_is_line_2)
         (= root_2 5))
    (distinct root_3 5)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 3) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 2) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 1) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 5) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 9) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_1_0 leaf_1_1)
                    (and (= leaf_1_0 0) (= leaf_1_1 0)))
                (or (distinct leaf_1_0 leaf_1_2)
                    (and (= leaf_1_0 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_0 leaf_1_3)
                    (and (= leaf_1_0 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_1 leaf_1_2)
                    (and (= leaf_1_1 0) (= leaf_1_2 0)))
                (or (distinct leaf_1_1 leaf_1_3)
                    (and (= leaf_1_1 0) (= leaf_1_3 0)))
                (or (distinct leaf_1_2 leaf_1_3)
                    (and (= leaf_1_2 0) (= leaf_1_3 0))))))
  (=> (= root_1 6) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_2_0 leaf_2_1)
                    (and (= leaf_2_0 0) (= leaf_2_1 0)))
                (or (distinct leaf_2_0 leaf_2_2)
                    (and (= leaf_2_0 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_0 leaf_2_3)
                    (and (= leaf_2_0 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_1 leaf_2_2)
                    (and (= leaf_2_1 0) (= leaf_2_2 0)))
                (or (distinct leaf_2_1 leaf_2_3)
                    (and (= leaf_2_1 0) (= leaf_2_3 0)))
                (or (distinct leaf_2_2 leaf_2_3)
                    (and (= leaf_2_2 0) (= leaf_2_3 0))))))
  (=> (= root_2 6) a!1)))
(assert (let ((a!1 (and (or (distinct leaf_3_0 leaf_3_1)
                    (and (= leaf_3_0 0) (= leaf_3_1 0)))
                (or (distinct leaf_3_0 leaf_3_2)
                    (and (= leaf_3_0 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_0 leaf_3_3)
                    (and (= leaf_3_0 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_1 leaf_3_2)
                    (and (= leaf_3_1 0) (= leaf_3_2 0)))
                (or (distinct leaf_3_1 leaf_3_3)
                    (and (= leaf_3_1 0) (= leaf_3_3 0)))
                (or (distinct leaf_3_2 leaf_3_3)
                    (and (= leaf_3_2 0) (= leaf_3_3 0))))))
  (=> (= root_3 6) a!1)))
(assert (=> (= root_1 1) (and (< leaf_1_0 leaf_1_1) (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 2)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a) bv_1))))
(assert (=> (= root_1 3)
    (and (< leaf_1_0 leaf_1_1)
         (< leaf_1_1 leaf_1_2)
         (< leaf_1_2 leaf_1_3)
         (= (bvor bv_1_0_a bv_1_1_a bv_1_2_a bv_1_3_a) bv_1))))
(assert (=> (= root_1 4)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (let ((a!1 (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
                (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
                (=> (= #b00000 bv_1_2_a)
                    (distinct #b00000 (bvand bv_1_0_a bv_1_1_a)))
                (= bv_1_0_a bv_1))))
  (=> (= root_1 5) a!1)))
(assert (=> (= root_1 6)
    (and (distinct #b00000 (bvand bv_1_0_a bv_1_1_a))
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 7) (= (bvor bv_1_0_a bv_1_1_a) bv_1)))
(assert (=> (= root_1 8)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_1_a bv_1_2_a) bv_1_2_a)
         (= bv_1_2_a bv_1))))
(assert (=> (= root_1 9)
    (and (distinct #b00000 (bvand bv_1_0_a bv_1_1_a)) (= bv_1_0_a bv_1))))
(assert (=> (= root_1 10)
    (and (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= (bvand bv_1_0_a bv_1_1_a bv_1_2_b) bv_1_2_b)
         (= (bvor bv_1_0_a bv_1_1_a) bv_1))))
(assert (=> (= root_1 11)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a) (= bv_1_0_a bv_1))))
(assert (=> (= root_1 12)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvand bv_1_0_a bv_1_2_a) bv_1_2_a)
         (= #b00000 (bvand bv_1_1_b bv_1_2_a))
         (= (bvor bv_1_1_b bv_1_2_a) bv_1))))
(assert (=> (= root_1 13)
    (and (= (bvand bv_1_0_a bv_1_1_a) bv_1_1_a)
         (= (bvor bv_1_0_a bv_1_1_b) bv_1))))
(assert (=> (= root_2 1) (and (< leaf_2_0 leaf_2_1) (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 2)
    (and (< leaf_2_0 leaf_2_1)
         (< leaf_2_1 leaf_2_2)
         (= (bvor bv_2_0_a bv_2_1_a bv_2_2_a) bv_2))))
(assert (=> (= root_2 3)
    (and (< leaf_2_0 leaf_2_1)
         (< leaf_2_1 leaf_2_2)
         (< leaf_2_2 leaf_2_3)
         (= (bvor bv_2_0_a bv_2_1_a bv_2_2_a bv_2_3_a) bv_2))))
(assert (=> (= root_2 4)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_1_a bv_2_2_b) bv_2_2_b)
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (let ((a!1 (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
                (= (bvand bv_2_1_a bv_2_2_a) bv_2_2_a)
                (=> (= #b00000 bv_2_2_a)
                    (distinct #b00000 (bvand bv_2_0_a bv_2_1_a)))
                (= bv_2_0_a bv_2))))
  (=> (= root_2 5) a!1)))
(assert (=> (= root_2 6)
    (and (distinct #b00000 (bvand bv_2_0_a bv_2_1_a))
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 7) (= (bvor bv_2_0_a bv_2_1_a) bv_2)))
(assert (=> (= root_2 8)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_1_a bv_2_2_a) bv_2_2_a)
         (= bv_2_2_a bv_2))))
(assert (=> (= root_2 9)
    (and (distinct #b00000 (bvand bv_2_0_a bv_2_1_a)) (= bv_2_0_a bv_2))))
(assert (=> (= root_2 10)
    (and (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= (bvand bv_2_0_a bv_2_1_a bv_2_2_b) bv_2_2_b)
         (= (bvor bv_2_0_a bv_2_1_a) bv_2))))
(assert (=> (= root_2 11)
    (and (= (bvand bv_2_0_a bv_2_1_a) bv_2_1_a) (= bv_2_0_a bv_2))))
(assert (=> (= root_2 12)
    (and (= (bvand bv_2_0_a bv_2_1_a) bv_2_1_a)
         (= (bvand bv_2_0_a bv_2_2_a) bv_2_2_a)
         (= #b00000 (bvand bv_2_1_b bv_2_2_a))
         (= (bvor bv_2_1_b bv_2_2_a) bv_2))))
(assert (=> (= root_2 13)
    (and (= (bvand bv_2_0_a bv_2_1_a) bv_2_1_a)
         (= (bvor bv_2_0_a bv_2_1_b) bv_2))))
(assert (=> (= root_3 1) (and (< leaf_3_0 leaf_3_1) (= (bvor bv_3_0_a bv_3_1_a) bv_3))))
(assert (=> (= root_3 2)
    (and (< leaf_3_0 leaf_3_1)
         (< leaf_3_1 leaf_3_2)
         (= (bvor bv_3_0_a bv_3_1_a bv_3_2_a) bv_3))))
(assert (=> (= root_3 3)
    (and (< leaf_3_0 leaf_3_1)
         (< leaf_3_1 leaf_3_2)
         (< leaf_3_2 leaf_3_3)
         (= (bvor bv_3_0_a bv_3_1_a bv_3_2_a bv_3_3_a) bv_3))))
(assert (=> (= root_3 4)
    (and (= (bvand bv_3_0_a bv_3_2_a) bv_3_2_a)
         (= (bvand bv_3_1_a bv_3_2_b) bv_3_2_b)
         (= (bvor bv_3_0_a bv_3_1_a) bv_3))))
(assert (let ((a!1 (and (= (bvand bv_3_0_a bv_3_2_a) bv_3_2_a)
                (= (bvand bv_3_1_a bv_3_2_a) bv_3_2_a)
                (=> (= #b00000 bv_3_2_a)
                    (distinct #b00000 (bvand bv_3_0_a bv_3_1_a)))
                (= bv_3_0_a bv_3))))
  (=> (= root_3 5) a!1)))
(assert (=> (= root_3 6)
    (and (distinct #b00000 (bvand bv_3_0_a bv_3_1_a))
         (= (bvor bv_3_0_a bv_3_1_a) bv_3))))
(assert (=> (= root_3 7) (= (bvor bv_3_0_a bv_3_1_a) bv_3)))
(assert (=> (= root_3 8)
    (and (= (bvand bv_3_0_a bv_3_2_a) bv_3_2_a)
         (= (bvand bv_3_1_a bv_3_2_a) bv_3_2_a)
         (= bv_3_2_a bv_3))))
(assert (=> (= root_3 9)
    (and (distinct #b00000 (bvand bv_3_0_a bv_3_1_a)) (= bv_3_0_a bv_3))))
(assert (=> (= root_3 10)
    (and (= (bvand bv_3_0_a bv_3_2_a) bv_3_2_a)
         (= (bvand bv_3_0_a bv_3_1_a bv_3_2_b) bv_3_2_b)
         (= (bvor bv_3_0_a bv_3_1_a) bv_3))))
(assert (=> (= root_3 11)
    (and (= (bvand bv_3_0_a bv_3_1_a) bv_3_1_a) (= bv_3_0_a bv_3))))
(assert (=> (= root_3 12)
    (and (= (bvand bv_3_0_a bv_3_1_a) bv_3_1_a)
         (= (bvand bv_3_0_a bv_3_2_a) bv_3_2_a)
         (= #b00000 (bvand bv_3_1_b bv_3_2_a))
         (= (bvor bv_3_1_b bv_3_2_a) bv_3))))
(assert (=> (= root_3 13)
    (and (= (bvand bv_3_0_a bv_3_1_a) bv_3_1_a)
         (= (bvor bv_3_0_a bv_3_1_b) bv_3))))


------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
expected_output <- read_csv("tests-examples/textbook/tables/34.out", col_types = cols("ename" = col_character(),"salary" = col_double()))

df66 <- df_employees %>% mutate(meansalary = mean(salary))
df67 <- anti_join(df66, df_certified, by=c('eid'), na_matches="never")
df68 <- full_join(df67, df67, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(salary < meansalary.other & meansalary < salary.other)
out <- df68 %>% select(ename = ename.other, salary = salary.other) %>% distinct() %>% arrange(ename)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT ename_other AS ename,
                salary_other AS salary
FROM
  (SELECT LHS.eid AS eid,
          LHS.ename AS ename,
          LHS.salary AS salary,
          LHS.meansalary AS meansalary,
          RHS.eid AS eid_other,
          RHS.ename AS ename_other,
          RHS.salary AS salary_other,
          RHS.meansalary AS meansalary_other
   FROM
     (SELECT *
      FROM
        (SELECT eid,
                ename,
                salary,
                AVG(salary) OVER () AS meansalary
         FROM df_employees) AS LHS
      WHERE NOT EXISTS
          (SELECT 1
           FROM df_certified AS RHS
           WHERE (LHS.eid = RHS.eid) )) AS LHS
   CROSS JOIN
     (SELECT *
      FROM
        (SELECT eid,
                ename,
                salary,
                AVG(salary) OVER () AS meansalary
         FROM df_employees) AS LHS
      WHERE NOT EXISTS
          (SELECT 1
           FROM df_certified AS RHS
           WHERE (LHS.eid = RHS.eid) )) AS RHS)
WHERE (salary < meansalary_other
       AND meansalary < salary_other)
ORDER BY ename
