[     2.279][MainProcess][INFO] Parsing specification...
[     2.285][MainProcess][INFO] File read
[     2.286][MainProcess][DEBUG] Reading input files...
[     2.295][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i044.csv: ['int64', 'int64']
[     2.301][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o044.csv: ['int64', 'int64', 'int64']
[     2.301][MainProcess][INFO] Parsing sketch...
[     2.301][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(['cumsumcount = cumsum(count)'], type=Unknown, var=[])])
[     2.369][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 21, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 4, 'mutate': 1}
[     2.369][MainProcess][DEBUG] {'natural_join': 0.0008665511265164644, 'natural_join3': 0.0008665511265164644, 'natural_join4': 0.0008665511265164644, 'inner_join': 0.018197573656845753, 'anti_join': 0.0034662045060658577, 'left_join': 0.0008665511265164644, 'union': 0.0008665511265164644, 'intersect': 0.0017331022530329288, 'semi_join': 0.0008665511265164644, 'cross_join': 0.9618717504332756, 'filter': 0.005199306759098787, 'summarise': 0.0034662045060658577, 'mutate': 0.0008665511265164644}
[     2.369][MainProcess][DEBUG] {'natural_join': 0.0008665511265164645, 'natural_join3': 0.0008665511265164645, 'natural_join4': 0.0008665511265164645, 'inner_join': 0.018197573656845756, 'anti_join': 0.003466204506065858, 'left_join': 0.0008665511265164645, 'union': 0.0008665511265164645, 'intersect': 0.001733102253032929, 'semi_join': 0.0008665511265164645, 'cross_join': 0.9618717504332757, 'filter': 0.005199306759098788, 'summarise': 0.003466204506065858, 'mutate': 0.0008665511265164645}
[     2.369][MainProcess][INFO] Building synthesizer...
[     2.371][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 11, 13], children=[Child([0], type=Table, var=[[1158], [1157]]),Child(['cumsumcount = cumsum(count)'], type=Unknown, var=[[1158], [1157]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.794][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 93 constraints
[     2.807][MainProcess][DEBUG] Enumeration time: 0.43704891204833984
[     2.845][MainProcess][DEBUG] Synthesis time: 0.038103342056274414
[     2.845][MainProcess][INFO] Solution found: [mutate(input0, 'cumsumcount = cumsum(count)')]
[     2.846][MainProcess][DEBUG] Solution found using process 0
[     2.847][MainProcess][INFO] Statistics:
[     2.847][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.847][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.847][MainProcess][INFO] 		Failed: 0 (approx)
[     2.847][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.847][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.847][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.847][MainProcess][INFO] 	Total time spent in enumerator init: 0.437049 (approx)
[     2.847][MainProcess][INFO] 	Total time spent in enumerator: 0.000648 (approx)
[     2.847][MainProcess][INFO] 		Enumerated 1542.590658 programs/s avg. (just enumeration time)
[     2.847][MainProcess][INFO] 		Enumerated 0.459569 programs/s avg. (overall)
[     2.847][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.035565 (approx)
[     2.847][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.848][MainProcess][INFO] Solution found: [mutate(input0, 'cumsumcount = cumsum(count)')]
[     2.848][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i044 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i044.csv", col_types = cols("id" = col_integer(),"count" = col_integer()))
df_i044 <- copy_to(con, df_i044)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o044.csv", col_types = cols("id" = col_integer(),"count" = col_integer(),"sumcount" = col_integer()))

df2 <- df_i044 %>% mutate(cumsumcount = cumsum(count))
out <- df2 %>% select(id, count, sumcount = cumsumcount) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       COUNT,
       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount
FROM df_i044
ORDER BY id
