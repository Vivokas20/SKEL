[     1.650][MainProcess][INFO] Parsing specification...
[     1.654][MainProcess][INFO] File read
[     1.655][MainProcess][DEBUG] Reading input files...
[     1.661][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i044.csv: ['int64', 'int64']
[     1.665][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o044.csv: ['int64', 'int64', 'int64']
[     1.665][MainProcess][INFO] Parsing sketch...
[     1.665][MainProcess][DEBUG] Sketch creation: Line(T1, root=['mutate'], var=[], children=[Child([0], type=Table, var=[]),Child(['cumsumcount = cumsum(count)'], type=SummariseCondition, var=[])])
[     1.707][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 21, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 4, 'mutate': 1}
[     1.707][MainProcess][DEBUG] {'natural_join': 0.0008665511265164644, 'natural_join3': 0.0008665511265164644, 'natural_join4': 0.0008665511265164644, 'inner_join': 0.018197573656845753, 'anti_join': 0.0034662045060658577, 'left_join': 0.0008665511265164644, 'union': 0.0008665511265164644, 'intersect': 0.0017331022530329288, 'semi_join': 0.0008665511265164644, 'cross_join': 0.9618717504332756, 'filter': 0.005199306759098787, 'summarise': 0.0034662045060658577, 'mutate': 0.0008665511265164644}
[     1.708][MainProcess][DEBUG] {'natural_join': 0.0008665511265164645, 'natural_join3': 0.0008665511265164645, 'natural_join4': 0.0008665511265164645, 'inner_join': 0.018197573656845756, 'anti_join': 0.003466204506065858, 'left_join': 0.0008665511265164645, 'union': 0.0008665511265164645, 'intersect': 0.001733102253032929, 'semi_join': 0.0008665511265164645, 'cross_join': 0.9618717504332757, 'filter': 0.005199306759098788, 'summarise': 0.003466204506065858, 'mutate': 0.0008665511265164645}
[     1.708][MainProcess][INFO] Building synthesizer...
[     1.709][MainProcess][DEBUG] [Line(T1, root=['mutate'], var=[13], children=[Child([0], type=Table, var=[1158]),Child(['cumsumcount = cumsum(count)'], type=SummariseCondition, var=[1157]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     1.732][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 41 constraints
[     1.733][MainProcess][DEBUG] Enumeration time: 0.025355100631713867
[     1.765][MainProcess][DEBUG] Synthesis time: 0.03229951858520508
[     1.766][MainProcess][INFO] Solution found: [mutate(input0, 'cumsumcount = cumsum(count)')]
[     1.766][MainProcess][DEBUG] Solution found using process 0
[     1.766][MainProcess][INFO] Statistics:
[     1.767][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     1.767][MainProcess][INFO] 		Rejected: 0 (approx)
[     1.767][MainProcess][INFO] 		Failed: 0 (approx)
[     1.767][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     1.767][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     1.767][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     1.767][MainProcess][INFO] 	Total time spent in enumerator init: 0.025355 (approx)
[     1.767][MainProcess][INFO] 	Total time spent in enumerator: 0.000491 (approx)
[     1.767][MainProcess][INFO] 		Enumerated 2037.058766 programs/s avg. (just enumeration time)
[     1.767][MainProcess][INFO] 		Enumerated 0.765316 programs/s avg. (overall)
[     1.767][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.030270 (approx)
[     1.767][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     1.767][MainProcess][INFO] Solution found: [mutate(input0, 'cumsumcount = cumsum(count)')]
[     1.767][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i044 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i044.csv", col_types = cols("id" = col_integer(),"count" = col_integer()))
df_i044 <- copy_to(con, df_i044)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o044.csv", col_types = cols("id" = col_integer(),"count" = col_integer(),"sumcount" = col_integer()))

df2 <- df_i044 %>% mutate(cumsumcount = cumsum(count))
out <- df2 %>% select(id, count, sumcount = cumsumcount) %>% arrange(id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id,
       COUNT,
       SUM(COUNT) OVER (ROWS UNBOUNDED PRECEDING) AS sumcount
FROM df_i044
ORDER BY id
