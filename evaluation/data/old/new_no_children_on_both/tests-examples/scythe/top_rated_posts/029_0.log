[     2.354][MainProcess][INFO] Parsing specification...
[     2.359][MainProcess][INFO] File read
[     2.360][MainProcess][DEBUG] Reading input files...
[     2.370][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i029.csv: ['string', 'string']
[     2.376][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o029.csv: ['string', 'string']
[     2.376][MainProcess][INFO] Parsing sketch...
[     2.376][MainProcess][DEBUG] Sketch creation: Line(T1, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     2.421][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 21, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 130, 'unite': 4, 'summarise': 16, 'mutate': 4}
[     2.421][MainProcess][DEBUG] {'natural_join': 0.0053475935828877, 'natural_join3': 0.0053475935828877, 'natural_join4': 0.0053475935828877, 'inner_join': 0.11229946524064172, 'anti_join': 0.0213903743315508, 'left_join': 0.0053475935828877, 'union': 0.0053475935828877, 'intersect': 0.0106951871657754, 'semi_join': 0.0053475935828877, 'cross_join': 0.6951871657754011, 'unite': 0.0213903743315508, 'summarise': 0.0855614973262032, 'mutate': 0.0213903743315508}
[     2.421][MainProcess][DEBUG] {'natural_join': 0.005347593582887701, 'natural_join3': 0.005347593582887701, 'natural_join4': 0.005347593582887701, 'inner_join': 0.11229946524064173, 'anti_join': 0.021390374331550804, 'left_join': 0.005347593582887701, 'union': 0.005347593582887701, 'intersect': 0.010695187165775402, 'semi_join': 0.005347593582887701, 'cross_join': 0.6951871657754012, 'unite': 0.021390374331550804, 'summarise': 0.08556149732620322, 'mutate': 0.021390374331550804}
[     2.421][MainProcess][INFO] Building synthesizer...
[     2.423][MainProcess][DEBUG] [Line(T1, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[175]),Child(['??'], type=SummariseCondition, var=[171, 172, 173, 174]),Child(['??'], type=Cols, var=[16, 17, 18, 19]),Child([None], type=None, var=[0])])]
[     2.467][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 49 constraints
[     2.470][MainProcess][DEBUG] Enumeration time: 0.049284934997558594
[     2.660][MainProcess][DEBUG] Synthesis time: 0.1891341209411621
[     2.660][MainProcess][INFO] Solution found: [summarise(input0, "concatPerson = string_agg(Person, ' ')", 'TicketID')]
[     2.661][MainProcess][DEBUG] Solution found using process 0
[     2.661][MainProcess][INFO] Statistics:
[     2.661][MainProcess][INFO] 	Attempted programs: 13 (approx)
[     2.661][MainProcess][INFO] 		Rejected: 12 (approx)
[     2.661][MainProcess][INFO] 		Failed: 0 (approx)
[     2.661][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.661][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.661][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.662][MainProcess][INFO] 	Total time spent in enumerator init: 0.049285 (approx)
[     2.662][MainProcess][INFO] 	Total time spent in enumerator: 0.014302 (approx)
[     2.662][MainProcess][INFO] 		Enumerated 908.993115 programs/s avg. (just enumeration time)
[     2.662][MainProcess][INFO] 		Enumerated 6.572547 programs/s avg. (overall)
[     2.662][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.168021 (approx)
[     2.662][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.006171 (approx)
[     2.662][MainProcess][INFO] Solution found: [summarise(input0, "concatPerson = string_agg(Person, ' ')", 'TicketID')]
[     2.662][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i029 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i029.csv", col_types = cols("TicketID" = col_character(),"Person" = col_character()))
df_i029 <- copy_to(con, df_i029)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o029.csv", col_types = cols("TicketID" = col_character(),"concatPerson" = col_character()))

string_agg <- function(v,s) {paste0("", Reduce(function(x, y) paste(x, y, sep = s), v))}

df14 <- df_i029 %>% group_by(TicketID) %>% summarise(concatPerson = string_agg(Person, ' ')) %>% ungroup()
out <- df14 %>% select(TicketID, concatPerson)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `TicketID`,
       `concatPerson`
FROM
  (SELECT `TicketID`,
          string_agg(`Person`, ' ') AS concatPerson
   FROM df_i029
   GROUP BY TicketID)
