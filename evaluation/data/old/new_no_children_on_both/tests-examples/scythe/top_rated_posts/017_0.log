[     2.363][MainProcess][INFO] Parsing specification...
[     2.368][MainProcess][INFO] File read
[     2.369][MainProcess][DEBUG] Reading input files...
[     2.378][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i017.csv: ['int64', 'string', 'string']
[     2.384][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o017.csv: ['int64', 'string', 'string']
[     2.384][MainProcess][INFO] Parsing sketch...
[     2.384][MainProcess][DEBUG] Sketch creation: Line(T1, root=['filter'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=FilterCondition, var=[])])
[     2.384][MainProcess][DEBUG] Sketch creation: Line(T2, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     2.384][MainProcess][DEBUG] Sketch creation: Line(T3, root=['inner_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=JoinCondition, var=[])])
[     2.448][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 22, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 1256, 'filter': 32, 'summarise': 14, 'mutate': 2}
[     2.448][MainProcess][DEBUG] {'natural_join': 0.0007451564828614009, 'natural_join3': 0.0007451564828614009, 'natural_join4': 0.0007451564828614009, 'inner_join': 0.01639344262295082, 'anti_join': 0.005216095380029807, 'left_join': 0.0007451564828614009, 'union': 0.0007451564828614009, 'intersect': 0.0022354694485842027, 'semi_join': 0.0007451564828614009, 'cross_join': 0.9359165424739195, 'filter': 0.02384500745156483, 'summarise': 0.010432190760059613, 'mutate': 0.0014903129657228018}
[     2.448][MainProcess][DEBUG] {'natural_join': 0.0007451564828614009, 'natural_join3': 0.0007451564828614009, 'natural_join4': 0.0007451564828614009, 'inner_join': 0.01639344262295082, 'anti_join': 0.005216095380029807, 'left_join': 0.0007451564828614009, 'union': 0.0007451564828614009, 'intersect': 0.0022354694485842027, 'semi_join': 0.0007451564828614009, 'cross_join': 0.9359165424739195, 'filter': 0.02384500745156483, 'summarise': 0.010432190760059613, 'mutate': 0.0014903129657228018}
[     2.448][MainProcess][INFO] Building synthesizer...
[     2.450][MainProcess][DEBUG] [Line(T1, root=['filter'], var=[11], children=[Child(['??'], type=Table, var=[1336]),Child(['??'], type=FilterCondition, var=[1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[1336]),Child(['??'], type=SummariseCondition, var=[1334, 1335]),Child(['??'], type=Cols, var=[17, 18, 19, 20, 21, 22, 23]),Child([None], type=None, var=[0])]), Line(T3, root=['inner_join'], var=[4], children=[Child(['??'], type=Table, var=[1336]),Child(['??'], type=Table, var=[1336]),Child(['??'], type=JoinCondition, var=[24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]),Child([None], type=None, var=[0])])]
[     2.748][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 169 constraints
[     2.759][MainProcess][DEBUG] Enumeration time: 0.31073713302612305
[     5.368][MainProcess][DEBUG] Synthesis time: 2.60899019241333
[     5.369][MainProcess][INFO] Solution found: [filter(input0, "str_detect(SKU, 'FOO-')"), summarise(line0, 'ID = min(ID)', 'PRODUCT'), inner_join(line1, input0, 'ID')]
[     5.374][MainProcess][DEBUG] Solution found using process 0
[     5.374][MainProcess][INFO] Statistics:
[     5.374][MainProcess][INFO] 	Attempted programs: 222 (approx)
[     5.374][MainProcess][INFO] 		Rejected: 221 (approx)
[     5.374][MainProcess][INFO] 		Failed: 0 (approx)
[     5.374][MainProcess][INFO] 		Empty outputs: 3 (1.4%) (approx)
[     5.374][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     5.374][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     5.374][MainProcess][INFO] 	Total time spent in enumerator init: 0.310737 (approx)
[     5.374][MainProcess][INFO] 	Total time spent in enumerator: 0.492718 (approx)
[     5.375][MainProcess][INFO] 		Enumerated 450.562220 programs/s avg. (just enumeration time)
[     5.375][MainProcess][INFO] 		Enumerated 47.408330 programs/s avg. (overall)
[     5.375][MainProcess][INFO] 	Total time spent in evaluation & testing: 1.912470 (approx)
[     5.375][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.201893 (approx)
[     5.375][MainProcess][INFO] Solution found: [filter(input0, "str_detect(SKU, 'FOO-')"), summarise(line0, 'ID = min(ID)', 'PRODUCT'), inner_join(line1, input0, 'ID')]
[     5.375][MainProcess][INFO] Solution size: 3
[     5.625][MainProcess][ERROR] Error while trying to convert R code to SQL.

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i017 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i017.csv", col_types = cols("ID" = col_integer(),"SKU" = col_character(),"PRODUCT" = col_character()))
df_i017 <- copy_to(con, df_i017)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o017.csv", col_types = cols("ID" = col_integer(),"SKU" = col_character(),"PRODUCT" = col_character()))

df104 <- df_i017 %>% filter(str_detect(SKU, 'FOO-'))
df105 <- df104 %>% group_by(PRODUCT) %>% summarise(ID = min(ID)) %>% ungroup()
df106 <- inner_join(df105, df_i017, by=c('ID'), suffix = c('', '.other'), na_matches='never')
out <- df106 %>% select(ID, SKU, PRODUCT)

Failed to generate SQL query
