[     2.410][MainProcess][INFO] Parsing specification...
[     2.416][MainProcess][INFO] File read
[     2.416][MainProcess][WARNING] "aggrs" field is deprecated. Please use "functions"
[     2.417][MainProcess][DEBUG] Reading input files...
[     2.427][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/10-1.txt: ['string', 'string']
[     2.434][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/10-2.txt: ['string', 'string']
[     2.439][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/10.out: ['string']
[     2.439][MainProcess][INFO] Parsing sketch...
[     2.440][MainProcess][DEBUG] Sketch creation: Line(T1, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     2.440][MainProcess][DEBUG] Sketch creation: Line(T2, root=['natural_join3'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[])])
[     2.440][MainProcess][DEBUG] Sketch creation: Line(T3, root=['filter'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=FilterCondition, var=[])])
[     2.482][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 120, 'anti_join': 28, 'left_join': 4, 'union': 4, 'intersect': 12, 'semi_join': 4, 'cross_join': 24, 'filter': 4, 'summarise': 14, 'mutate': 2}
[     2.483][MainProcess][DEBUG] {'natural_join': 0.01639344262295082, 'natural_join3': 0.03278688524590164, 'natural_join4': 0.06557377049180328, 'inner_join': 0.4918032786885246, 'anti_join': 0.11475409836065574, 'left_join': 0.01639344262295082, 'union': 0.01639344262295082, 'intersect': 0.04918032786885246, 'semi_join': 0.01639344262295082, 'cross_join': 0.09836065573770492, 'filter': 0.01639344262295082, 'summarise': 0.05737704918032787, 'mutate': 0.00819672131147541}
[     2.483][MainProcess][DEBUG] {'natural_join': 0.01639344262295082, 'natural_join3': 0.03278688524590164, 'natural_join4': 0.06557377049180328, 'inner_join': 0.4918032786885246, 'anti_join': 0.11475409836065574, 'left_join': 0.01639344262295082, 'union': 0.01639344262295082, 'intersect': 0.04918032786885246, 'semi_join': 0.01639344262295082, 'cross_join': 0.09836065573770492, 'filter': 0.01639344262295082, 'summarise': 0.05737704918032787, 'mutate': 0.00819672131147541}
[     2.483][MainProcess][INFO] Building synthesizer...
[     2.484][MainProcess][DEBUG] [Line(T1, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[]),Child([None], type=None, var=[0])]), Line(T2, root=['natural_join3'], var=[2], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child([None], type=None, var=[0])]), Line(T3, root=['filter'], var=[11], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=FilterCondition, var=[]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.645][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 155 constraints
[     2.656][MainProcess][DEBUG] Enumeration time: 0.17289042472839355
[     3.021][MainProcess][DEBUG] Synthesis time: 0.3654465675354004
[     3.022][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'S_key'), natural_join3(input0, input1, line0), filter(line1, 'n == max(n)')]
[     3.022][MainProcess][DEBUG] Solution found using process 0
[     3.023][MainProcess][INFO] Statistics:
[     3.023][MainProcess][INFO] 	Attempted programs: 20 (approx)
[     3.023][MainProcess][INFO] 		Rejected: 19 (approx)
[     3.023][MainProcess][INFO] 		Failed: 0 (approx)
[     3.023][MainProcess][INFO] 		Empty outputs: 10 (50.0%) (approx)
[     3.023][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     3.023][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     3.023][MainProcess][INFO] 	Total time spent in enumerator init: 0.172890 (approx)
[     3.023][MainProcess][INFO] 	Total time spent in enumerator: 0.041026 (approx)
[     3.023][MainProcess][INFO] 		Enumerated 487.491530 programs/s avg. (just enumeration time)
[     3.023][MainProcess][INFO] 		Enumerated 8.378381 programs/s avg. (overall)
[     3.023][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.304981 (approx)
[     3.023][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.018400 (approx)
[     3.024][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'S_key'), natural_join3(input0, input1, line0), filter(line1, 'n == max(n)')]
[     3.024][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_10_1 <- read_csv("tests-examples/textbook/tables/10-1.txt", col_types = cols("S_key" = col_character(),"C_name" = col_character()))
df_10_1 <- copy_to(con, df_10_1)
df_10_2 <- read_csv("tests-examples/textbook/tables/10-2.txt", col_types = cols("S_key" = col_character(),"S_name" = col_character()))
df_10_2 <- copy_to(con, df_10_2)
expected_output <- read_csv("tests-examples/textbook/tables/10.out", col_types = cols("S_name" = col_character()))

df37 <- df_10_1 %>% group_by(S_key) %>% summarise(n = n()) %>% ungroup()
df38 <- inner_join(df_10_1, df_10_2, na_matches="never") %>% inner_join(df37, na_matches="never")
df39 <- df38 %>% filter(n == max(n))
out <- df39 %>% select(S_name) %>% distinct()


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT S_name
FROM
  (SELECT S_key,
          C_name,
          S_name,
          n
   FROM
     (SELECT S_key,
             C_name,
             S_name,
             n,
             MAX(n) OVER () AS q01
      FROM
        (SELECT LHS.S_key AS S_key,
                C_name,
                S_name,
                n
         FROM
           (SELECT LHS.S_key AS S_key,
                   C_name,
                   S_name
            FROM df_10_1 AS LHS
            INNER JOIN df_10_2 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
         INNER JOIN
           (SELECT S_key,
                   COUNT(*) AS n
            FROM df_10_1
            GROUP BY S_key) AS RHS ON (LHS.S_key = RHS.S_key)))
   WHERE (n = q01))
