[     2.364][MainProcess][INFO] Parsing specification...
[     2.369][MainProcess][INFO] File read
[     2.371][MainProcess][DEBUG] Reading input files...
[     2.380][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i014.csv: ['int64', 'string']
[     2.386][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o014.csv: ['int64', 'string']
[     2.386][MainProcess][INFO] Parsing sketch...
[     2.386][MainProcess][DEBUG] Sketch creation: Line(T1, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     2.429][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 7, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 130, 'unite': 4, 'summarise': 16, 'mutate': 4}
[     2.429][MainProcess][DEBUG] {'natural_join': 0.005780346820809248, 'natural_join3': 0.005780346820809248, 'natural_join4': 0.005780346820809248, 'inner_join': 0.04046242774566474, 'anti_join': 0.023121387283236993, 'left_join': 0.005780346820809248, 'union': 0.005780346820809248, 'intersect': 0.011560693641618497, 'semi_join': 0.005780346820809248, 'cross_join': 0.7514450867052023, 'unite': 0.023121387283236993, 'summarise': 0.09248554913294797, 'mutate': 0.023121387283236993}
[     2.429][MainProcess][DEBUG] {'natural_join': 0.005780346820809249, 'natural_join3': 0.005780346820809249, 'natural_join4': 0.005780346820809249, 'inner_join': 0.04046242774566475, 'anti_join': 0.023121387283236997, 'left_join': 0.005780346820809249, 'union': 0.005780346820809249, 'intersect': 0.011560693641618498, 'semi_join': 0.005780346820809249, 'cross_join': 0.7514450867052024, 'unite': 0.023121387283236997, 'summarise': 0.09248554913294799, 'mutate': 0.023121387283236997}
[     2.429][MainProcess][INFO] Building synthesizer...
[     2.431][MainProcess][DEBUG] [Line(T1, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[]),Child([None], type=None, var=[0])])]
[     2.521][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 44 constraints
[     2.530][MainProcess][DEBUG] Enumeration time: 0.10024619102478027
[     2.607][MainProcess][DEBUG] Synthesis time: 0.0775747299194336
[     2.608][MainProcess][INFO] Solution found: [summarise(input0, "concatstring = string_agg(string, ', ')", 'id')]
[     2.608][MainProcess][DEBUG] Solution found using process 0
[     2.609][MainProcess][INFO] Statistics:
[     2.609][MainProcess][INFO] 	Attempted programs: 3 (approx)
[     2.609][MainProcess][INFO] 		Rejected: 2 (approx)
[     2.609][MainProcess][INFO] 		Failed: 0 (approx)
[     2.609][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.609][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.609][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.609][MainProcess][INFO] 	Total time spent in enumerator init: 0.100246 (approx)
[     2.609][MainProcess][INFO] 	Total time spent in enumerator: 0.003603 (approx)
[     2.609][MainProcess][INFO] 		Enumerated 832.643727 programs/s avg. (just enumeration time)
[     2.609][MainProcess][INFO] 		Enumerated 1.514163 programs/s avg. (overall)
[     2.610][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.071188 (approx)
[     2.610][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.002140 (approx)
[     2.610][MainProcess][INFO] Solution found: [summarise(input0, "concatstring = string_agg(string, ', ')", 'id')]
[     2.610][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i014 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i014.csv", col_types = cols("id" = col_integer(),"string" = col_character()))
df_i014 <- copy_to(con, df_i014)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o014.csv", col_types = cols("id" = col_integer(),"concatstring" = col_character()))

string_agg <- function(v,s) {paste0("", Reduce(function(x, y) paste(x, y, sep = s), v))}

df4 <- df_i014 %>% group_by(id) %>% summarise(concatstring = string_agg(string, ', ')) %>% ungroup()
out <- df4 %>% select(id, concatstring)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `id`,
       `concatstring`
FROM
  (SELECT `id`,
          string_agg(`string`, ', ') AS concatstring
   FROM df_i014
   GROUP BY id)
