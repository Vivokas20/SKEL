[     1.575][MainProcess][INFO] Parsing specification...
[     1.583][MainProcess][INFO] File read
[     1.585][MainProcess][DEBUG] Reading input files...
[     1.595][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i043.csv: ['string', 'string']
[     1.600][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o043.csv: ['string', 'string']
[     1.632][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 7, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 6, 'filter': 6, 'summarise': 4, 'mutate': 1}
[     1.632][MainProcess][DEBUG] {'natural_join': 0.027777777777777776, 'natural_join3': 0.027777777777777776, 'natural_join4': 0.027777777777777776, 'inner_join': 0.19444444444444445, 'anti_join': 0.1111111111111111, 'left_join': 0.027777777777777776, 'union': 0.027777777777777776, 'intersect': 0.05555555555555555, 'semi_join': 0.027777777777777776, 'cross_join': 0.16666666666666666, 'filter': 0.16666666666666666, 'summarise': 0.1111111111111111, 'mutate': 0.027777777777777776}
[     1.632][MainProcess][DEBUG] {'natural_join': 0.02777777777777778, 'natural_join3': 0.02777777777777778, 'natural_join4': 0.02777777777777778, 'inner_join': 0.19444444444444448, 'anti_join': 0.11111111111111112, 'left_join': 0.02777777777777778, 'union': 0.02777777777777778, 'intersect': 0.05555555555555556, 'semi_join': 0.02777777777777778, 'cross_join': 0.16666666666666669, 'filter': 0.16666666666666669, 'summarise': 0.11111111111111112, 'mutate': 0.02777777777777778}
[     1.633][MainProcess][INFO] Building synthesizer...
[     1.755][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 217 constraints
[     1.764][MainProcess][DEBUG] Enumeration time: 0.13174104690551758
[     2.303][MainProcess][DEBUG] Synthesis time: 0.5385241508483887
[     2.303][MainProcess][INFO] Increasing the number of lines of code to 3.
[     2.466][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 372 constraints
[     2.480][MainProcess][DEBUG] Enumeration time: 0.17632555961608887
[     6.439][MainProcess][DEBUG] Synthesis time: 3.9588935375213623
[     6.439][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'EmailAddress'), filter(line0, 'n <= 1'), anti_join(input0, line1, '')]
[     6.441][MainProcess][DEBUG] Solution found using process 0
[     6.441][MainProcess][INFO] Statistics:
[     6.441][MainProcess][INFO] 	Attempted programs: 186 (approx)
[     6.441][MainProcess][INFO] 		Rejected: 185 (approx)
[     6.441][MainProcess][INFO] 		Failed: 0 (approx)
[     6.441][MainProcess][INFO] 		Empty outputs: 92 (49.5%) (approx)
[     6.441][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     6.441][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     6.441][MainProcess][INFO] 	Total time spent in enumerator init: 0.308067 (approx)
[     6.441][MainProcess][INFO] 	Total time spent in enumerator: 0.362446 (approx)
[     6.441][MainProcess][INFO] 		Enumerated 513.180133 programs/s avg. (just enumeration time)
[     6.441][MainProcess][INFO] 		Enumerated 31.162438 programs/s avg. (overall)
[     6.442][MainProcess][INFO] 	Total time spent in evaluation & testing: 4.028318 (approx)
[     6.442][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.105241 (approx)
[     6.442][MainProcess][INFO] Solution found: [summarise(input0, 'n = n()', 'EmailAddress'), filter(line0, 'n <= 1'), anti_join(input0, line1, '')]
[     6.442][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i043 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i043.csv", col_types = cols("CustomerName" = col_character(),"EmailAddress" = col_character()))
df_i043 <- copy_to(con, df_i043)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o043.csv", col_types = cols("CustomerName" = col_character(),"EmailAddress" = col_character()))

df192 <- df_i043 %>% group_by(EmailAddress) %>% summarise(n = n()) %>% ungroup()
df193 <- df192 %>% filter(n <= 1)
df194 <- anti_join(df_i043, df193, by=c(), na_matches="never")
out <- df194 %>% select(CustomerName, EmailAddress) %>% arrange(CustomerName)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT CustomerName,
       EmailAddress
FROM
  (SELECT *
   FROM df_i043 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT EmailAddress,
                     COUNT(*) AS n
              FROM df_i043
              GROUP BY EmailAddress)
           WHERE (n <= 1.0)) AS RHS
        WHERE (LHS.EmailAddress = RHS.EmailAddress) ))
ORDER BY CustomerName
