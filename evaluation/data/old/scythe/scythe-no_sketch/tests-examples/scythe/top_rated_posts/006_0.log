[     1.576][MainProcess][INFO] Parsing specification...
[     1.580][MainProcess][INFO] File read
[     1.581][MainProcess][DEBUG] Reading input files...
[     1.588][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/i006.csv: ['int64', 'string', 'string']
[     1.592][MainProcess][INFO] Inferred data types for table tests-examples/scythe/top_rated_posts/tables/o006.csv: ['int64', 'string', 'string']
[     1.633][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 22, 'anti_join': 7, 'left_join': 1, 'union': 1, 'intersect': 3, 'semi_join': 1, 'cross_join': 1110, 'filter': 6, 'summarise': 14, 'mutate': 2}
[     1.633][MainProcess][DEBUG] {'natural_join': 0.0008547008547008547, 'natural_join3': 0.0008547008547008547, 'natural_join4': 0.0008547008547008547, 'inner_join': 0.018803418803418803, 'anti_join': 0.005982905982905983, 'left_join': 0.0008547008547008547, 'union': 0.0008547008547008547, 'intersect': 0.002564102564102564, 'semi_join': 0.0008547008547008547, 'cross_join': 0.9487179487179487, 'filter': 0.005128205128205128, 'summarise': 0.011965811965811967, 'mutate': 0.0017094017094017094}
[     1.633][MainProcess][DEBUG] {'natural_join': 0.0008547008547008548, 'natural_join3': 0.0008547008547008548, 'natural_join4': 0.0008547008547008548, 'inner_join': 0.018803418803418806, 'anti_join': 0.005982905982905984, 'left_join': 0.0008547008547008548, 'union': 0.0008547008547008548, 'intersect': 0.0025641025641025645, 'semi_join': 0.0008547008547008548, 'cross_join': 0.9487179487179488, 'filter': 0.005128205128205129, 'summarise': 0.011965811965811968, 'mutate': 0.0017094017094017096}
[     1.634][MainProcess][INFO] Building synthesizer...
[     2.188][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 93 constraints
[     2.256][MainProcess][DEBUG] Enumeration time: 0.6228396892547607
[     2.873][MainProcess][DEBUG] Synthesis time: 0.6168200969696045
[     2.874][MainProcess][INFO] Increasing the number of lines of code to 2.
[     4.012][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 216 constraints
[     4.152][MainProcess][DEBUG] Enumeration time: 1.277836799621582
[    21.700][MainProcess][DEBUG] Synthesis time: 17.54592776298523
[    21.700][MainProcess][INFO] Solution found: [summarise(input0, 'Id = max(Id)', 'Name'), semi_join(input0, line0)]
[    21.706][MainProcess][DEBUG] Solution found using process 0
[    21.706][MainProcess][INFO] Statistics:
[    21.706][MainProcess][INFO] 	Attempted programs: 209 (approx)
[    21.706][MainProcess][INFO] 		Rejected: 208 (approx)
[    21.706][MainProcess][INFO] 		Failed: 0 (approx)
[    21.706][MainProcess][INFO] 		Empty outputs: 35 (16.7%) (approx)
[    21.706][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    21.706][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    21.706][MainProcess][INFO] 	Total time spent in enumerator init: 1.900676 (approx)
[    21.706][MainProcess][INFO] 	Total time spent in enumerator: 0.798076 (approx)
[    21.706][MainProcess][INFO] 		Enumerated 261.879771 programs/s avg. (just enumeration time)
[    21.706][MainProcess][INFO] 		Enumerated 9.840352 programs/s avg. (overall)
[    21.706][MainProcess][INFO] 	Total time spent in evaluation & testing: 17.266968 (approx)
[    21.706][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.096099 (approx)
[    21.706][MainProcess][INFO] Solution found: [summarise(input0, 'Id = max(Id)', 'Name'), semi_join(input0, line0)]
[    21.706][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_i006 <- read_csv("tests-examples/scythe/top_rated_posts/tables/i006.csv", col_types = cols("Id" = col_integer(),"Name" = col_character(),"Other_Columns" = col_character()))
df_i006 <- copy_to(con, df_i006)
expected_output <- read_csv("tests-examples/scythe/top_rated_posts/tables/o006.csv", col_types = cols("Id" = col_integer(),"Name" = col_character(),"Other_Columns" = col_character()))

df224 <- df_i006 %>% group_by(Name) %>% summarise(Id = max(Id)) %>% ungroup()
df225 <- semi_join(df_i006, df224, na_matches="never")
out <- df225 %>% select(Id, Name, Other_Columns) %>% arrange(Id)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Id,
       Name,
       Other_Columns
FROM
  (SELECT *
   FROM df_i006 AS LHS
   WHERE EXISTS
       (SELECT 1
        FROM
          (SELECT Name,
                  MAX(Id) AS Id
           FROM df_i006
           GROUP BY Name) AS RHS
        WHERE (LHS.Id = RHS.Id
               AND LHS.Name = RHS.Name) ))
ORDER BY Id
