[     3.683][MainProcess][INFO] Parsing specification...
[     3.688][MainProcess][INFO] File read
[     3.689][MainProcess][DEBUG] Reading input files...
[     3.698][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     3.701][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     3.705][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     3.709][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/35.out: ['string']
[     3.710][MainProcess][INFO] Parsing sketch...
[     3.710][MainProcess][DEBUG] Sketch creation: Line(T1, root=['natural_join3'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[])])
[     3.710][MainProcess][DEBUG] Sketch creation: Line(T2, root=['filter'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=FilterCondition, var=[])])
[     3.710][MainProcess][DEBUG] Sketch creation: Line(T3, root=['anti_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Cols, var=[])])
[     3.750][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 711, 'anti_join': 198, 'left_join': 9, 'union': 9, 'intersect': 54, 'semi_join': 9, 'cross_join': 54, 'filter': 18}
[     3.750][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     3.750][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     3.751][MainProcess][INFO] Building synthesizer...
[     3.752][MainProcess][DEBUG] [Line(T1, root=['natural_join3'], var=[2], children=[Child(['??'], type=Table, var=[131, 132, 133]),Child(['??'], type=Table, var=[131, 132, 133]),Child(['??'], type=Table, var=[131, 132, 133]),Child([None], type=None, var=[0])]), Line(T2, root=['filter'], var=[11], children=[Child(['??'], type=Table, var=[131, 132, 133]),Child(['??'], type=FilterCondition, var=[125, 126, 127, 128, 129, 130]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T3, root=['anti_join'], var=[5], children=[Child(['??'], type=Table, var=[131, 132, 133]),Child(['??'], type=Table, var=[131, 132, 133]),Child(['??'], type=Cols, var=[18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]),Child([None], type=None, var=[0])])]
[     3.853][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 127 constraints
[     3.858][MainProcess][DEBUG] Enumeration time: 0.10718774795532227
[    80.327][MainProcess][DEBUG] Synthesis time: 76.46922993659973
[    80.327][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, 'crusingrange < 1000'), anti_join(line0, line1, 'salary')]
[    80.339][MainProcess][DEBUG] Solution found using process 0
[    80.340][MainProcess][INFO] Statistics:
[    80.340][MainProcess][INFO] 	Attempted programs: 7086 (approx)
[    80.340][MainProcess][INFO] 		Rejected: 778 (approx)
[    80.340][MainProcess][INFO] 		Failed: 6307 (approx)
[    80.340][MainProcess][INFO] 		Empty outputs: 431 (6.1%) (approx)
[    80.340][MainProcess][INFO] 		Redundant lines: 0 (approx)
[    80.340][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[    80.340][MainProcess][INFO] 	Total time spent in enumerator init: 0.107188 (approx)
[    80.340][MainProcess][INFO] 	Total time spent in enumerator: 42.948771 (approx)
[    80.340][MainProcess][INFO] 		Enumerated 164.987258 programs/s avg. (just enumeration time)
[    80.340][MainProcess][INFO] 		Enumerated 89.377716 programs/s avg. (overall)
[    80.340][MainProcess][INFO] 	Total time spent in evaluation & testing: 2.308842 (approx)
[    80.340][MainProcess][INFO] 	Total time spent blocking cubes/programs: 3.965018 (approx)
[    80.340][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, 'crusingrange < 1000'), anti_join(line0, line1, 'salary')]
[    80.340][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
expected_output <- read_csv("tests-examples/textbook/tables/35.out", col_types = cols("ename" = col_character()))

df6718 <- inner_join(df_aircraft, df_certified, na_matches="never") %>% inner_join(df_employees, na_matches="never")
df6719 <- df6718 %>% filter(crusingrange < 1000)
df6720 <- anti_join(df6718, df6719, by=c('salary'), na_matches="never")
out <- df6720 %>% select(ename) %>% distinct() %>% arrange(ename)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT ename
FROM
  (SELECT *
   FROM
     (SELECT aid,
             aname,
             crusingrange,
             LHS.eid AS eid,
             ename,
             salary
      FROM
        (SELECT LHS.aid AS aid,
                aname,
                crusingrange,
                eid
         FROM df_aircraft AS LHS
         INNER JOIN df_certified AS RHS ON (LHS.aid = RHS.aid)) AS LHS
      INNER JOIN df_employees AS RHS ON (LHS.eid = RHS.eid)) AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM
          (SELECT *
           FROM
             (SELECT aid,
                     aname,
                     crusingrange,
                     LHS.eid AS eid,
                     ename,
                     salary
              FROM
                (SELECT LHS.aid AS aid,
                        aname,
                        crusingrange,
                        eid
                 FROM df_aircraft AS LHS
                 INNER JOIN df_certified AS RHS ON (LHS.aid = RHS.aid)) AS LHS
              INNER JOIN df_employees AS RHS ON (LHS.eid = RHS.eid))
           WHERE (crusingrange < 1000.0)) AS RHS
        WHERE (LHS.salary = RHS.salary) ))
ORDER BY ename
