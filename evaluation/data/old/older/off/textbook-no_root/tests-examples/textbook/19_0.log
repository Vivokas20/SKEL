[     1.671][MainProcess][INFO] Parsing specification...
[     1.675][MainProcess][INFO] File read
[     1.676][MainProcess][DEBUG] Reading input files...
[     1.683][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-1.txt: ['string', 'string']
[     1.689][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-2.txt: ['string', 'string']
[     1.693][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19-3.txt: ['string', 'string']
[     1.698][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/19.out: ['string']
[     1.698][MainProcess][INFO] Parsing sketch...
[     1.698][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[])])
[     1.698][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Line, var=[]),Child(["color != 'red'"], type=Unknown, var=[])])
[     1.698][MainProcess][DEBUG] Sketch creation: Line(T3, root=['??'], var=[], children=[Child([2], type=Table, var=[]),Child([1], type=Line, var=[]),Child(["''"], type=Unknown, var=[])])
[     1.698][MainProcess][DEBUG] Sketch creation: Line(T4, root=['??'], var=[], children=[Child([2], type=Line, var=[]),Child([0], type=Table, var=[])])
[     1.734][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 738, 'anti_join': 99, 'left_join': 9, 'union': 9, 'intersect': 36, 'semi_join': 9, 'cross_join': 18, 'filter': 6}
[     1.734][MainProcess][DEBUG] {'natural_join': 0.008645533141210375, 'natural_join3': 0.025936599423631124, 'natural_join4': 0.07780979827089338, 'inner_join': 0.7089337175792507, 'anti_join': 0.09510086455331412, 'left_join': 0.008645533141210375, 'union': 0.008645533141210375, 'intersect': 0.0345821325648415, 'semi_join': 0.008645533141210375, 'cross_join': 0.01729106628242075, 'filter': 0.005763688760806916}
[     1.734][MainProcess][DEBUG] {'natural_join': 0.008645533141210374, 'natural_join3': 0.025936599423631117, 'natural_join4': 0.07780979827089336, 'inner_join': 0.7089337175792506, 'anti_join': 0.0951008645533141, 'left_join': 0.008645533141210374, 'union': 0.008645533141210374, 'intersect': 0.034582132564841495, 'semi_join': 0.008645533141210374, 'cross_join': 0.017291066282420747, 'filter': 0.005763688760806915}
[     1.734][MainProcess][INFO] Building synthesizer...
[     1.735][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([0], type=Table, var=[[113], [114]]),Child([1], type=Table, var=[[113], [114]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([0], type=Line, var=[[117], [112]]),Child(["color != 'red'"], type=Unknown, var=[[117], [112]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T3, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([2], type=Table, var=[[115], [118], [16]]),Child([1], type=Line, var=[[115], [118], [16]]),Child(["''"], type=Unknown, var=[[115], [118], [16]]),Child([None], type=None, var=[0])]), Line(T4, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([2], type=Line, var=[[119], [113]]),Child([0], type=Table, var=[[119], [113]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.037][MainProcess][DEBUG] Enumerator for loc 4 constructed using 84 variables and 500 constraints
[     2.052][MainProcess][DEBUG] Enumeration time: 0.3183004856109619
[     2.115][MainProcess][DEBUG] Synthesis time: 0.06252670288085938
[     2.115][MainProcess][INFO] Solution found: [left_join(input0, input1), filter(line0, "color != 'red'"), anti_join(input2, line1, ''), left_join(line2, input0)]
[     2.116][MainProcess][DEBUG] Solution found using process 0
[     2.116][MainProcess][INFO] Statistics:
[     2.116][MainProcess][INFO] 	Attempted programs: 2 (approx)
[     2.116][MainProcess][INFO] 		Rejected: 1 (approx)
[     2.116][MainProcess][INFO] 		Failed: 0 (approx)
[     2.116][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.116][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.116][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.116][MainProcess][INFO] 	Total time spent in enumerator init: 0.318300 (approx)
[     2.116][MainProcess][INFO] 	Total time spent in enumerator: 0.003802 (approx)
[     2.116][MainProcess][INFO] 		Enumerated 526.063464 programs/s avg. (just enumeration time)
[     2.117][MainProcess][INFO] 		Enumerated 1.274348 programs/s avg. (overall)
[     2.117][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.054361 (approx)
[     2.117][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.003428 (approx)
[     2.117][MainProcess][INFO] Solution found: [left_join(input0, input1), filter(line0, "color != 'red'"), anti_join(input2, line1, ''), left_join(line2, input0)]
[     2.117][MainProcess][INFO] Solution size: 4

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_19_1 <- read_csv("tests-examples/textbook/tables/19-1.txt", col_types = cols("S_key" = col_character(),"P_id" = col_character()))
df_19_1 <- copy_to(con, df_19_1)
df_19_2 <- read_csv("tests-examples/textbook/tables/19-2.txt", col_types = cols("P_id" = col_character(),"color" = col_character()))
df_19_2 <- copy_to(con, df_19_2)
df_19_3 <- read_csv("tests-examples/textbook/tables/19-3.txt", col_types = cols("S_key" = col_character(),"S_name" = col_character()))
df_19_3 <- copy_to(con, df_19_3)
expected_output <- read_csv("tests-examples/textbook/tables/19.out", col_types = cols("S_name" = col_character()))

df9 <- left_join(df_19_1, df_19_2, na_matches="never")
df10 <- df9 %>% filter(color != 'red')
df11 <- anti_join(df_19_3, df10, by=c(), na_matches="never")
df12 <- left_join(df11, df_19_1, na_matches="never")
out <- df12 %>% select(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `S_name`
FROM
  (SELECT `LHS`.`S_key` AS `S_key`,
          `S_name`,
          `P_id`
   FROM
     (SELECT *
      FROM `df_19_3` AS `LHS`
      WHERE NOT EXISTS
          (SELECT 1
           FROM
             (SELECT *
              FROM
                (SELECT `S_key`,
                        `LHS`.`P_id` AS `P_id`,
                        `color`
                 FROM `df_19_1` AS `LHS`
                 LEFT JOIN `df_19_2` AS `RHS` ON (`LHS`.`P_id` = `RHS`.`P_id`))
              WHERE (`color` != 'red')) AS RHS
           WHERE (LHS.S_key = RHS.S_key) )) AS LHS
   LEFT JOIN df_19_1 AS RHS ON (LHS.S_key = RHS.S_key))
