[     1.498][MainProcess][INFO] Parsing specification...
[     1.502][MainProcess][INFO] File read
[     1.503][MainProcess][DEBUG] Reading input files...
[     1.512][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11-1.txt: ['string', 'string']
[     1.546][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11-2.txt: ['string', 'string']
[     1.557][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/11.out: ['string']
[     1.557][MainProcess][INFO] Parsing sketch...
[     1.558][MainProcess][DEBUG] Sketch creation: Line(T1, root=['anti_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child(['??'], type=Cols, var=[])])
[     1.590][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 96, 'anti_join': 28, 'left_join': 4, 'union': 4, 'intersect': 12, 'semi_join': 4, 'cross_join': 0}
[     1.590][MainProcess][DEBUG] {'natural_join': 0.022727272727272728, 'natural_join3': 0.045454545454545456, 'natural_join4': 0.09090909090909091, 'inner_join': 0.5454545454545454, 'anti_join': 0.1590909090909091, 'left_join': 0.022727272727272728, 'union': 0.022727272727272728, 'intersect': 0.06818181818181818, 'semi_join': 0.022727272727272728, 'cross_join': 0.0}
[     1.590][MainProcess][DEBUG] {'natural_join': 0.02272727272727273, 'natural_join3': 0.04545454545454546, 'natural_join4': 0.09090909090909093, 'inner_join': 0.5454545454545455, 'anti_join': 0.15909090909090912, 'left_join': 0.02272727272727273, 'union': 0.02272727272727273, 'intersect': 0.06818181818181819, 'semi_join': 0.02272727272727273, 'cross_join': 0.0}
[     1.590][MainProcess][INFO] Building synthesizer...
[     1.591][MainProcess][DEBUG] {1: Line(T1, root=['anti_join'], var=[5], children=[Child(['??'], type=Table, var=[45, 46]),Child(['??'], type=Table, var=[45, 46]),Child(['??'], type=Cols, var=[14, 15, 16, 17, 18, 19, 20]),Child([None], type=None, var=[0])])}
[     1.615][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 35 constraints
[     1.616][MainProcess][DEBUG] Enumeration time: 0.02590012550354004
[     1.661][MainProcess][DEBUG] Synthesis time: 0.045083045959472656
[     1.662][MainProcess][INFO] Solution found: [anti_join(input0, input1, '')]
[     1.662][MainProcess][DEBUG] Solution found using process 0
[     1.662][MainProcess][INFO] Statistics:
[     1.662][MainProcess][INFO] 	Attempted programs: 5 (approx)
[     1.663][MainProcess][INFO] 		Rejected: 0 (approx)
[     1.663][MainProcess][INFO] 		Failed: 4 (approx)
[     1.663][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     1.663][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     1.663][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     1.663][MainProcess][INFO] 	Total time spent in enumerator init: 0.025900 (approx)
[     1.663][MainProcess][INFO] 	Total time spent in enumerator: 0.003457 (approx)
[     1.663][MainProcess][INFO] 		Enumerated 1446.411477 programs/s avg. (just enumeration time)
[     1.663][MainProcess][INFO] 		Enumerated 4.363232 programs/s avg. (overall)
[     1.663][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.012043 (approx)
[     1.663][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.001663 (approx)
[     1.663][MainProcess][INFO] Solution found: [anti_join(input0, input1, '')]
[     1.663][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_11_1 <- read_csv("tests-examples/textbook/tables/11-1.txt", col_types = cols("S_key" = col_character(),"S_name" = col_character()))
df_11_1 <- copy_to(con, df_11_1)
df_11_2 <- read_csv("tests-examples/textbook/tables/11-2.txt", col_types = cols("S_key" = col_character(),"C_name" = col_character()))
df_11_2 <- copy_to(con, df_11_2)
expected_output <- read_csv("tests-examples/textbook/tables/11.out", col_types = cols("S_name" = col_character()))

df6 <- anti_join(df_11_1, df_11_2, by=c(), na_matches="never")
out <- df6 %>% select(S_name)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT S_name
FROM
  (SELECT *
   FROM df_11_1 AS LHS
   WHERE NOT EXISTS
       (SELECT 1
        FROM df_11_2 AS RHS
        WHERE (LHS.S_key = RHS.S_key) ))
