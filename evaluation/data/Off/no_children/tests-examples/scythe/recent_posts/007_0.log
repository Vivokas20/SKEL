[     6.239][MainProcess][INFO] Parsing specification...
[     6.249][MainProcess][INFO] File read
[     6.251][MainProcess][DEBUG] Reading input files...
[     6.276][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/007.csv: ['string', 'datetime64[ns]', 'datetime64[ns]', 'int64']
[     6.288][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/007_o.csv: ['string', 'datetime64[ns]', 'datetime64[ns]', 'int64']
[     6.288][MainProcess][INFO] Parsing sketch...
[     6.288][MainProcess][DEBUG] Sketch creation: Line(T1, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     6.288][MainProcess][DEBUG] Sketch creation: Line(T2, root=['summarise'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[])])
[     6.288][MainProcess][DEBUG] Sketch creation: Line(T3, root=['natural_join'], var=[], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[])])
[    11.010][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 520, 'anti_join': 11, 'left_join': 1, 'union': 1, 'intersect': 4, 'semi_join': 1, 'cross_join': 147186, 'filter': 7650, 'summarise': 44, 'mutate': 4}
[    11.010][MainProcess][DEBUG] {'natural_join': 6.433971368827409e-06, 'natural_join3': 6.433971368827409e-06, 'natural_join4': 6.433971368827409e-06, 'inner_join': 0.0033456651117902527, 'anti_join': 7.07736850571015e-05, 'left_join': 6.433971368827409e-06, 'union': 6.433971368827409e-06, 'intersect': 2.5735885475309636e-05, 'semi_join': 6.433971368827409e-06, 'cross_join': 0.946990509892231, 'filter': 0.04921988097152968, 'summarise': 0.000283094740228406, 'mutate': 2.5735885475309636e-05}
[    11.010][MainProcess][DEBUG] {'natural_join': 6.43397136882741e-06, 'natural_join3': 6.43397136882741e-06, 'natural_join4': 6.43397136882741e-06, 'inner_join': 0.003345665111790253, 'anti_join': 7.077368505710151e-05, 'left_join': 6.43397136882741e-06, 'union': 6.43397136882741e-06, 'intersect': 2.573588547530964e-05, 'semi_join': 6.43397136882741e-06, 'cross_join': 0.9469905098922311, 'filter': 0.049219880971529684, 'summarise': 0.00028309474022840603, 'mutate': 2.573588547530964e-05}
[    11.010][MainProcess][INFO] Building synthesizer...
[    11.044][MainProcess][DEBUG] [Line(T1, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[]),Child([None], type=None, var=[0])]), Line(T2, root=['summarise'], var=[12], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=SummariseCondition, var=[]),Child(['??'], type=Cols, var=[]),Child([None], type=None, var=[0])]), Line(T3, root=['natural_join'], var=[1], children=[Child(['??'], type=Table, var=[]),Child(['??'], type=Table, var=[]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[   134.459][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 169 constraints
[   160.774][MainProcess][DEBUG] Enumeration time: 149.76308584213257
[   233.152][MainProcess][DEBUG] Synthesis time: 72.37815451622009
[   233.152][MainProcess][INFO] Solution found: [summarise(input0, 'minFromDate = min(FromDate)', 'Code,Employee'), summarise(input0, 'maxToDate = max(ToDate)', 'Code'), natural_join(line0, line1)]
[   233.479][MainProcess][DEBUG] Solution found using process 0
[   233.480][MainProcess][INFO] Statistics:
[   233.480][MainProcess][INFO] 	Attempted programs: 285 (approx)
[   233.480][MainProcess][INFO] 		Rejected: 284 (approx)
[   233.480][MainProcess][INFO] 		Failed: 0 (approx)
[   233.480][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[   233.480][MainProcess][INFO] 		Redundant lines: 0 (approx)
[   233.480][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[   233.480][MainProcess][INFO] 	Total time spent in enumerator init: 149.763086 (approx)
[   233.480][MainProcess][INFO] 	Total time spent in enumerator: 67.932720 (approx)
[   233.480][MainProcess][INFO] 		Enumerated 4.195327 programs/s avg. (just enumeration time)
[   233.480][MainProcess][INFO] 		Enumerated 1.229488 programs/s avg. (overall)
[   233.480][MainProcess][INFO] 	Total time spent in evaluation & testing: 4.152861 (approx)
[   233.481][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.288542 (approx)
[   233.481][MainProcess][INFO] Solution found: [summarise(input0, 'minFromDate = min(FromDate)', 'Code,Employee'), summarise(input0, 'maxToDate = max(ToDate)', 'Code'), natural_join(line0, line1)]
[   233.481][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_007 <- read_csv("tests-examples/scythe/recent_posts/tables/007.csv", col_types = cols("Employee" = col_character(),"FromDate" = col_character(),"ToDate" = col_character(),"Code" = col_integer()))
df_007$FromDate <- mdy(df_007$FromDate)
df_007$ToDate <- mdy(df_007$ToDate)
df_007 <- copy_to(con, df_007)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/007_o.csv", col_types = cols("Employee" = col_character(),"FromDate" = col_character(),"ToDate" = col_character(),"Code" = col_integer()))
expected_output$FromDate <- mdy(expected_output$FromDate)
expected_output$ToDate <- mdy(expected_output$ToDate)

df226 <- df_007 %>% group_by(Code,Employee) %>% summarise(minFromDate = min(FromDate)) %>% ungroup()
df227 <- df_007 %>% group_by(Code) %>% summarise(maxToDate = max(ToDate)) %>% ungroup()
df228 <- inner_join(df226, df227, na_matches="never")
out <- df228 %>% select(Employee, FromDate = minFromDate, ToDate = maxToDate, Code)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT Employee,
       minFromDate AS FromDate,
       maxToDate AS ToDate,
       Code
FROM
  (SELECT LHS.Code AS Code,
          Employee,
          minFromDate,
          maxToDate
   FROM
     (SELECT Code,
             Employee,
             MIN(FromDate) AS minFromDate
      FROM df_007
      GROUP BY Code,
               Employee) AS LHS
   INNER JOIN
     (SELECT Code,
             MAX(ToDate) AS maxToDate
      FROM df_007
      GROUP BY Code) AS RHS ON (LHS.Code = RHS.Code))
