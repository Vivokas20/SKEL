[     2.353][MainProcess][INFO] Parsing specification...
[     2.359][MainProcess][INFO] File read
[     2.360][MainProcess][DEBUG] Reading input files...
[     2.370][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/aircraft.txt: ['int64', 'string', 'int64']
[     2.377][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/employees.txt: ['int64', 'string', 'Float64']
[     2.382][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/certified.txt: ['int64', 'int64']
[     2.387][MainProcess][INFO] Inferred data types for table tests-examples/textbook/tables/24.out: ['string']
[     2.387][MainProcess][INFO] Parsing sketch...
[     2.388][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[]),Child([2], type=Table, var=[])])
[     2.388][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Line, var=[]),Child(['salary >= 80000'], type=Unknown, var=[])])
[     2.437][MainProcess][DEBUG] {'natural_join': 9, 'natural_join3': 27, 'natural_join4': 81, 'inner_join': 711, 'anti_join': 198, 'left_join': 9, 'union': 9, 'intersect': 54, 'semi_join': 9, 'cross_join': 54, 'filter': 18}
[     2.437][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     2.437][MainProcess][DEBUG] {'natural_join': 0.007633587786259542, 'natural_join3': 0.022900763358778626, 'natural_join4': 0.06870229007633588, 'inner_join': 0.6030534351145038, 'anti_join': 0.16793893129770993, 'left_join': 0.007633587786259542, 'union': 0.007633587786259542, 'intersect': 0.04580152671755725, 'semi_join': 0.007633587786259542, 'cross_join': 0.04580152671755725, 'filter': 0.015267175572519083}
[     2.437][MainProcess][INFO] Building synthesizer...
[     2.439][MainProcess][DEBUG] [Line(T1, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([0], type=Table, var=[[131], [132], [133]]),Child([1], type=Table, var=[[131], [132], [133]]),Child([2], type=Table, var=[[131], [132], [133]]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([0], type=Line, var=[[135], [128]]),Child(['salary >= 80000'], type=Unknown, var=[[135], [128]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.534][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 134 constraints
[     2.540][MainProcess][DEBUG] Enumeration time: 0.10318875312805176
[     2.595][MainProcess][DEBUG] Synthesis time: 0.05477547645568848
[     2.595][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, 'salary >= 80000')]
[     2.596][MainProcess][DEBUG] Solution found using process 0
[     2.596][MainProcess][INFO] Statistics:
[     2.597][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.597][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.597][MainProcess][INFO] 		Failed: 0 (approx)
[     2.597][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.597][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.597][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.597][MainProcess][INFO] 	Total time spent in enumerator init: 0.103189 (approx)
[     2.597][MainProcess][INFO] 	Total time spent in enumerator: 0.001104 (approx)
[     2.597][MainProcess][INFO] 		Enumerated 905.701576 programs/s avg. (just enumeration time)
[     2.597][MainProcess][INFO] 		Enumerated 0.518418 programs/s avg. (overall)
[     2.597][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.050819 (approx)
[     2.597][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.597][MainProcess][INFO] Solution found: [natural_join3(input0, input1, input2), filter(line0, 'salary >= 80000')]
[     2.597][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_aircraft <- read_csv("tests-examples/textbook/tables/aircraft.txt", col_types = cols("aid" = col_integer(),"aname" = col_character(),"crusingrange" = col_integer()))
df_aircraft <- copy_to(con, df_aircraft)
df_employees <- read_csv("tests-examples/textbook/tables/employees.txt", col_types = cols("eid" = col_integer(),"ename" = col_character(),"salary" = col_double()))
df_employees <- copy_to(con, df_employees)
df_certified <- read_csv("tests-examples/textbook/tables/certified.txt", col_types = cols("eid" = col_integer(),"aid" = col_integer()))
df_certified <- copy_to(con, df_certified)
expected_output <- read_csv("tests-examples/textbook/tables/24.out", col_types = cols("aname" = col_character()))

df3 <- full_join(df_aircraft, df_employees, by=character(), na_matches="never") %>% inner_join(df_certified, na_matches="never")
df4 <- df3 %>% filter(salary >= 80000)
out <- df4 %>% select(aname) %>% distinct()


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT aname
FROM
  (SELECT LHS.aid AS aid,
          aname,
          crusingrange,
          LHS.eid AS eid,
          ename,
          salary
   FROM
     (SELECT aid,
             aname,
             crusingrange,
             eid,
             ename,
             salary
      FROM df_aircraft AS LHS
      CROSS JOIN df_employees AS RHS) AS LHS
   INNER JOIN df_certified AS RHS ON (LHS.aid = RHS.aid
                                      AND LHS.eid = RHS.eid))
WHERE (salary >= 80000.0)
