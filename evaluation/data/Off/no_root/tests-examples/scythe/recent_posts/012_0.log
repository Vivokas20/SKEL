[     2.380][MainProcess][INFO] Parsing specification...
[     2.387][MainProcess][INFO] File read
[     2.388][MainProcess][DEBUG] Reading input files...
[     2.401][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/012.csv: ['int64', 'int64', 'int64', 'string', 'string', 'string']
[     2.410][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/012_o.csv: ['int64', 'int64', 'string', 'string', 'string']
[     2.410][MainProcess][INFO] Parsing sketch...
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(["concatvariants = string_agg(variants, ', ')"], type=Unknown, var=[]),Child(['product_name, code'], type=Unknown, var=[])])
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(["concatvariants_value = string_agg(variants_value, ', ')"], type=Unknown, var=[]),Child(['product_variants_id, code'], type=Unknown, var=[])])
[     2.411][MainProcess][DEBUG] Sketch creation: Line(T3, root=['??'], var=[], children=[Child([0], type=Line, var=[]),Child([1], type=Line, var=[])])
[     2.533][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 449, 'anti_join': 22, 'left_join': 1, 'union': 1, 'intersect': 6, 'semi_join': 1, 'cross_join': 2948, 'unite': 36, 'summarise': 176, 'mutate': 8}
[     2.533][MainProcess][DEBUG] {'natural_join': 0.0002738975623116954, 'natural_join3': 0.0002738975623116954, 'natural_join4': 0.0002738975623116954, 'inner_join': 0.12298000547795125, 'anti_join': 0.006025746370857299, 'left_join': 0.0002738975623116954, 'union': 0.0002738975623116954, 'intersect': 0.0016433853738701725, 'semi_join': 0.0002738975623116954, 'cross_join': 0.8074500136948781, 'unite': 0.009860312243221035, 'summarise': 0.04820597096685839, 'mutate': 0.0021911804984935633}
[     2.534][MainProcess][DEBUG] {'natural_join': 0.0002738975623116954, 'natural_join3': 0.0002738975623116954, 'natural_join4': 0.0002738975623116954, 'inner_join': 0.12298000547795125, 'anti_join': 0.006025746370857299, 'left_join': 0.0002738975623116954, 'union': 0.0002738975623116954, 'intersect': 0.0016433853738701725, 'semi_join': 0.0002738975623116954, 'cross_join': 0.8074500136948781, 'unite': 0.009860312243221035, 'summarise': 0.04820597096685839, 'mutate': 0.0021911804984935633}
[     2.534][MainProcess][INFO] Building synthesizer...
[     2.536][MainProcess][DEBUG] [Line(T1, root=['??'], var=[2, 4, 5, 8, 10, 11, 12], children=[Child([0], type=Table, var=[[3447], [3442], [32, 481]]),Child(["concatvariants = string_agg(variants, ', ')"], type=Unknown, var=[[3447], [3442], [32, 481]]),Child(['product_name, code'], type=Unknown, var=[[3447], [3442], [32, 481]]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[2, 4, 5, 8, 10, 11, 12], children=[Child([0], type=Table, var=[[3447], [3446], [33, 482]]),Child(["concatvariants_value = string_agg(variants_value, ', ')"], type=Unknown, var=[[3447], [3446], [33, 482]]),Child(['product_variants_id, code'], type=Unknown, var=[[3447], [3446], [33, 482]]),Child([None], type=None, var=[0])]), Line(T3, root=['??'], var=[1, 6, 7, 9, 13], children=[Child([0], type=Line, var=[[3449], [3450]]),Child([1], type=Line, var=[[3449], [3450]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])])]
[     2.731][MainProcess][DEBUG] Enumerator for loc 3 constructed using 57 variables and 235 constraints
[     2.744][MainProcess][DEBUG] Enumeration time: 0.21073627471923828
[     2.849][MainProcess][DEBUG] Synthesis time: 0.10473942756652832
[     2.850][MainProcess][INFO] Solution found: [summarise(input0, "concatvariants = string_agg(variants, ', ')", 'code,product_name'), summarise(input0, "concatvariants_value = string_agg(variants_value, ', ')", 'code,product_variants_id'), natural_join(line0, line1)]
[     2.851][MainProcess][DEBUG] Solution found using process 0
[     2.852][MainProcess][INFO] Statistics:
[     2.852][MainProcess][INFO] 	Attempted programs: 2 (approx)
[     2.852][MainProcess][INFO] 		Rejected: 1 (approx)
[     2.852][MainProcess][INFO] 		Failed: 0 (approx)
[     2.852][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.852][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.852][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.852][MainProcess][INFO] 	Total time spent in enumerator init: 0.210736 (approx)
[     2.852][MainProcess][INFO] 	Total time spent in enumerator: 0.005264 (approx)
[     2.852][MainProcess][INFO] 		Enumerated 379.970467 programs/s avg. (just enumeration time)
[     2.852][MainProcess][INFO] 		Enumerated 0.929070 programs/s avg. (overall)
[     2.852][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.094651 (approx)
[     2.852][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.003563 (approx)
[     2.853][MainProcess][INFO] Solution found: [summarise(input0, "concatvariants = string_agg(variants, ', ')", 'code,product_name'), summarise(input0, "concatvariants_value = string_agg(variants_value, ', ')", 'code,product_variants_id'), natural_join(line0, line1)]
[     2.853][MainProcess][INFO] Solution size: 3

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_012 <- read_csv("tests-examples/scythe/recent_posts/tables/012.csv", col_types = cols("ID" = col_integer(),"code" = col_integer(),"product_variants_id" = col_integer(),"product_name" = col_character(),"variants" = col_character(),"variants_value" = col_character()))
df_012 <- copy_to(con, df_012)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/012_o.csv", col_types = cols("code" = col_integer(),"product_variants_id" = col_integer(),"product_name" = col_character(),"variants" = col_character(),"variants_value" = col_character()))

string_agg <- function(v,s) {paste0("", Reduce(function(x, y) paste(x, y, sep = s), v))}

df6 <- df_012 %>% group_by(code,product_name) %>% summarise(concatvariants = string_agg(variants, ', ')) %>% ungroup()
df7 <- df_012 %>% group_by(code,product_variants_id) %>% summarise(concatvariants_value = string_agg(variants_value, ', ')) %>% ungroup()
df8 <- inner_join(df6, df7, na_matches="never")
out <- df8 %>% select(code, product_variants_id, product_name, variants = concatvariants, variants_value = concatvariants_value)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `code`,
       `product_variants_id`,
       `product_name`,
       `concatvariants` AS `variants`,
       `concatvariants_value` AS `variants_value`
FROM
  (SELECT `LHS`.`code` AS `code`,
          `product_name`,
          `concatvariants`,
          `product_variants_id`,
          `concatvariants_value`
   FROM
     (SELECT `code`,
             `product_name`,
             string_agg(`variants`, ', ') AS `concatvariants`
      FROM `df_012`
      GROUP BY `code`,
               `product_name`) AS `LHS`
   INNER JOIN
     (SELECT `code`,
             `product_variants_id`,
             string_agg(`variants_value`, ', ') AS concatvariants_value
      FROM df_012
      GROUP BY code,
               product_variants_id) AS RHS ON (LHS.code = RHS.code))
