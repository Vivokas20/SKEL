[     2.475][MainProcess][INFO] Parsing specification...
[     2.493][MainProcess][INFO] File read
[     2.494][MainProcess][DEBUG] Reading input files...
[     2.513][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/003_1.csv: ['int64', 'string']
[     2.520][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/003_2.csv: ['string', 'string']
[     2.526][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/003_o.csv: ['int64', 'string']
[     2.526][MainProcess][INFO] Parsing sketch...
[     2.526][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child([1], type=Table, var=[]),Child(['item = f2'], type=Unknown, var=[])])
[     2.566][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 136, 'anti_join': 44, 'left_join': 4, 'union': 4, 'intersect': 16, 'semi_join': 4, 'cross_join': 0}
[     2.566][MainProcess][DEBUG] {'natural_join': 0.01694915254237288, 'natural_join3': 0.03389830508474576, 'natural_join4': 0.06779661016949153, 'inner_join': 0.576271186440678, 'anti_join': 0.1864406779661017, 'left_join': 0.01694915254237288, 'union': 0.01694915254237288, 'intersect': 0.06779661016949153, 'semi_join': 0.01694915254237288, 'cross_join': 0.0}
[     2.566][MainProcess][DEBUG] {'natural_join': 0.01694915254237288, 'natural_join3': 0.03389830508474576, 'natural_join4': 0.06779661016949153, 'inner_join': 0.576271186440678, 'anti_join': 0.1864406779661017, 'left_join': 0.01694915254237288, 'union': 0.01694915254237288, 'intersect': 0.06779661016949153, 'semi_join': 0.01694915254237288, 'cross_join': 0.0}
[     2.566][MainProcess][INFO] Building synthesizer...
[     2.567][MainProcess][DEBUG] [Line(T1, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([0], type=Table, var=[[60], [61], [48]]),Child([1], type=Table, var=[[60], [61], [48]]),Child(['item = f2'], type=Unknown, var=[[60], [61], [48]]),Child([None], type=None, var=[0])])]
[     2.608][MainProcess][DEBUG] Enumerator for loc 1 constructed using 15 variables and 56 constraints
[     2.611][MainProcess][DEBUG] Enumeration time: 0.04524111747741699
[     2.659][MainProcess][DEBUG] Synthesis time: 0.04741334915161133
[     2.659][MainProcess][INFO] Solution found: [inner_join(input0, input1, 'item = f2')]
[     2.660][MainProcess][DEBUG] Solution found using process 0
[     2.660][MainProcess][INFO] Statistics:
[     2.660][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.660][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.660][MainProcess][INFO] 		Failed: 0 (approx)
[     2.661][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.661][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.661][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.661][MainProcess][INFO] 	Total time spent in enumerator init: 0.045241 (approx)
[     2.661][MainProcess][INFO] 	Total time spent in enumerator: 0.000669 (approx)
[     2.661][MainProcess][INFO] 		Enumerated 1493.698006 programs/s avg. (just enumeration time)
[     2.661][MainProcess][INFO] 		Enumerated 0.536309 programs/s avg. (overall)
[     2.661][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.044839 (approx)
[     2.661][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.661][MainProcess][INFO] Solution found: [inner_join(input0, input1, 'item = f2')]
[     2.661][MainProcess][INFO] Solution size: 1

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_003_1 <- read_csv("tests-examples/scythe/recent_posts/tables/003_1.csv", col_types = cols("ID" = col_integer(),"item" = col_character()))
df_003_1 <- copy_to(con, df_003_1)
df_003_2 <- read_csv("tests-examples/scythe/recent_posts/tables/003_2.csv", col_types = cols("f1" = col_character(),"f2" = col_character()))
df_003_2 <- copy_to(con, df_003_2)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/003_o.csv", col_types = cols("ID" = col_integer(),"item" = col_character()))

df2 <- inner_join(df_003_1, df_003_2, by=c('item' = 'f2'), suffix = c('', '.other'), na_matches='never') %>% mutate(f2 = item)
out <- df2 %>% select(ID, item = f1) %>% arrange(ID)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT ID,
       f1 AS item
FROM
  (SELECT ID,
          item,
          f1
   FROM df_003_1 AS LHS
   INNER JOIN df_003_2 AS RHS ON (LHS.item = RHS.f2))
ORDER BY ID
