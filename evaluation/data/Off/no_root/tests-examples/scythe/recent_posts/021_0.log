[     2.387][MainProcess][INFO] Parsing specification...
[     2.393][MainProcess][INFO] File read
[     2.394][MainProcess][DEBUG] Reading input files...
[     2.404][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/021.csv: ['string', 'int64']
[     2.409][MainProcess][INFO] Inferred data types for table tests-examples/scythe/recent_posts/tables/021_o.csv: ['int64', 'int64']
[     2.410][MainProcess][INFO] Parsing sketch...
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(['id_product == 22'], type=Unknown, var=[])])
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child([0], type=Line, var=[]),Child(['id_order == id_order.other'], type=Unknown, var=[])])
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T3, root=['??'], var=[], children=[Child([1], type=Line, var=[]),Child(['id_product != 22'], type=Unknown, var=[])])
[     2.410][MainProcess][DEBUG] Sketch creation: Line(T4, root=['??'], var=[], children=[Child([2], type=Line, var=[]),Child(['n = n()'], type=Unknown, var=[]),Child(['id_product'], type=Unknown, var=[])])
[     2.480][MainProcess][DEBUG] {'natural_join': 1, 'natural_join3': 1, 'natural_join4': 1, 'inner_join': 7, 'anti_join': 4, 'left_join': 1, 'union': 1, 'intersect': 2, 'semi_join': 1, 'cross_join': 1256, 'filter': 234, 'summarise': 4, 'mutate': 1}
[     2.480][MainProcess][DEBUG] {'natural_join': 0.0006605019815059445, 'natural_join3': 0.0006605019815059445, 'natural_join4': 0.0006605019815059445, 'inner_join': 0.004623513870541612, 'anti_join': 0.002642007926023778, 'left_join': 0.0006605019815059445, 'union': 0.0006605019815059445, 'intersect': 0.001321003963011889, 'semi_join': 0.0006605019815059445, 'cross_join': 0.8295904887714664, 'filter': 0.154557463672391, 'summarise': 0.002642007926023778, 'mutate': 0.0006605019815059445}
[     2.480][MainProcess][DEBUG] {'natural_join': 0.0006605019815059445, 'natural_join3': 0.0006605019815059445, 'natural_join4': 0.0006605019815059445, 'inner_join': 0.004623513870541612, 'anti_join': 0.002642007926023778, 'left_join': 0.0006605019815059445, 'union': 0.0006605019815059445, 'intersect': 0.001321003963011889, 'semi_join': 0.0006605019815059445, 'cross_join': 0.8295904887714664, 'filter': 0.154557463672391, 'summarise': 0.002642007926023778, 'mutate': 0.0006605019815059445}
[     2.480][MainProcess][INFO] Building synthesizer...
[     2.482][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 11, 13], children=[Child([0], type=Table, var=[[1518], [1283]]),Child(['id_product == 22'], type=Unknown, var=[[1518], [1283]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[2, 4, 5, 8, 10, 12], children=[Child([0], type=Table, var=[[1518], [1520], [1281]]),Child([0], type=Line, var=[[1518], [1520], [1281]]),Child(['id_order == id_order.other'], type=Unknown, var=[[1518], [1520], [1281]]),Child([None], type=None, var=[0])]), Line(T3, root=['??'], var=[1, 6, 7, 9, 11, 13], children=[Child([1], type=Line, var=[[1521], [1284]]),Child(['id_product != 22'], type=Unknown, var=[[1521], [1284]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T4, root=['??'], var=[2, 4, 5, 8, 10, 12], children=[Child([2], type=Line, var=[[1522], [1517], [15, 18, 25]]),Child(['n = n()'], type=Unknown, var=[[1522], [1517], [15, 18, 25]]),Child(['id_product'], type=Unknown, var=[[1522], [1517], [15, 18, 25]]),Child([None], type=None, var=[0])])]
[     3.017][MainProcess][DEBUG] Enumerator for loc 4 constructed using 84 variables and 334 constraints
[     3.081][MainProcess][DEBUG] Enumeration time: 0.6002726554870605
[     3.308][MainProcess][DEBUG] Synthesis time: 0.22693634033203125
[     3.308][MainProcess][INFO] Solution found: [filter(input0, 'id_product == 22'), cross_join(input0, line0, 'id_order == id_order.other'), filter(line1, 'id_product != 22'), summarise(line2, 'n = n()', 'id_product')]
[     3.312][MainProcess][DEBUG] Solution found using process 0
[     3.312][MainProcess][INFO] Statistics:
[     3.312][MainProcess][INFO] 	Attempted programs: 8 (approx)
[     3.312][MainProcess][INFO] 		Rejected: 7 (approx)
[     3.312][MainProcess][INFO] 		Failed: 0 (approx)
[     3.312][MainProcess][INFO] 		Empty outputs: 1 (12.5%) (approx)
[     3.312][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     3.312][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     3.312][MainProcess][INFO] 	Total time spent in enumerator init: 0.600273 (approx)
[     3.312][MainProcess][INFO] 	Total time spent in enumerator: 0.028577 (approx)
[     3.312][MainProcess][INFO] 		Enumerated 279.944536 programs/s avg. (just enumeration time)
[     3.313][MainProcess][INFO] 		Enumerated 3.066967 programs/s avg. (overall)
[     3.313][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.185211 (approx)
[     3.313][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.011816 (approx)
[     3.313][MainProcess][INFO] Solution found: [filter(input0, 'id_product == 22'), cross_join(input0, line0, 'id_order == id_order.other'), filter(line1, 'id_product != 22'), summarise(line2, 'n = n()', 'id_product')]
[     3.313][MainProcess][INFO] Solution size: 4

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_021 <- read_csv("tests-examples/scythe/recent_posts/tables/021.csv", col_types = cols("id_order" = col_character(),"id_product" = col_integer()))
df_021 <- copy_to(con, df_021)
expected_output <- read_csv("tests-examples/scythe/recent_posts/tables/021_o.csv", col_types = cols("product_id" = col_integer(),"count_od2" = col_integer()))

df24 <- df_021 %>% filter(id_product == 22)
df25 <- full_join(df_021, df24, by=character(), suffix = c("", ".other"), na_matches="never") %>% filter(id_order == id_order.other)
df26 <- df25 %>% filter(id_product != 22)
df27 <- df26 %>% group_by(id_product) %>% summarise(n = n()) %>% ungroup()
out <- df27 %>% select(product_id = id_product, count_od2 = n) %>% arrange(count_od2)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT id_product AS product_id,
       n AS count_od2
FROM
  (SELECT id_product,
          COUNT(*) AS n
   FROM
     (SELECT *
      FROM
        (SELECT LHS.id_order AS id_order,
                LHS.id_product AS id_product,
                RHS.id_order AS id_order_other,
                RHS.id_product AS id_product_other
         FROM df_021 AS LHS
         CROSS JOIN
           (SELECT *
            FROM df_021
            WHERE (id_product = 22.0)) AS RHS)
      WHERE (id_order = id_order_other))
   WHERE (id_product != 22.0)
   GROUP BY id_product)
ORDER BY count_od2
