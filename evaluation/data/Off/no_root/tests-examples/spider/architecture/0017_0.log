[     2.493][MainProcess][INFO] Parsing specification...
[     2.501][MainProcess][INFO] File read
[     2.503][MainProcess][DEBUG] Reading input files...
[     2.516][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/architect.csv: ['int64', 'string', 'string', 'string']
[     2.523][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/bridge.csv: ['int64', 'int64', 'string', 'string', 'Float64', 'Float64']
[     2.529][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/0017.csv: ['string']
[     2.529][MainProcess][INFO] Parsing sketch...
[     2.529][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(["nationality == 'American'"], type=Unknown, var=[])])
[     2.530][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Line, var=[]),Child([1], type=Table, var=[]),Child(['id = architect_id'], type=Unknown, var=[])])
[     2.581][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 944, 'anti_join': 148, 'left_join': 4, 'union': 4, 'intersect': 32, 'semi_join': 4, 'cross_join': 128, 'filter': 4}
[     2.581][MainProcess][DEBUG] {'natural_join': 0.0030864197530864196, 'natural_join3': 0.006172839506172839, 'natural_join4': 0.012345679012345678, 'inner_join': 0.7283950617283951, 'anti_join': 0.11419753086419752, 'left_join': 0.0030864197530864196, 'union': 0.0030864197530864196, 'intersect': 0.024691358024691357, 'semi_join': 0.0030864197530864196, 'cross_join': 0.09876543209876543, 'filter': 0.0030864197530864196}
[     2.581][MainProcess][DEBUG] {'natural_join': 0.0030864197530864196, 'natural_join3': 0.006172839506172839, 'natural_join4': 0.012345679012345678, 'inner_join': 0.7283950617283951, 'anti_join': 0.11419753086419752, 'left_join': 0.0030864197530864196, 'union': 0.0030864197530864196, 'intersect': 0.024691358024691357, 'semi_join': 0.0030864197530864196, 'cross_join': 0.09876543209876543, 'filter': 0.0030864197530864196}
[     2.581][MainProcess][INFO] Building synthesizer...
[     2.583][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([0], type=Table, var=[[327], [325]]),Child(["nationality == 'American'"], type=Unknown, var=[[327], [325]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([0], type=Line, var=[[330], [328], [249]]),Child([1], type=Table, var=[[330], [328], [249]]),Child(['id = architect_id'], type=Unknown, var=[[330], [328], [249]]),Child([None], type=None, var=[0])])]
[     2.681][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 136 constraints
[     2.690][MainProcess][DEBUG] Enumeration time: 0.10859465599060059
[     2.750][MainProcess][DEBUG] Synthesis time: 0.06040763854980469
[     2.751][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American'"), inner_join(line0, input1, 'id = architect_id')]
[     2.752][MainProcess][DEBUG] Solution found using process 0
[     2.752][MainProcess][INFO] Statistics:
[     2.752][MainProcess][INFO] 	Attempted programs: 1 (approx)
[     2.752][MainProcess][INFO] 		Rejected: 0 (approx)
[     2.752][MainProcess][INFO] 		Failed: 0 (approx)
[     2.752][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.752][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.752][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.753][MainProcess][INFO] 	Total time spent in enumerator init: 0.108595 (approx)
[     2.753][MainProcess][INFO] 	Total time spent in enumerator: 0.001408 (approx)
[     2.753][MainProcess][INFO] 		Enumerated 710.297036 programs/s avg. (just enumeration time)
[     2.753][MainProcess][INFO] 		Enumerated 0.513230 programs/s avg. (overall)
[     2.753][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.055816 (approx)
[     2.753][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.000000 (approx)
[     2.753][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American'"), inner_join(line0, input1, 'id = architect_id')]
[     2.753][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_architect <- read_csv("tests-examples/spider/architecture/tables/architect.csv", col_types = cols("id" = col_integer(),"name" = col_character(),"nationality" = col_character(),"gender" = col_character()))
df_architect <- copy_to(con, df_architect)
df_bridge <- read_csv("tests-examples/spider/architecture/tables/bridge.csv", col_types = cols("architect_id" = col_integer(),"id" = col_integer(),"name" = col_character(),"location" = col_character(),"length_meters" = col_double(),"length_feet" = col_double()))
df_bridge <- copy_to(con, df_bridge)
expected_output <- read_csv("tests-examples/spider/architecture/tables/0017.csv", col_types = cols("name" = col_character()))

df3 <- df_architect %>% filter(nationality == 'American')
df4 <- inner_join(df3, df_bridge, by=c('id' = 'architect_id'), suffix = c('', '.other'), na_matches='never') %>% mutate(architect_id = id)
out <- df4 %>% select(name = name.other)


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT `name_other` AS `name`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`name` AS `name`,
          `nationality`,
          `gender`,
          `RHS`.`id` AS `id_other`,
          `RHS`.`name` AS `name_other`,
          `location`,
          `length_meters`,
          `length_feet`
   FROM
     (SELECT *
      FROM `df_architect`
      WHERE (`nationality` = 'American')) AS LHS
   INNER JOIN df_bridge AS RHS ON (LHS.id = RHS.architect_id))
