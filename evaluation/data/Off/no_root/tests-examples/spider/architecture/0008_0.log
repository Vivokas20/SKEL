[     2.368][MainProcess][INFO] Parsing specification...
[     2.395][MainProcess][INFO] File read
[     2.397][MainProcess][DEBUG] Reading input files...
[     2.410][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/architect.csv: ['int64', 'string', 'string', 'string']
[     2.417][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/mill.csv: ['int64', 'int64', 'string', 'string', 'string', 'int64', 'string']
[     2.423][MainProcess][INFO] Inferred data types for table tests-examples/spider/architecture/tables/0008.csv: ['string']
[     2.423][MainProcess][INFO] Parsing sketch...
[     2.424][MainProcess][DEBUG] Sketch creation: Line(T1, root=['??'], var=[], children=[Child([0], type=Table, var=[]),Child(["nationality == 'American' | nationality == 'Canadian'"], type=Unknown, var=[])])
[     2.424][MainProcess][DEBUG] Sketch creation: Line(T2, root=['??'], var=[], children=[Child([0], type=Line, var=[]),Child([1], type=Table, var=[]),Child(['architect_id = id'], type=Unknown, var=[])])
[     2.484][MainProcess][DEBUG] {'natural_join': 4, 'natural_join3': 8, 'natural_join4': 16, 'inner_join': 3276, 'anti_join': 184, 'left_join': 4, 'union': 4, 'intersect': 36, 'semi_join': 4, 'cross_join': 8, 'filter': 24}
[     2.485][MainProcess][DEBUG] {'natural_join': 0.0011210762331838565, 'natural_join3': 0.002242152466367713, 'natural_join4': 0.004484304932735426, 'inner_join': 0.9181614349775785, 'anti_join': 0.0515695067264574, 'left_join': 0.0011210762331838565, 'union': 0.0011210762331838565, 'intersect': 0.010089686098654708, 'semi_join': 0.0011210762331838565, 'cross_join': 0.002242152466367713, 'filter': 0.006726457399103139}
[     2.485][MainProcess][DEBUG] {'natural_join': 0.0011210762331838567, 'natural_join3': 0.0022421524663677134, 'natural_join4': 0.004484304932735427, 'inner_join': 0.9181614349775786, 'anti_join': 0.05156950672645741, 'left_join': 0.0011210762331838567, 'union': 0.0011210762331838567, 'intersect': 0.01008968609865471, 'semi_join': 0.0011210762331838567, 'cross_join': 0.0022421524663677134, 'filter': 0.00672645739910314}
[     2.485][MainProcess][INFO] Building synthesizer...
[     2.487][MainProcess][DEBUG] [Line(T1, root=['??'], var=[1, 6, 7, 9, 11], children=[Child([0], type=Table, var=[[900], [893]]),Child(["nationality == 'American' | nationality == 'Canadian'"], type=Unknown, var=[[900], [893]]),Child([None], type=None, var=[0]),Child([None], type=None, var=[0])]), Line(T2, root=['??'], var=[2, 4, 5, 8, 10], children=[Child([0], type=Line, var=[[903], [901], [823]]),Child([1], type=Table, var=[[903], [901], [823]]),Child(['architect_id = id'], type=Unknown, var=[[903], [901], [823]]),Child([None], type=None, var=[0])])]
[     2.606][MainProcess][DEBUG] Enumerator for loc 2 constructed using 34 variables and 137 constraints
[     2.616][MainProcess][DEBUG] Enumeration time: 0.13114070892333984
[     2.700][MainProcess][DEBUG] Synthesis time: 0.08381152153015137
[     2.700][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American' | nationality == 'Canadian'"), inner_join(line0, input1, 'id = architect_id')]
[     2.702][MainProcess][DEBUG] Solution found using process 0
[     2.702][MainProcess][INFO] Statistics:
[     2.702][MainProcess][INFO] 	Attempted programs: 2 (approx)
[     2.703][MainProcess][INFO] 		Rejected: 1 (approx)
[     2.703][MainProcess][INFO] 		Failed: 0 (approx)
[     2.703][MainProcess][INFO] 		Empty outputs: 0 (0.0%) (approx)
[     2.703][MainProcess][INFO] 		Redundant lines: 0 (approx)
[     2.703][MainProcess][INFO] 	Blocked programs: 0 (0.000000 / attempted avg.) (approx)
[     2.703][MainProcess][INFO] 	Total time spent in enumerator init: 0.131141 (approx)
[     2.703][MainProcess][INFO] 	Total time spent in enumerator: 0.004026 (approx)
[     2.703][MainProcess][INFO] 		Enumerated 496.749452 programs/s avg. (just enumeration time)
[     2.703][MainProcess][INFO] 		Enumerated 0.995019 programs/s avg. (overall)
[     2.703][MainProcess][INFO] 	Total time spent in evaluation & testing: 0.075982 (approx)
[     2.703][MainProcess][INFO] 	Total time spent blocking cubes/programs: 0.003036 (approx)
[     2.703][MainProcess][INFO] Solution found: [filter(input0, "nationality == 'American' | nationality == 'Canadian'"), inner_join(line0, input1, 'id = architect_id')]
[     2.703][MainProcess][INFO] Solution size: 2

------------------------------------- R Solution ---------------------------------------

con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")
df_architect <- read_csv("tests-examples/spider/architecture/tables/architect.csv", col_types = cols("id" = col_integer(),"name" = col_character(),"nationality" = col_character(),"gender" = col_character()))
df_architect <- copy_to(con, df_architect)
df_mill <- read_csv("tests-examples/spider/architecture/tables/mill.csv", col_types = cols("architect_id" = col_integer(),"id" = col_integer(),"location" = col_character(),"name" = col_character(),"type" = col_character(),"built_year" = col_integer(),"notes" = col_character()))
df_mill <- copy_to(con, df_mill)
expected_output <- read_csv("tests-examples/spider/architecture/tables/0008.csv", col_types = cols("type" = col_character()))

df4 <- df_architect %>% filter(nationality == 'American' | nationality == 'Canadian')
df5 <- inner_join(df4, df_mill, by=c('id' = 'architect_id'), suffix = c('', '.other'), na_matches='never') %>% mutate(architect_id = id)
out <- df5 %>% select(type) %>% distinct()


+++++++++++++++++++++++++++++++++++++ SQL Solution +++++++++++++++++++++++++++++++++++++

SELECT DISTINCT `type`
FROM
  (SELECT `LHS`.`id` AS `id`,
          `LHS`.`name` AS `name`,
          `nationality`,
          `gender`,
          `RHS`.`id` AS `id_other`,
          `location`,
          `RHS`.`name` AS `name_other`,
          `type`,
          `built_year`,
          `notes`
   FROM
     (SELECT *
      FROM `df_architect`
      WHERE (`nationality` = 'American'
             OR `nationality` = 'Canadian')) AS LHS
   INNER JOIN df_mill AS RHS ON (LHS.id = RHS.architect_id))
