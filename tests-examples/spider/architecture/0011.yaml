db: tests-examples/spider/architecture/tables/db.sqlite
inputs:
- tests-examples/spider/architecture/tables/architect.csv
- tests-examples/spider/architecture/tables/bridge.csv
- tests-examples/spider/architecture/tables/mill.csv
output: tests-examples/spider/architecture/tables/0011.csv
constants:
- '2'
- '1'
functions:
- count
comment: |-
  SELECT T1.id,
         T1.name,
         T1.gender
  FROM architect AS T1
  JOIN bridge AS T2 ON T1.id = T2.architect_id
  GROUP BY T1.id
  HAVING count(*) = 2
  UNION
  SELECT T1.id,
         T1.name,
         T1.gender
  FROM architect AS T1
  JOIN mill AS T2 ON T1.id = T2.architect_id
  GROUP BY T1.id
  HAVING count(*) = 1

sql: |-
  SELECT T1.id,
         T1.name,
         T1.gender
  FROM architect AS T1
  JOIN bridge AS T2 ON T1.id = T2.architect_id
  GROUP BY T1.id
  HAVING count(*) = 2
  UNION
  SELECT T1.id,
         T1.name,
         T1.gender
  FROM architect AS T1
  JOIN mill AS T2 ON T1.id = T2.architect_id
  GROUP BY T1.id
  HAVING count(*) = 1
full_sketch: |
  T1 = inner_join(architect, bridge, id = architect_id)
  T2 = summarise(T1, n = n(), id)
  T3 = filter(T2, n == 2)
  T4 = inner_join(architect, mill, id = architect_id)
  T5 = summarise(T4, n = n(), id)
  T6 = filter(T5, n == 1)
  T7 = union(T3, T6)
  T8 = natural_join(architect, T7)
  out = select distinct(id, name, gender) order by(id)