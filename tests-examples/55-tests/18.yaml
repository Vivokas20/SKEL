inputs:
  - tests-examples/55-tests/tables/18-1.txt
  #  - tests-examples/55-tests/tables/18-2.txt
  - tests-examples/55-tests/tables/18-3.txt
output: tests-examples/55-tests/tables/18.out
functions:
  - max
columns:
  - cost
bools:
  - ==
loc: 2
solution:
  - summarise
  - natural_join3
sql: |
  SELECT P_id,
         S_name
  FROM
    (SELECT *
     FROM
       (SELECT *
        FROM df_18_1 AS LHS
        INNER JOIN df_18_3 AS RHS ON (LHS.S_key = RHS.S_key)) AS LHS
     INNER JOIN
       (SELECT P_id,
               MAX(cost) AS maxcost
        FROM df_18_1
        GROUP BY P_id) AS RHS ON (LHS.P_id = RHS.P_id))
  WHERE (maxcost = cost)
comment: |
  5.2.6 optimal solution

  df3 <- input1 %>% group_by(P_id) %>% summarise(cost = max(cost)) %>% ungroup()
  df4 <- inner_join(input2, input1) %>% inner_join(df3)
  out <- df4 %>% select(P_id, S_name) %>% arrange(P_id)
full_sketch: |
  T1 = summarise(18-1, cost = max(cost), P_id)
  T2 = natural_join(18-1, 18-3, T1)
  out = select(T3, (P_id, S_name), P_id)