inputs:
  - tests-examples/55-tests/tables/aircraft.txt
  - tests-examples/55-tests/tables/employees.txt
  - tests-examples/55-tests/tables/certified.txt
output: tests-examples/55-tests/tables/47.out
constants:
  - 1000
  - 250000
functions:
  - mean
columns:
  - salary
  - crusingrange
bools:
  - '>'
loc: 3
solution:
  - natural_join3
  - summarise
  - filter
comment: |
  5.3.4 optimal solution sql

  SELECT Temp.name, Temp.AvgSalary
  FROM (SELECT A.aid, A.aname AS name, AVG(E.salary) AS AvgSalary
    FROM aircraft A, certified C, employees E
    WHERE A.aid = C.aid AND C.eid = E.eid AND A.crusingrange > 1000
    GROUP BY A.aid, A.aname) AS Temp


  certified <- read.table("tests-examples/55-tests/tables/certified.txt", sep =",", header=T)
  aircraft <- read.table("tests-examples/55-tests/tables/aircraft.txt", sep =",", header=T)
  employees <- read.table("tests-examples/55-tests/tables/employees.txt", sep =",", header=T)
  datout <- read.table("tests-examples/55-tests/tables/47.out", sep =",", header=T)

  out <- inner_join(inner_join(aircraft, certified), employees) %>%
  filter(crusingrange > 1000) %>%
  group_by(aid, aname) %>% summarise(meansalary = mean(salary)) %>%
  filter(meansalary > 250000) %>% select(aid, aname)

  df1 <- inner_join(df_employees, df_certified) %>% inner_join(df_aircraft)
  df2 <- df1 %>% group_by(aid,aname) %>% summarise(meansalary = mean(salary)) %>% ungroup()
  df3 <- df2 %>% filter(meansalary <= 1000 | meansalary > 250000)
  out <- df3 %>% select(aid, aname) %>% arrange(aid)
