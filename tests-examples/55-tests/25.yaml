inputs:
  - tests-examples/55-tests/tables/aircraft.txt
  - tests-examples/55-tests/tables/certified.txt
output: tests-examples/55-tests/tables/25.out
constants:
  - 3
functions:
  - n
  - max
columns:
  - crusingrange
bools:
  - '>'
loc: 4
solution:
  - summarise
  - natural_join3
  - filter
  - summarise
comment: |
  5.3.2 optimal solution sql

  SELECT C.eid, MAX(A.crusingrange)
  FROM  certified C, aircraft A
  WHERE C.aid = A.aid
  GROUP BY C.eid
  HAVING   COUNT(*)  > 3


  out <- inner_join(
  inner_join(certified, aircraft) %>%
  group_by(eid)  %>% summarise(maxcrusingrange = max(crusingrange)),
  filter(
  inner_join(certified,  aircraft) %>%
  group_by(eid) %>% summarise(n = n()), n >3)) %>% select(eid)

  ALTERNATIVE SOLUTION?

  df1 <- bind_rows(input2, input1)
  df2 <- df1 %>% group_by(aname, eid) %>% summarise(n = n())
  df3 <- df2 %>% ungroup() %>% filter(n > 3)
  out <- df3 %>% ungroup() %>% select(eid)

  ALTERNATIVE SOLUTION?

  df1 <- input2 %>% group_by(eid) %>% summarise(n = n()) %>% ungroup()
  df2 <- inner_join(inner_join(df1, input2), input1)
  df3 <- df2 %>% filter(n > 3 | crusingrange <= 3)
  df4 <- df3 %>% group_by(crusingrange, eid) %>% summarise(maxcrusingrange = max(crusingrange)) %>% ungroup()
  out <- df4 %>% select(eid) %>% distinct()
#full_sketch: |
#  T1 = natural_join(certified, aircraft)
#  T2 = summarise(T1, meancost = mean(cost), (P_id, S_name))
#  T3 = inner_join(T1, T2, ('P_id' = 'P_id','S_name' = 'P_id'))
#  T4 = filter(T3, S_name != 'SN1' & meancost > cost)
#  out = select(T4, (P_id, S_name = S_name.other), P_id)