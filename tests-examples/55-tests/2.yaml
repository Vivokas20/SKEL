inputs:
  - tests-examples/55-tests/tables/2-1.txt
  - tests-examples/55-tests/tables/2-2.txt
  - tests-examples/55-tests/tables/2-3.txt
  - tests-examples/55-tests/tables/2-4.txt
output: tests-examples/55-tests/tables/2.out
constants:
  - faculty1
  - History
functions:
  - max
columns:
  - F_name
  - major
  - age
bools:
  - ==
loc: 3
solution:
  - natural_join4
  - filter
  - summarise
sql: |
  SELECT DISTINCT MAX(i1.age) OVER () AS maxage
  FROM
    df_2_1 AS i1
    NATURAL JOIN df_2_2 AS i2
    NATURAL JOIN df_2_3 AS i3
    NATURAL JOIN df_2_4 AS i4
  WHERE i1.F_name = 'faculty1' OR i1.major = 'History'
comment: |
  # 5.1.2 optimal solution

  inner_join(class,enroll) %>% inner_join(faculty)  %>% inner_join(student) %>%
  filter (F_name == "faculty1" | major == "History") %>%
  summarize(age = max(age))

  df1 <- inner_join(inner_join(inner_join(input4, input2), input1), input3)
  df2 <- df1 %>% filter(major != 'History' & F_name == 'faculty1')
  df3 <- df2 %>% group_by(F_name) %>% summarise(maxage = max(age)) %>% ungroup()
  out <- df3 %>% select(maxage) %>% distinct()
full_sketch: |
  T1 = natural_join(2-1, 2-2, 2-3, 2-4)
  T2 = filter(T1, F_name == 'faculty1' & major != 'History')
  T3 = summarise(T2, maxage = max(age))
  out = select(T3, maxage)
