inputs:
  - tests-examples/55-tests/tables/9-1.txt
  - tests-examples/55-tests/tables/9-2.txt
output: tests-examples/55-tests/tables/9.out
constants:
  - R128
functions:
  - n
columns:
  - Room
bools:
  - ==
loc: 4
solution:
  - natural_join
  - summarise
  - filter
  - anti_join
sql: |
  SELECT F_name,
         n
  FROM
    (SELECT *
     FROM
       (SELECT F_name,
               ID_key,
               COUNT() AS n
        FROM
          (SELECT LHS.ID_class AS ID_class,
                  LHS.ID_key AS ID_key,
                  LHS.Room AS Room,
                  RHS.F_name AS F_name
           FROM df_9_1 AS LHS
           LEFT JOIN df_9_2 AS RHS ON (LHS.ID_key = RHS.ID_key))
        GROUP BY F_name,
                 ID_key) AS LHS
     WHERE NOT EXISTS
         (SELECT 1
          FROM
            (SELECT *
             FROM df_9_1
             WHERE (Room != 'R128')) AS RHS
          WHERE (LHS.ID_key = RHS.ID_key) ))
comment: |
  5.1.9 optimal solution

  df1 <- inner_join(faculty,class) %>%
  filter(Room  == "R128") %>%
  group_by(F_name) %>% summarise (n = n())
  df2 <- inner_join(faculty,class)  %>%
  group_by(F_name) %>% summarise (n = n())
  out <- inner_join(df1,df2)

  df1 <- inner_join(input2, input1)
  df2 <- df1 %>% group_by(F_name, ID_key) %>% summarise(n = n()) %>% ungroup()
  df3 <- input1 %>% filter(Room != 'R128')
  df4 <- anti_join(df2, df3)
  out <- df4 %>% select(F_name, n) %>% distinct()
