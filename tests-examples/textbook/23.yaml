db: tests-examples/textbook/tables/23.sqlite
inputs:
  - tests-examples/textbook/tables/23-1.txt
  - tests-examples/textbook/tables/23-2.txt
  - tests-examples/textbook/tables/23-3.txt
output: tests-examples/textbook/tables/23.out
constants:
  - green
  - red
functions:
  - max
columns:
  - cost
  - color
sql: |
  SELECT S.sname, MAX(C.cost) as MaxCost
  FROM Suppliers S, Parts P, Catalog C
  WHERE P.pid = C.pid AND C.sid = S.sid
  GROUP BY S.sname, S.sid
  HAVING ANY (P.color=’green’) AND ANY (P.color = ’red’)
comment: |
  5.2.11 optimal solution

  input=inner_join(parts,catalog) %>% inner_join(suppliers)

  df1=input %>%
  filter(color == "green") %>% select(sname)
  df2=input %>%
      filter(color == "red") %>% select(sname)
  df3=intersect(df1,df2)
  # until here is question 5.2.8
  input %>%
  group_by(sname,pname) %>% summarize(n = max(cost)) %>%
  filter(n == max(n)) %>%
  # merge the solution from 5.2.8 with 5.2.11
  inner_join(df3)"
full_sketch: |
  T1 = natural_join(23-1, 23-2, 23-3)
  T2 = filter(T1, color == 'green')
  T3 = filter(T1, color == 'red')
  T4 = intersect(T2, T3, S_name)
  T5 = summarise(T1, cost = max(cost), (S_key, S_name))
  T6 = natural_join(T1, T4, T5)
  out = select(S_name, P_name, cost)