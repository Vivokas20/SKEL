db: tests-examples/textbook/tables/27.sqlite
inputs:
  - tests-examples/textbook/tables/employees.txt
  - tests-examples/textbook/tables/certified.txt
  - tests-examples/textbook/tables/aircraft.txt
output: tests-examples/textbook/tables/27.out
constants:
  - 1000
functions:
  - avg
columns:
  - salary
  - crusingrange
bools:
  - '>'
sql: |
  SELECT Temp.name,
           Temp.AvgSalary
    FROM (SELECT A.aid,
                 A.aname AS name,
                 AVG (E.salary) AS AvgSalary
          FROM Aircraft A, Certified C, Employees E
          WHERE A.aid = C.aid
            AND C.eid = E.eid
            AND A.crusingrange > 1000
          GROUP BY A.aid, A.aname
    ) AS Temp
comment: |
  5.3.4 optimal solution sql
  all_equal -> False although equal tables

# full_sketch: |
#   T1 = natural_join(employees, certified, aircraft)
#   T2 = filter(T1, crusingrange > 1000)
#   T3 = summarise(T2, meansalary = mean(salary), (aid, aname))
#   out = select(aname, meansalary)